{"version":3,"sources":["webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/modules/UnimplementedView/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/modules/requestIdleCallback/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/InteractionManager/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/Batchinator/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/FillRateHelper/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/RefreshControl/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/ViewabilityHelper/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/VirtualizeUtils/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/infoLog/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/FlatList/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/FlatList/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/Dimensions/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_Symbol.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/core-js/modules/es6.regexp.replace.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/modules/TextInputState/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/modules/dismissKeyboard/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/Platform/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/modules/ScrollResponder/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/ScrollView/ScrollViewBase.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/ScrollView/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/isPlainObject.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_baseGetTag.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_root.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_freeGlobal.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_getRawTag.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_objectToString.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_getPrototype.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_overArg.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/isObjectLike.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/node_modules/fbjs/lib/performanceNow.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/node_modules/fbjs/lib/performance.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-apollo-hooks/es/internal/SSRContext.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-apollo-hooks/es/utils.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-apollo-hooks/es/queryCache.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-apollo-hooks/es/useQuery.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-apollo-hooks/es/internal/actHack.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/core-js/modules/es6.object.freeze.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/core-js/modules/es6.function.name.js"],"names":["UnimplementedView_UnimplementedView","_Component","subClass","superClass","prototype","Object","create","constructor","__proto__","_inheritsLoose","UnimplementedView","apply","this","arguments","_proto","setNativeProps","render","react_default","a","createElement","View","style","unimplementedViewStyles","props","children","react","modules_UnimplementedView","isSupported","window","requestIdleCallback","cb","options","setTimeout","start","Date","now","didTimeout","timeRemaining","Math","max","cancelIdleCallback","id","clearTimeout","modules_requestIdleCallback","exports_InteractionManager","Events","interactionStart","interactionComplete","runAfterInteractions","task","handle","promise","Promise","resolve","then","bind","done","cancel","createInteractionHandle","clearInteractionHandle","invariant_default","addListener","react_native_Batchinator","Batchinator","callback","delayMS","_delay","_callback","dispose","abort","_taskHandle","schedule","_this","timeoutHandle","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","Info","any_blank_count","any_blank_ms","any_blank_speed_sum","mostly_blank_count","mostly_blank_ms","pixels_blank","pixels_sampled","pixels_scrolled","total_time_spent","sample_count","_listeners","_minSampleCount","_sampleRate","react_native_FillRateHelper","FillRateHelper","warning_default","push","remove","filter","listener","setSampleRate","sampleRate","setMinSampleCount","minSampleCount","getFrameMetrics","_anyBlankStartTime","_enabled","_info","_mostlyBlankStartTime","_samplesStartTime","_getFrameMetrics","random","_resetData","activate","performanceNow_default","deactivateAndFlush","info","target","i","length","source","ownKeys","keys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","forEach","_objectSpread","computeBlankness","state","scrollMetrics","getItemCount","data","dOffset","offset","velocity","visibleLength","round","abs","scrollSpeed","blankTop","first","firstFrame","last","inLayout","min","blankBottom","lastFrame","bottomEdge","blankness","enabled","RefreshControl_RefreshControl","RefreshControl_inheritsLoose","RefreshControl","_this$props","rest","colors","onRefresh","progressBackgroundColor","progressViewOffset","refreshing","size","tintColor","title","titleColor","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","propTypes","exports_RefreshControl","ViewabilityHelper_objectSpread","ViewabilityHelper_defineProperty","_isViewable","viewAreaMode","viewablePercentThreshold","top","bottom","viewportHeight","itemLength","_isEntirelyVisible","pixels","visibleHeight","_getPixelsVisible","react_native_ViewabilityHelper","ViewabilityHelper","config","viewAreaCoveragePercentThreshold","_hasInteracted","_timers","Set","_viewableIndices","_viewableItems","Map","_config","computeViewableItems","itemCount","scrollOffset","renderRange","_this$_config","itemVisiblePercentThreshold","viewableIndices","firstVisible","_ref","JSON","stringify","idx","metrics","onUpdate","createViewToken","onViewableItemsChanged","waitForInteraction","every","v","ii","minimumViewTime","delete","_onUpdateSync","add","resetViewableIndices","recordInteraction","viewableIndicesToCheck","_this2","includes","prevItems","nextItems","map","viewable","changed","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","_ref4","has","_iterator2","_isArray2","_i2","_ref3","_ref5","isViewable","viewableItems","from","values","viewabilityConfig","elementsThatOverlapOffsets","offsets","out","outLength","frame","trailingOffset","kk","newRangeCount","prev","computeWindowedRenderLimits","getFrameMetricsApprox","maxToRenderPerBatch","windowSize","visibleBegin","visibleEnd","overscanLength","fillPreference","overscanBegin","overscanEnd","_elementsThatOverlapO","overscanFirst","overscanLast","visible","newCellCount","maxNewCells","firstWillAddMore","firstShouldIncrement","lastWillAddMore","lastShouldIncrement","Error","react_native_infoLog","_console","console","log","_extends","assign","hasOwnProperty","call","VirtualizedList_objectSpread","VirtualizedList_defineProperty","VirtualizedList_inheritsLoose","_assertThisInitialized","self","ReferenceError","flattenStyle","StyleSheet","flatten","__DEV__","_usedIndexForKey","VirtualizedList_VirtualizedList","_React$PureComponent","VirtualizedList","scrollToEnd","params","animated","veryLast","_getFrameMetricsApprox","_footerLength","_scrollMetrics","_scrollRef","scrollTo","horizontal","x","y","scrollToIndex","getItemLayout","onScrollToIndexFailed","index","viewOffset","viewPosition","_highestMeasuredFrameIndex","averageItemLength","_averageCellLength","highestMeasuredFrameIndex","scrollToItem","item","_this$props2","getItem","_index","scrollToOffset","_nestedChildLists","childList","ref","_viewabilityTuples","t","viewabilityHelper","_updateViewableItems","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getChildContext","virtualizedList","getScrollMetrics","_getScrollMetrics","getOutermostParentListRef","_getOutermostParentListRef","getNestedChildState","_getNestedChildState","registerAsNestedChild","_registerAsNestedChild","unregisterAsNestedChild","_unregisterAsNestedChild","_getCellKey","context","virtualizedCell","cellKey","hasMore","_hasMore","_props","_isNestedWithSameOrientation","existingChildData","get","childListsInCell","_cellKeysToChildListKeys","set","_onUpdateSeparators","newProps","_cellRefs","updateSeparatorProps","_frames","_hasDataChangedSinceEndReached","_hasWarned","_headerLength","_indicesToKeys","_hasDoneInitialScroll","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dt","timestamp","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_captureScrollRef","_defaultRenderScrollComponent","ScrollView","refreshControl","_onCellUnmount","curr","_onLayout","e","_measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","onContentSizeChange","_convertParentScrollMetrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","contentOffset","_this$_convertParentS","perf","prevDt","_fillRateHelper","_computeBlankness","_onScrollBeginDrag","tuple","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","_this$props3","onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","_this$_scrollMetrics","renderAhead","newFirst","newLast","cellKeyForIndex","childListKeys","someChildHasMore","childKey","_createViewToken","_this$props4","keyExtractor","_this$props5","frameType","prop_types_default","shape","number","isRequired","checkPropTypes","__isNative","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","pair","initialState","initialNumToRender","storedState","listKey","frames","componentDidMount","componentWillUnmount","getDerivedStateFromProps","prevState","extraData","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","prevCellKey","_this$props6","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","_loop","VirtualizedList_CellRenderer","undefined","fillRateHelper","onUpdateSeparators","_onCellLayout","onUnmount","parentProps","disableVirtualization","nestedContext","flatStyles","contentContainerStyle","flexWrap","_this$props7","ListEmptyComponent","ListFooterComponent","_this$props8","inverted","styles","horizontallyInverted","verticallyInverted","element","isValidElement","VirtualizedCellWrapper","spacerKey","lastInitialIndex","_this$state","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","_initBlock","firstSpace","warn","_ref6","endFrame","tailSpacerLength","_element","_element2","scrollProps","scrollEventThrottle","invertStickyHeaders","ret","cloneElement","renderScrollComponent","debug","flex","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props9","_this3","UIManager","measureLayout","error","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","baseStyle","position","right","borderColor","borderWidth","f","left","backgroundColor","_this$props10","onEndReached","_this$_scrollMetrics2","distanceFromEnd","_this$state2","_this$_scrollMetrics3","hiPri","distTop","distBottom","scrollingThreshold","_this4","PureComponent","defaultProps","String","contextTypes","string","func","bool","childContextTypes","_React$Component","CellRenderer","_this5","_len","args","_key","separatorProps","highlighted","leadingItem","_separators","highlight","_this5$props","unhighlight","_this5$props2","updateProps","select","_this5$props3","_proto2","_this$props11","renderItem","separators","itemSeparator","cellStyle","rowReverse","columnReverse","row","Component","_React$Component2","_proto3","transform","scaleY","scaleX","flexDirection","react_native_VirtualizedList","FlatList_extends","FlatList_objectSpread","FlatList_defineProperty","numColumns","FlatList_FlatList","FlatList_inheritsLoose","FlatList","_listRef","UNSAFE_componentWillMount","_checkProps","UNSAFE_componentWillReceiveProps","nextProps","_hasWarnedLegacy","_virtualizedListPairs","_captureRef","_getItem","_item","_getItemCount","ceil","_keyExtractor","items","it","join","_renderItem","columnWrapperStyle","_item2","_createOnViewableItemsChanged","legacyImplementation","_pushMultiColumnViewable","arr","react_native_FlatList","__webpack_exports__","__webpack_require__","d","Dimensions","fbjs_lib_ExecutionEnvironment__WEBPACK_IMPORTED_MODULE_0__","debounce__WEBPACK_IMPORTED_MODULE_1__","debounce__WEBPACK_IMPORTED_MODULE_1___default","n","fbjs_lib_invariant__WEBPACK_IMPORTED_MODULE_2__","fbjs_lib_invariant__WEBPACK_IMPORTED_MODULE_2___default","win","devicePixelRatio","innerHeight","innerWidth","screen","dimensions","listeners","dimension","initialDimensions","_update","fontScale","scale","handler","addEventListener","type","removeEventListener","_handler","module","exports","anObject","toObject","toLength","toInteger","advanceStringIndex","regExpExec","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","defined","REPLACE","$replace","maybeCallNative","searchValue","replaceValue","O","fn","regexp","res","rx","S","functionalReplace","global","fullUnicode","unicode","lastIndex","results","result","accumulatedResult","nextSourcePosition","matched","captures","j","namedCaptures","groups","replacerArgs","replacement","getSubstitution","slice","str","tailPos","m","symbols","match","ch","capture","charAt","modules_TextInputState","_currentlyFocusedNode","currentlyFocusedField","document","activeElement","focusTextInput","textFieldNode","focus","blurTextInput","blur","modules_dismissKeyboard","exports_Platform","OS","web","default","emptyObject","modules_ScrollResponder","Mixin","scrollResponderMixinGetInitialState","isTouching","lastMomentumScrollBeginTime","lastMomentumScrollEndTime","observedScrollSinceBecomingResponder","becameResponderWhileAnimating","scrollResponderHandleScrollShouldSetResponder","scrollResponderHandleStartShouldSetResponder","scrollResponderHandleStartShouldSetResponderCapture","scrollResponderIsAnimating","scrollResponderHandleResponderReject","scrollResponderHandleTerminationRequest","scrollResponderHandleTouchEnd","touches","onTouchEnd","scrollResponderHandleResponderRelease","onResponderRelease","currentlyFocusedTextInput","keyboardShouldPersistTaps","onScrollResponderKeyboardDismissed","scrollResponderHandleScroll","scrollResponderHandleResponderGrant","onResponderGrant","scrollResponderHandleScrollBeginDrag","scrollResponderHandleScrollEndDrag","scrollResponderHandleMomentumScrollBegin","onMomentumScrollBegin","scrollResponderHandleMomentumScrollEnd","scrollResponderHandleTouchStart","onTouchStart","scrollResponderHandleTouchMove","onTouchMove","scrollResponderGetScrollableNode","scrollResponderScrollTo","node","scroll","behavior","scrollLeft","scrollTop","scrollResponderScrollWithoutAnimationTo","offsetX","offsetY","scrollResponderZoomTo","rect","scrollResponderFlashScrollIndicators","scrollResponderScrollNativeHandleToKeyboard","nodeHandle","additionalOffset","preventNegativeScrollOffset","additionalScrollOffset","getInnerViewNode","scrollResponderTextInputFocusError","scrollResponderInputMeasureAndScrollToKeyboard","keyboardScreenY","keyboardWillOpenTo","endCoordinates","screenY","scrollOffsetY","componentWillMount","scrollResponderKeyboardWillShow","onKeyboardWillShow","scrollResponderKeyboardWillHide","onKeyboardWillHide","scrollResponderKeyboardDidShow","onKeyboardDidShow","scrollResponderKeyboardDidHide","onKeyboardDidHide","normalizeScrollEvent","scrollHeight","scrollWidth","offsetHeight","offsetWidth","ScrollViewBase_ScrollViewBase","ScrollViewBase","_debouncedOnScrollEnd","debounce_default","_handleScrollEnd","_state","isScrolling","scrollLastTick","_createPreventableScrollHandler","scrollEnabled","preventDefault","_handleScroll","persist","stopPropagation","_shouldEmitScrollEvent","_handleScrollTick","_handleScrollStart","_setViewRef","_viewRef","other","alwaysBounceHorizontal","alwaysBounceVertical","automaticallyAdjustContentInsets","bounces","bouncesZoom","canCancelContentTouches","centerContent","contentInset","contentInsetAdjustmentBehavior","decelerationRate","directionalLockEnabled","endFillColor","indicatorStyle","maximumZoomScale","minimumZoomScale","overScrollMode","pinchGestureEnabled","removeClippedSubviews","scrollIndicatorInsets","scrollPerfTag","scrollsToTop","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","snapToInterval","snapToAlignment","zoomScale","onWheel","compose","scrollDisabled","lastTick","eventThrottle","timeSinceLastTick","touchAction","ScrollView_extends","ScrollView_objectSpread","ScrollView_defineProperty","ScrollView_emptyObject","create_react_class_default","displayName","ViewPropTypes","prop_types","keyboardDismissMode","pagingEnabled","mixins","getInitialState","_scrollViewRef","_innerViewRef","scrollResponder","scrollResponderNode","scrollWithoutAnimationTo","ScrollView_objectWithoutPropertiesLoose","contentSizeChangeProps","_handleContentOnLayout","hasStickyHeaderIndices","Children","child","isSticky","ScrollView_styles","stickyHeader","pagingEnabledChild","contentContainer","collapsable","_setInnerViewRef","contentContainerHorizontal","baseHorizontal","baseVertical","pagingEnabledStyle","pagingEnabledHorizontal","pagingEnabledVertical","onStartShouldSetResponder","onStartShouldSetResponderCapture","onScrollShouldSetResponder","onResponderTerminationRequest","onResponderTerminate","scrollResponderHandleTerminate","onResponderReject","ScrollViewClass","_setScrollViewRef","_e$nativeEvent$layout","component","commonStyle","flexGrow","flexShrink","translateZ","WebkitOverflowScrolling","overflowX","overflowY","zIndex","scrollSnapType","scrollSnapAlign","baseGetTag","getPrototype","isObjectLike","objectTag","funcProto","Function","objectProto","funcToString","toString","objectCtorString","proto","Ctor","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","freeGlobal","freeSelf","root","nativeObjectToString","isOwn","tag","unmasked","overArg","getPrototypeOf","arg","performanceNow","performance","canUseDOM","msPerformance","webkitPerformance","SSRContext","objToKey","isPlainObject_default","sortedObj","sort","reduce","cachedQueriesByClient","WeakMap","getCachedQueriesForClient","client","queriesForClient","getCacheKey","query","printer","useQuery","_temp","_ref$ssr","ssr","_ref$skip","skip","_ref$suspend","suspend","pollInterval","_ref$notifyOnNetworkS","notifyOnNetworkStatusChange","overrideClient","metadata","variables","actualCachePolicy","fetchPolicy","errorPolicy","fetchResults","ApolloContext","ssrManager","ssrInUse","shouldSkip","watchQueryOptions","acc","observableQuery","cacheKey","watchQuery","getCachedObservableQuery","_useState","responseId","setResponseId","currentResult","helpers","fetchMore","refetch","startPolling","stopPolling","updateQuery","errors","getLastResult","loading","networkStatus","bundle_esm","graphQLErrors","partial","invalidateCurrentResult","subscription","subscribe","invalidateCachedObservableQuery","unsubscribe","ensureSupportedFetchPolicy","register","isObject","meta","onFreeze","$freeze","dP","FProto","nameRE"],"mappings":"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","file":"vendors~categories~category~channels~home.js","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport View from '../../exports/View';\nimport React, { Component } from 'react';\n/**\n * Common implementation for a simple stubbed view.\n */\n\n/* eslint-disable react/prop-types */\n\nvar UnimplementedView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(UnimplementedView, _Component);\n\n  function UnimplementedView() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = UnimplementedView.prototype;\n\n  _proto.setNativeProps = function setNativeProps() {// Do nothing.\n    // This method is required in order to use this view as a Touchable* child.\n    // See ensureComponentIsNative.js for more info\n  };\n\n  _proto.render = function render() {\n    return React.createElement(View, {\n      style: [unimplementedViewStyles, this.props.style]\n    }, this.props.children);\n  };\n\n  return UnimplementedView;\n}(Component);\n\nvar unimplementedViewStyles = process.env.NODE_ENV !== 'production' ? {\n  alignSelf: 'flex-start',\n  borderColor: 'red',\n  borderWidth: 1\n} : {};\nexport default UnimplementedView;","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nvar _requestIdleCallback = function _requestIdleCallback(cb, options) {\n  return setTimeout(function () {\n    var start = Date.now();\n    cb({\n      didTimeout: false,\n      timeRemaining: function timeRemaining() {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n}; // $FlowFixMe (TimeoutID type is not recognized by eslint)\n\n\nvar _cancelIdleCallback = function _cancelIdleCallback(id) {\n  clearTimeout(id);\n};\n\nvar isSupported = canUseDOM && typeof window.requestIdleCallback !== 'undefined';\nvar requestIdleCallback = isSupported ? window.requestIdleCallback : _requestIdleCallback;\nvar cancelIdleCallback = isSupported ? window.cancelIdleCallback : _cancelIdleCallback;\nexport default requestIdleCallback;\nexport { cancelIdleCallback };","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport requestIdleCallback, { cancelIdleCallback } from '../../modules/requestIdleCallback';\nvar InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete'\n  },\n\n  /**\n   * Schedule a function to run after all interactions have completed.\n   */\n  runAfterInteractions: function runAfterInteractions(task) {\n    var handle;\n    var promise = new Promise(function (resolve) {\n      handle = requestIdleCallback(function () {\n        if (task) {\n          resolve(task());\n        }\n      });\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: promise.then.bind(promise),\n      cancel: function cancel() {\n        cancelIdleCallback(handle);\n      }\n    };\n  },\n\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle: function createInteractionHandle() {\n    return 1;\n  },\n\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle: function clearInteractionHandle(handle) {\n    invariant(!!handle, 'Must provide a handle to clear.');\n  },\n  addListener: function addListener() {}\n};\nexport default InteractionManager;","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport InteractionManager from '../../../exports/InteractionManager';\n/**\n * A simple class for batching up invocations of a low-pri callback. A timeout is set to run the\n * callback once after a delay, no matter how many times it's scheduled. Once the delay is reached,\n * InteractionManager.runAfterInteractions is used to invoke the callback after any hi-pri\n * interactions are done running.\n *\n * Make sure to cleanup with dispose().  Example:\n *\n *   class Widget extends React.Component {\n *     _batchedSave: new Batchinator(() => this._saveState, 1000);\n *     _saveSate() {\n *       // save this.state to disk\n *     }\n *     componentDidUpdate() {\n *       this._batchedSave.schedule();\n *     }\n *     componentWillUnmount() {\n *       this._batchedSave.dispose();\n *     }\n *     ...\n *   }\n */\n\nvar Batchinator =\n/*#__PURE__*/\nfunction () {\n  function Batchinator(callback, delayMS) {\n    this._delay = delayMS;\n    this._callback = callback;\n  }\n  /*\n   * Cleanup any pending tasks.\n   *\n   * By default, if there is a pending task the callback is run immediately. Set the option abort to\n   * true to not call the callback if it was pending.\n   */\n\n\n  var _proto = Batchinator.prototype;\n\n  _proto.dispose = function dispose(options) {\n    if (options === void 0) {\n      options = {\n        abort: false\n      };\n    }\n\n    if (this._taskHandle) {\n      this._taskHandle.cancel();\n\n      if (!options.abort) {\n        this._callback();\n      }\n\n      this._taskHandle = null;\n    }\n  };\n\n  _proto.schedule = function schedule() {\n    var _this = this;\n\n    if (this._taskHandle) {\n      return;\n    }\n\n    var timeoutHandle = setTimeout(function () {\n      _this._taskHandle = InteractionManager.runAfterInteractions(function () {\n        // Note that we clear the handle before invoking the callback so that if the callback calls\n        // schedule again, it will actually schedule another task.\n        _this._taskHandle = null;\n\n        _this._callback();\n      });\n    }, this._delay);\n    this._taskHandle = {\n      cancel: function cancel() {\n        return clearTimeout(timeoutHandle);\n      }\n    };\n  };\n\n  return Batchinator;\n}();\n\nexport default Batchinator;","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport performanceNow from 'fbjs/lib/performanceNow';\nimport warning from 'fbjs/lib/warning';\n\nvar Info = function Info() {\n  this.any_blank_count = 0;\n  this.any_blank_ms = 0;\n  this.any_blank_speed_sum = 0;\n  this.mostly_blank_count = 0;\n  this.mostly_blank_ms = 0;\n  this.pixels_blank = 0;\n  this.pixels_sampled = 0;\n  this.pixels_scrolled = 0;\n  this.total_time_spent = 0;\n  this.sample_count = 0;\n};\n\nvar DEBUG = false;\nvar _listeners = [];\nvar _minSampleCount = 10;\n\nvar _sampleRate = DEBUG ? 1 : null;\n/**\n * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n *\n * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n * `SceneTracker.getActiveScene` to determine the context of the events.\n */\n\n\nvar FillRateHelper =\n/*#__PURE__*/\nfunction () {\n  FillRateHelper.addListener = function addListener(callback) {\n    warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');\n\n    _listeners.push(callback);\n\n    return {\n      remove: function remove() {\n        _listeners = _listeners.filter(function (listener) {\n          return callback !== listener;\n        });\n      }\n    };\n  };\n\n  FillRateHelper.setSampleRate = function setSampleRate(sampleRate) {\n    _sampleRate = sampleRate;\n  };\n\n  FillRateHelper.setMinSampleCount = function setMinSampleCount(minSampleCount) {\n    _minSampleCount = minSampleCount;\n  };\n\n  function FillRateHelper(getFrameMetrics) {\n    this._anyBlankStartTime = null;\n    this._enabled = false;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n\n    this._resetData();\n  }\n\n  var _proto = FillRateHelper.prototype;\n\n  _proto.activate = function activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug('FillRateHelper: activate');\n      this._samplesStartTime = performanceNow();\n    }\n  };\n\n  _proto.deactivateAndFlush = function deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n\n    var start = this._samplesStartTime; // const for flow\n\n    if (start == null) {\n      DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n      return;\n    }\n\n    if (this._info.sample_count < _minSampleCount) {\n      // Don't bother with under-sampled events.\n      this._resetData();\n\n      return;\n    }\n\n    var total_time_spent = performanceNow() - start;\n\n    var info = _objectSpread({}, this._info, {\n      total_time_spent: total_time_spent\n    });\n\n    if (DEBUG) {\n      var derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n      };\n\n      for (var key in derived) {\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n\n      console.debug('FillRateHelper deactivateAndFlush: ', {\n        derived: derived,\n        info: info\n      });\n    }\n\n    _listeners.forEach(function (listener) {\n      return listener(info);\n    });\n\n    this._resetData();\n  };\n\n  _proto.computeBlankness = function computeBlankness(props, state, scrollMetrics) {\n    if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n      return 0;\n    }\n\n    var dOffset = scrollMetrics.dOffset,\n        offset = scrollMetrics.offset,\n        velocity = scrollMetrics.velocity,\n        visibleLength = scrollMetrics.visibleLength; // Denominator metrics that we track for all events - most of the time there is no blankness and\n    // we want to capture that.\n\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    var scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n    // Whether blank now or not, record the elapsed time blank if we were blank last time.\n\n    var now = performanceNow();\n\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n\n    this._anyBlankStartTime = null;\n\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n\n    this._mostlyBlankStartTime = null;\n    var blankTop = 0;\n    var first = state.first;\n\n    var firstFrame = this._getFrameMetrics(first);\n\n    while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n      firstFrame = this._getFrameMetrics(first);\n      first++;\n    } // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n    // as blank.\n\n\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n    }\n\n    var blankBottom = 0;\n    var last = state.last;\n\n    var lastFrame = this._getFrameMetrics(last);\n\n    while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n      lastFrame = this._getFrameMetrics(last);\n      last--;\n    } // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n    // footer as blank.\n\n\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      var bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n    }\n\n    var pixels_blank = Math.round(blankTop + blankBottom);\n    var blankness = pixels_blank / visibleLength;\n\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n\n    return blankness;\n  };\n\n  _proto.enabled = function enabled() {\n    return this._enabled;\n  };\n\n  _proto._resetData = function _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  };\n\n  return FillRateHelper;\n}();\n\nexport default FillRateHelper;","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport ColorPropType from '../ColorPropType';\nimport View from '../View';\nimport ViewPropTypes from '../ViewPropTypes';\nimport { arrayOf, bool, func, number, oneOf, string } from 'prop-types';\nimport React, { Component } from 'react';\n\nvar RefreshControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(RefreshControl, _Component);\n\n  function RefreshControl() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = RefreshControl.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        colors = _this$props.colors,\n        enabled = _this$props.enabled,\n        onRefresh = _this$props.onRefresh,\n        progressBackgroundColor = _this$props.progressBackgroundColor,\n        progressViewOffset = _this$props.progressViewOffset,\n        refreshing = _this$props.refreshing,\n        size = _this$props.size,\n        tintColor = _this$props.tintColor,\n        title = _this$props.title,\n        titleColor = _this$props.titleColor,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"colors\", \"enabled\", \"onRefresh\", \"progressBackgroundColor\", \"progressViewOffset\", \"refreshing\", \"size\", \"tintColor\", \"title\", \"titleColor\"]);\n\n    return React.createElement(View, rest);\n  };\n\n  return RefreshControl;\n}(Component);\n\nRefreshControl.propTypes = process.env.NODE_ENV !== \"production\" ? _objectSpread({}, ViewPropTypes, {\n  colors: arrayOf(ColorPropType),\n  enabled: bool,\n  onRefresh: func,\n  progressBackgroundColor: ColorPropType,\n  progressViewOffset: number,\n  refreshing: bool.isRequired,\n  size: oneOf([0, 1]),\n  tintColor: ColorPropType,\n  title: string,\n  titleColor: ColorPropType\n}) : {};\nexport default RefreshControl;","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport invariant from 'fbjs/lib/invariant';\n\n/**\n * A Utility class for calculating viewable items based on current metrics like scroll position and\n * layout.\n *\n * An item is said to be in a \"viewable\" state when any of the following\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n * is true):\n *\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n *   visible in the view area >= `itemVisiblePercentThreshold`.\n * - Entirely visible on screen\n */\nvar ViewabilityHelper =\n/*#__PURE__*/\nfunction () {\n  /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an error\n   * found when Flow v0.63 was deployed. To see the error delete this comment\n   * and run Flow. */\n  function ViewabilityHelper(config) {\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n  /**\n   * Cleanup, e.g. on unmount. Clears any pending timers.\n   */\n\n\n  var _proto = ViewabilityHelper.prototype;\n\n  _proto.dispose = function dispose() {\n    this._timers.forEach(clearTimeout);\n  }\n  /**\n   * Determines which items are viewable based on the current metrics and config.\n   */\n  ;\n\n  _proto.computeViewableItems = function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n    var _this$_config = this._config,\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n    invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n    var viewableIndices = [];\n\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n\n    var firstVisible = -1;\n\n    var _ref = renderRange || {\n      first: 0,\n      last: itemCount - 1\n    },\n        first = _ref.first,\n        last = _ref.last;\n\n    invariant(last < itemCount, 'Invalid render range ' + JSON.stringify({\n      renderRange: renderRange,\n      itemCount: itemCount\n    }));\n\n    for (var idx = first; idx <= last; idx++) {\n      var metrics = getFrameMetrics(idx);\n\n      if (!metrics) {\n        continue;\n      }\n\n      var top = metrics.offset - scrollOffset;\n      var bottom = top + metrics.length;\n\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n\n    return viewableIndices;\n  }\n  /**\n   * Figures out which items are viewable and how that has changed from before and calls\n   * `onViewableItemsChanged` as appropriate.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n    var _this = this;\n\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n      return;\n    }\n\n    var viewableIndices = [];\n\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n    }\n\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n      return v === viewableIndices[ii];\n    })) {\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n      // extra work in those cases.\n      return;\n    }\n\n    this._viewableIndices = viewableIndices;\n\n    if (this._config.minimumViewTime) {\n      var handle = setTimeout(function () {\n        _this._timers.delete(handle);\n\n        _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n      }, this._config.minimumViewTime);\n\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n    }\n  }\n  /**\n   * clean-up cached _viewableIndices to evaluate changed items on next update\n   */\n  ;\n\n  _proto.resetViewableIndices = function resetViewableIndices() {\n    this._viewableIndices = [];\n  }\n  /**\n   * Records that an interaction has happened even if there has been no scroll.\n   */\n  ;\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._hasInteracted = true;\n  };\n\n  _proto._onUpdateSync = function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n    var _this2 = this;\n\n    // Filter out indices that have gone out of view since this call was scheduled.\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n      return _this2._viewableIndices.includes(ii);\n    });\n    var prevItems = this._viewableItems;\n    var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n      var viewable = createViewToken(ii, true);\n      return [viewable.key, viewable];\n    }));\n    var changed = [];\n\n    for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var _ref4 = _ref2,\n          key = _ref4[0],\n          viewable = _ref4[1];\n\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n\n    for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var _ref5 = _ref3,\n          key = _ref5[0],\n          viewable = _ref5[1];\n\n      if (!nextItems.has(key)) {\n        changed.push(_objectSpread({}, viewable, {\n          isViewable: false\n        }));\n      }\n    }\n\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed: changed,\n        viewabilityConfig: this._config\n      });\n    }\n  };\n\n  return ViewabilityHelper;\n}();\n\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nexport default ViewabilityHelper;","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport invariant from 'fbjs/lib/invariant';\n/**\n * Used to find the indices of the frames that overlap the given offsets. Useful for finding the\n * items that bound different windows of content, such as the visible area or the buffered overscan\n * area.\n */\n\nfunction elementsThatOverlapOffsets(offsets, itemCount, getFrameMetrics) {\n  var out = [];\n  var outLength = 0;\n\n  for (var ii = 0; ii < itemCount; ii++) {\n    var frame = getFrameMetrics(ii);\n    var trailingOffset = frame.offset + frame.length;\n\n    for (var kk = 0; kk < offsets.length; kk++) {\n      if (out[kk] == null && trailingOffset >= offsets[kk]) {\n        out[kk] = ii;\n        outLength++;\n\n        if (kk === offsets.length - 1) {\n          invariant(outLength === offsets.length, 'bad offsets input, should be in increasing order: %s', JSON.stringify(offsets));\n          return out;\n        }\n      }\n    }\n  }\n\n  return out;\n}\n/**\n * Computes the number of elements in the `next` range that are new compared to the `prev` range.\n * Handy for calculating how many new items will be rendered when the render window changes so we\n * can restrict the number of new items render at once so that content can appear on the screen\n * faster.\n */\n\n\nfunction newRangeCount(prev, next) {\n  return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));\n}\n/**\n * Custom logic for determining which items should be rendered given the current frame and scroll\n * metrics, as well as the previous render state. The algorithm may evolve over time, but generally\n * prioritizes the visible area first, then expands that with overscan regions ahead and behind,\n * biased in the direction of scroll.\n */\n\n\nfunction computeWindowedRenderLimits(props, prev, getFrameMetricsApprox, scrollMetrics) {\n  var data = props.data,\n      getItemCount = props.getItemCount,\n      maxToRenderPerBatch = props.maxToRenderPerBatch,\n      windowSize = props.windowSize;\n  var itemCount = getItemCount(data);\n\n  if (itemCount === 0) {\n    return prev;\n  }\n\n  var offset = scrollMetrics.offset,\n      velocity = scrollMetrics.velocity,\n      visibleLength = scrollMetrics.visibleLength; // Start with visible area, then compute maximum overscan region by expanding from there, biased\n  // in the direction of scroll. Total overscan area is capped, which should cap memory consumption\n  // too.\n\n  var visibleBegin = Math.max(0, offset);\n  var visibleEnd = visibleBegin + visibleLength;\n  var overscanLength = (windowSize - 1) * visibleLength; // Considering velocity seems to introduce more churn than it's worth.\n\n  var leadFactor = 0.5; // Math.max(0, Math.min(1, velocity / 25 + 0.5));\n\n  var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';\n  var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);\n  var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);\n  var lastItemOffset = getFrameMetricsApprox(itemCount - 1).offset;\n\n  if (lastItemOffset < overscanBegin) {\n    // Entire list is before our overscan window\n    return {\n      first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),\n      last: itemCount - 1\n    };\n  } // Find the indices that correspond to the items at the render boundaries we're targeting.\n\n\n  var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props.getItemCount(props.data), getFrameMetricsApprox),\n      overscanFirst = _elementsThatOverlapO[0],\n      first = _elementsThatOverlapO[1],\n      last = _elementsThatOverlapO[2],\n      overscanLast = _elementsThatOverlapO[3];\n\n  overscanFirst = overscanFirst == null ? 0 : overscanFirst;\n  first = first == null ? Math.max(0, overscanFirst) : first;\n  overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;\n  last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;\n  var visible = {\n    first: first,\n    last: last\n  }; // We want to limit the number of new cells we're rendering per batch so that we can fill the\n  // content on the screen quickly. If we rendered the entire overscan window at once, the user\n  // could be staring at white space for a long time waiting for a bunch of offscreen content to\n  // render.\n\n  var newCellCount = newRangeCount(prev, visible);\n\n  while (true) {\n    if (first <= overscanFirst && last >= overscanLast) {\n      // If we fill the entire overscan range, we're done.\n      break;\n    }\n\n    var maxNewCells = newCellCount >= maxToRenderPerBatch;\n    var firstWillAddMore = first <= prev.first || first > prev.last;\n    var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);\n    var lastWillAddMore = last >= prev.last || last < prev.first;\n    var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);\n\n    if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {\n      // We only want to stop if we've hit maxNewCells AND we cannot increment first or last\n      // without rendering new items. This let's us preserve as many already rendered items as\n      // possible, reducing render churn and keeping the rendered overscan range as large as\n      // possible.\n      break;\n    }\n\n    if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {\n      if (firstWillAddMore) {\n        newCellCount++;\n      }\n\n      first--;\n    }\n\n    if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {\n      if (lastWillAddMore) {\n        newCellCount++;\n      }\n\n      last++;\n    }\n  }\n\n  if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {\n    throw new Error('Bad window calculation ' + JSON.stringify({\n      first: first,\n      last: last,\n      itemCount: itemCount,\n      overscanFirst: overscanFirst,\n      overscanLast: overscanLast,\n      visible: visible\n    }));\n  }\n\n  return {\n    first: first,\n    last: last\n  };\n}\n\nexport { computeWindowedRenderLimits, elementsThatOverlapOffsets, newRangeCount };\nvar VirtualizeUtils = {\n  computeWindowedRenderLimits: computeWindowedRenderLimits,\n  elementsThatOverlapOffsets: elementsThatOverlapOffsets,\n  newRangeCount: newRangeCount\n};\nexport default VirtualizeUtils;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\n\nfunction infoLog() {\n  var _console;\n\n  return (_console = console).log.apply(_console, arguments);\n}\n\nexport default infoLog;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport Batchinator from '../Batchinator';\nimport FillRateHelper from '../FillRateHelper';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport UIManager from '../../../exports/UIManager';\nimport View from '../../../exports/View';\nimport ViewabilityHelper from '../ViewabilityHelper';\nimport { computeWindowedRenderLimits } from '../VirtualizeUtils';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nimport infoLog from '../infoLog';\nimport invariant from 'fbjs/lib/invariant';\nimport warning from 'fbjs/lib/warning';\nvar flattenStyle = StyleSheet.flatten;\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar _usedIndexForKey = false;\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](/react-native/docs/flatlist.html)\n * and [`<SectionList>`](/react-native/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nvar VirtualizedList =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(VirtualizedList, _React$PureComponent);\n\n  var _proto = VirtualizedList.prototype;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  _proto.scrollToEnd = function scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n\n    var frame = this._getFrameMetricsApprox(veryLast);\n\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n\n    this._scrollRef.scrollTo(\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n     * comment suppresses an error when upgrading Flow's support for React.\n     * To see the error delete this comment and run Flow. */\n    this.props.horizontal ? {\n      x: offset,\n      animated: animated\n    } : {\n      y: offset,\n      animated: animated\n    });\n  } // scrollToIndex may be janky without getItemLayout prop\n  ;\n\n  _proto.scrollToIndex = function scrollToIndex(params) {\n    var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n    invariant(index >= 0 && index < getItemCount(data), \"scrollToIndex out of range: \" + index + \" vs \" + (getItemCount(data) - 1));\n\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index: index\n      });\n      return;\n    }\n\n    var frame = this._getFrameMetricsApprox(index);\n\n    var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n\n    this._scrollRef.scrollTo(\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n     * comment suppresses an error when upgrading Flow's support for React.\n     * To see the error delete this comment and run Flow. */\n    horizontal ? {\n      x: offset,\n      animated: animated\n    } : {\n      y: offset,\n      animated: animated\n    });\n  } // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  ;\n\n  _proto.scrollToItem = function scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread({}, params, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  ;\n\n  _proto.scrollToOffset = function scrollToOffset(params) {\n    var animated = params.animated,\n        offset = params.offset;\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n\n    this._scrollRef.scrollTo(\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n     * comment suppresses an error when upgrading Flow's support for React.\n     * To see the error delete this comment and run Flow. */\n    this.props.horizontal ? {\n      x: offset,\n      animated: animated\n    } : {\n      y: offset,\n      animated: animated\n    });\n  };\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._nestedChildLists.forEach(function (childList) {\n      childList.ref && childList.ref.recordInteraction();\n    });\n\n    this._viewabilityTuples.forEach(function (t) {\n      t.viewabilityHelper.recordInteraction();\n    });\n\n    this._updateViewableItems(this.props.data);\n  };\n\n  _proto.flashScrollIndicators = function flashScrollIndicators() {\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.flashScrollIndicators();\n  }\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  ;\n\n  _proto.getScrollResponder = function getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  };\n\n  _proto.getScrollableNode = function getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  };\n\n  _proto.setNativeProps = function setNativeProps(props) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  };\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      virtualizedList: {\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: this.props.horizontal,\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild\n      }\n    };\n  };\n\n  _proto._getCellKey = function _getCellKey() {\n    return this.context.virtualizedCell && this.context.virtualizedCell.cellKey || 'rootList';\n  };\n\n  _proto.hasMore = function hasMore() {\n    return this._hasMore;\n  };\n\n  function VirtualizedList(_props, context) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, _props, context) || this;\n\n    _this._getScrollMetrics = function () {\n      return _this._scrollMetrics;\n    };\n\n    _this._getOutermostParentListRef = function () {\n      if (_this._isNestedWithSameOrientation()) {\n        return _this.context.virtualizedList.getOutermostParentListRef();\n      } else {\n        return _assertThisInitialized(_assertThisInitialized(_this));\n      }\n    };\n\n    _this._getNestedChildState = function (key) {\n      var existingChildData = _this._nestedChildLists.get(key);\n\n      return existingChildData && existingChildData.state;\n    };\n\n    _this._registerAsNestedChild = function (childList) {\n      // Register the mapping between this child key and the cellKey for its cell\n      var childListsInCell = _this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n\n      _this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n      var existingChildData = _this._nestedChildLists.get(childList.key);\n\n      invariant(!(existingChildData && existingChildData.ref !== null), 'A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.');\n\n      _this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n\n      if (_this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n\n    _this._unregisterAsNestedChild = function (childList) {\n      _this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n\n    _this._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n\n    _this._averageCellLength = 0;\n    _this._cellKeysToChildListKeys = new Map();\n    _this._cellRefs = {};\n    _this._frames = {};\n    _this._footerLength = 0;\n    _this._hasDataChangedSinceEndReached = true;\n    _this._hasInteracted = false;\n    _this._hasMore = false;\n    _this._hasWarned = {};\n    _this._highestMeasuredFrameIndex = 0;\n    _this._headerLength = 0;\n    _this._indicesToKeys = new Map();\n    _this._hasDoneInitialScroll = false;\n    _this._nestedChildLists = new Map();\n    _this._offsetFromParentVirtualizedList = 0;\n    _this._prevParentOffset = 0;\n    _this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    _this._scrollRef = null;\n    _this._sentEndForContentLength = 0;\n    _this._totalCellLength = 0;\n    _this._totalCellsMeasured = 0;\n    _this._viewabilityTuples = [];\n\n    _this._captureScrollRef = function (ref) {\n      _this._scrollRef = ref;\n    };\n\n    _this._defaultRenderScrollComponent = function (props) {\n      if (_this._isNestedWithSameOrientation()) {\n        return React.createElement(View, props);\n      } else if (props.onRefresh) {\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');\n        return React.createElement(ScrollView, _extends({}, props, {\n          refreshControl:\n          /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n           * comment suppresses an error when upgrading Flow's support for\n           * React. To see the error delete this comment and run Flow. */\n          React.createElement(RefreshControl, {\n            refreshing: props.refreshing,\n            onRefresh: props.onRefresh,\n            progressViewOffset: props.progressViewOffset\n          })\n        }));\n      } else {\n        return React.createElement(ScrollView, props);\n      }\n    };\n\n    _this._onCellUnmount = function (cellKey) {\n      var curr = _this._frames[cellKey];\n\n      if (curr) {\n        _this._frames[cellKey] = _objectSpread({}, curr, {\n          inLayout: false\n        });\n      }\n    };\n\n    _this._onLayout = function (e) {\n      if (_this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        _this._measureLayoutRelativeToContainingList();\n      } else {\n        _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);\n      }\n\n      _this.props.onLayout && _this.props.onLayout(e);\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._onLayoutEmpty = function (e) {\n      _this.props.onLayout && _this.props.onLayout(e);\n    };\n\n    _this._onLayoutFooter = function (e) {\n      _this._footerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onLayoutHeader = function (e) {\n      _this._headerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 && !_this._hasDoneInitialScroll) {\n        _this.scrollToIndex({\n          animated: false,\n          index: _this.props.initialScrollIndex\n        });\n\n        _this._hasDoneInitialScroll = true;\n      }\n\n      if (_this.props.onContentSizeChange) {\n        _this.props.onContentSizeChange(width, height);\n      }\n\n      _this._scrollMetrics.contentLength = _this._selectLength({\n        height: height,\n        width: width\n      });\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._convertParentScrollMetrics = function (metrics) {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - _this._offsetFromParentVirtualizedList; // Child's visible length is the same as its parent's\n\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this._scrollMetrics.offset;\n      var contentLength = _this._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n\n    _this._onScroll = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScroll(e);\n      });\n\n      if (_this.props.onScroll) {\n        _this.props.onScroll(e);\n      }\n\n      var timestamp = e.timeStamp;\n\n      var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);\n\n      var contentLength = _this._selectLength(e.nativeEvent.contentSize);\n\n      var offset = _this._selectOffset(e.nativeEvent.contentOffset);\n\n      var dOffset = offset - _this._scrollMetrics.offset;\n\n      if (_this._isNestedWithSameOrientation()) {\n        if (_this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n\n        var _this$_convertParentS = _this._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n\n      var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n\n      if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this._hasWarned.perf = true;\n      }\n\n      _this._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength\n      };\n\n      _this._updateViewableItems(_this.props.data);\n\n      if (!_this.props) {\n        return;\n      }\n\n      _this._maybeCallOnEndReached();\n\n      if (velocity !== 0) {\n        _this._fillRateHelper.activate();\n      }\n\n      _this._computeBlankness();\n\n      _this._scheduleCellsToRenderUpdate();\n    };\n\n    _this._onScrollBeginDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n\n      _this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n\n      _this._hasInteracted = true;\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n\n    _this._onScrollEndDrag = function (e) {\n      var velocity = e.nativeEvent.velocity;\n\n      if (velocity) {\n        _this._scrollMetrics.velocity = _this._selectOffset(velocity);\n      }\n\n      _this._computeBlankness();\n\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n\n    _this._onMomentumScrollEnd = function (e) {\n      _this._scrollMetrics.velocity = 0;\n\n      _this._computeBlankness();\n\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n\n    _this._updateCellsToRender = function () {\n      var _this$props3 = _this.props,\n          data = _this$props3.data,\n          getItemCount = _this$props3.getItemCount,\n          onEndReachedThreshold = _this$props3.onEndReachedThreshold;\n\n      var isVirtualizationDisabled = _this._isVirtualizationDisabled();\n\n      _this._updateViewableItems(data);\n\n      if (!data) {\n        return;\n      }\n\n      _this.setState(function (state) {\n        var newState;\n\n        if (!isVirtualizationDisabled) {\n          // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n          // and wipe out the initialNumToRender rendered elements.\n          // So let's wait until the scroll view metrics have been set up. And until then,\n          // we will trust the initialNumToRender suggestion\n          if (_this._scrollMetrics.visibleLength) {\n            // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n            // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n            // So let's wait until we've scrolled the view to the right place. And until then,\n            // we will trust the initialScrollIndex suggestion.\n            if (!_this.props.initialScrollIndex || _this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(_this.props, state, _this._getFrameMetricsApprox, _this._scrollMetrics);\n            }\n          }\n        } else {\n          var _this$_scrollMetrics = _this._scrollMetrics,\n              contentLength = _this$_scrollMetrics.contentLength,\n              offset = _this$_scrollMetrics.offset,\n              visibleLength = _this$_scrollMetrics.visibleLength;\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead =\n          /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          distanceFromEnd < onEndReachedThreshold * visibleLength ? _this.props.maxToRenderPerBatch : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n\n        if (newState && _this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last; // If some cell in the new state has a child list in it, we should only render\n          // up through that item, so that we give that list a chance to render.\n          // Otherwise there's churn from multiple child lists mounting and un-mounting\n          // their items.\n\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = _this._indicesToKeys.get(ii);\n\n            var childListKeys = cellKeyForIndex && _this._cellKeysToChildListKeys.get(cellKeyForIndex);\n\n            if (!childListKeys) {\n              continue;\n            }\n\n            var someChildHasMore = false; // For each cell, need to check whether any child list in it has more elements to render\n\n            for (var _iterator = childListKeys, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n              var _ref;\n\n              if (_isArray) {\n                if (_i >= _iterator.length) break;\n                _ref = _iterator[_i++];\n              } else {\n                _i = _iterator.next();\n                if (_i.done) break;\n                _ref = _i.value;\n              }\n\n              var childKey = _ref;\n\n              var childList = _this._nestedChildLists.get(childKey);\n\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n\n            if (someChildHasMore) {\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n\n        return newState;\n      });\n    };\n\n    _this._createViewToken = function (index, isViewable) {\n      var _this$props4 = _this.props,\n          data = _this$props4.data,\n          getItem = _this$props4.getItem,\n          keyExtractor = _this$props4.keyExtractor;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: keyExtractor(item, index),\n        isViewable: isViewable\n      };\n    };\n\n    _this._getFrameMetricsApprox = function (index) {\n      var frame = _this._getFrameMetrics(index);\n\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var getItemLayout = _this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this._averageCellLength,\n          offset: _this._averageCellLength * index\n        };\n      }\n    };\n\n    _this._getFrameMetrics = function (index) {\n      var _this$props5 = _this.props,\n          data = _this$props5.data,\n          getItem = _this$props5.getItem,\n          getItemCount = _this$props5.getItemCount,\n          getItemLayout = _this$props5.getItemLayout,\n          keyExtractor = _this$props5.keyExtractor;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n\n      var frame = item && _this._frames[keyExtractor(item, index)];\n\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n\n          if (__DEV__) {\n            var frameType = PropTypes.shape({\n              length: PropTypes.number.isRequired,\n              offset: PropTypes.number.isRequired,\n              index: PropTypes.number.isRequired\n            }).isRequired;\n            PropTypes.checkPropTypes({\n              frame: frameType\n            }, {\n              frame: frame\n            }, 'frame', 'VirtualizedList.getItemLayout');\n          }\n        }\n      }\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n\n\n      return frame;\n    };\n\n    invariant(!_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(_props.windowSize > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);\n    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, _this.props.updateCellsBatchingPeriod);\n\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else if (_this.props.onViewableItemsChanged) {\n      _this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(_this.props.viewabilityConfig),\n        onViewableItemsChanged: _this.props.onViewableItemsChanged\n      });\n    }\n\n    var initialState = {\n      first: _this.props.initialScrollIndex || 0,\n      last: Math.min(_this.props.getItemCount(_this.props.data), (_this.props.initialScrollIndex || 0) + _this.props.initialNumToRender) - 1\n    };\n\n    if (_this._isNestedWithSameOrientation()) {\n      var storedState = _this.context.virtualizedList.getNestedChildState(_this.props.listKey || _this._getCellKey());\n\n      if (storedState) {\n        initialState = storedState;\n        _this.state = storedState;\n        _this._frames = storedState.frames;\n      }\n    }\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this.props.listKey || this._getCellKey(),\n        ref: this\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.unregisterAsNestedChild({\n        key: this.props.listKey || this._getCellKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames\n        }\n      });\n    }\n\n    this._updateViewableItems(null);\n\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n\n    this._viewabilityTuples.forEach(function (tuple) {\n      tuple.viewabilityHelper.dispose();\n    });\n\n    this._fillRateHelper.deactivateAndFlush();\n  };\n\n  VirtualizedList.getDerivedStateFromProps = function getDerivedStateFromProps(newProps, prevState) {\n    var data = newProps.data,\n        extraData = newProps.extraData,\n        getItemCount = newProps.getItemCount,\n        maxToRenderPerBatch = newProps.maxToRenderPerBatch; // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n\n    return {\n      first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n    };\n  };\n\n  _proto._pushCells = function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this2 = this;\n\n    var _this$props6 = this.props,\n        CellRendererComponent = _this$props6.CellRendererComponent,\n        ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n        data = _this$props6.data,\n        getItem = _this$props6.getItem,\n        getItemCount = _this$props6.getItemCount,\n        horizontal = _this$props6.horizontal,\n        keyExtractor = _this$props6.keyExtractor;\n    var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n\n    var _loop = function _loop(ii) {\n      var item = getItem(data, ii);\n      var key = keyExtractor(item, ii);\n\n      _this2._indicesToKeys.set(ii, key);\n\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      cells.push(React.createElement(CellRenderer, {\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        cellKey: key,\n        fillRateHelper: _this2._fillRateHelper,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this2._onUpdateSeparators,\n        onLayout: function onLayout(e) {\n          return _this2._onCellLayout(e, key, ii);\n        },\n        onUnmount: _this2._onCellUnmount,\n        parentProps: _this2.props,\n        ref: function ref(_ref2) {\n          _this2._cellRefs[key] = _ref2;\n        }\n      }));\n      prevCellKey = key;\n    };\n\n    for (var ii = first; ii <= last; ii++) {\n      _loop(ii);\n    }\n  };\n\n  _proto._isVirtualizationDisabled = function _isVirtualizationDisabled() {\n    return this.props.disableVirtualization;\n  };\n\n  _proto._isNestedWithSameOrientation = function _isNestedWithSameOrientation() {\n    var nestedContext = this.context.virtualizedList;\n    return !!(nestedContext && !!nestedContext.horizontal === !!this.props.horizontal);\n  };\n\n  _proto.render = function render() {\n    if (__DEV__) {\n      var flatStyles = flattenStyle(this.props.contentContainerStyle);\n      warning(flatStyles == null || flatStyles.flexWrap !== 'wrap', '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n    }\n\n    var _this$props7 = this.props,\n        ListEmptyComponent = _this$props7.ListEmptyComponent,\n        ListFooterComponent = _this$props7.ListFooterComponent,\n        ListHeaderComponent = _this$props7.ListHeaderComponent;\n    var _this$props8 = this.props,\n        data = _this$props8.data,\n        horizontal = _this$props8.horizontal;\n\n    var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n    var inversionStyle = this.props.inverted ? this.props.horizontal ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n\n      var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : // $FlowFixMe\n      React.createElement(ListHeaderComponent, null);\n      cells.push(React.createElement(VirtualizedCellWrapper, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: inversionStyle\n      }, element)));\n    }\n\n    var itemCount = this.props.getItemCount(data);\n\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      var spacerKey = !horizontal ? 'height' : 'width';\n      var lastInitialIndex = this.props.initialScrollIndex ? -1 : this.props.initialNumToRender - 1;\n      var _this$state = this.state,\n          first = _this$state.first,\n          last = _this$state.last;\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n\n      var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        var insertedStickySpacer = false;\n\n        if (stickyIndicesFromProps.size > 0) {\n          var stickyOffset = ListHeaderComponent ? 1 : 0; // See if there are any sticky headers in the virtualized space that we need to render.\n\n          for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              var _ref3, _ref4;\n\n              var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n              var stickyBlock = this._getFrameMetricsApprox(ii);\n\n              var leadSpace = stickyBlock.offset - (initBlock.offset + initBlock.length);\n              cells.push(React.createElement(View, {\n                key: \"$sticky_lead\",\n                style: (_ref3 = {}, _ref3[spacerKey] = leadSpace, _ref3)\n              }));\n\n              this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n\n              var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n              cells.push(React.createElement(View, {\n                key: \"$sticky_trail\",\n                style: (_ref4 = {}, _ref4[spacerKey] = trailSpace, _ref4)\n              }));\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n\n        if (!insertedStickySpacer) {\n          var _ref5;\n\n          var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n          var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n\n          cells.push(React.createElement(View, {\n            key: \"$lead_spacer\",\n            style: (_ref5 = {}, _ref5[spacerKey] = firstSpace, _ref5)\n          }));\n        }\n      }\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key property on each ' + 'item or provide a custom keyExtractor.');\n        this._hasWarned.keys = true;\n      }\n\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        var _ref6;\n\n        var lastFrame = this._getFrameMetricsApprox(last); // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n\n\n        var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n\n        var endFrame = this._getFrameMetricsApprox(end);\n\n        var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n        cells.push(React.createElement(View, {\n          key: \"$tail_spacer\",\n          style: (_ref6 = {}, _ref6[spacerKey] = tailSpacerLength, _ref6)\n        }));\n      }\n    } else if (ListEmptyComponent) {\n      var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : // $FlowFixMe\n      React.createElement(ListEmptyComponent, null);\n\n      cells.push(React.createElement(View, {\n        key: \"$empty\",\n        onLayout: this._onLayoutEmpty,\n        style: inversionStyle\n      }, _element));\n    }\n\n    if (ListFooterComponent) {\n      var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : // $FlowFixMe\n      React.createElement(ListFooterComponent, null);\n\n      cells.push(React.createElement(VirtualizedCellWrapper, {\n        cellKey: this._getCellKey() + '-footer',\n        key: \"$footer\"\n      }, React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: inversionStyle\n      }, _element2)));\n    }\n\n    var scrollProps = _objectSpread({}, this.props, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle,\n      // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n      stickyHeaderIndices: stickyHeaderIndices\n    });\n\n    if (inversionStyle) {\n      scrollProps.style = [inversionStyle, this.props.style];\n    }\n\n    this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n    var ret = React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells);\n\n    if (this.props.debug) {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        }\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props9 = this.props,\n        data = _this$props9.data,\n        extraData = _this$props9.extraData;\n\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      this._hasDataChangedSinceEndReached = true; // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _proto._computeBlankness = function _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n  };\n\n  _proto._onCellLayout = function _onCellLayout(e, cellKey, index) {\n    var layout = e.nativeEvent.layout;\n    var next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index: index,\n      inLayout: true\n    };\n    var curr = this._frames[cellKey];\n\n    if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._computeBlankness();\n  };\n\n  _proto._measureLayoutRelativeToContainingList = function _measureLayoutRelativeToContainingList() {\n    var _this3 = this;\n\n    UIManager.measureLayout(findNodeHandle(this), findNodeHandle(this.context.virtualizedList.getOutermostParentListRef()), function (error) {\n      console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n    }, function (x, y, width, height) {\n      _this3._offsetFromParentVirtualizedList = _this3._selectOffset({\n        x: x,\n        y: y\n      });\n      _this3._scrollMetrics.contentLength = _this3._selectLength({\n        width: width,\n        height: height\n      });\n\n      var scrollMetrics = _this3._convertParentScrollMetrics(_this3.context.virtualizedList.getScrollMetrics());\n\n      _this3._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n      _this3._scrollMetrics.offset = scrollMetrics.offset;\n    });\n  };\n\n  _proto._renderDebugOverlay = function _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / this._scrollMetrics.contentLength;\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this._getFrameMetricsApprox(ii);\n\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n\n    var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n\n    var frameLast = this._getFrameMetricsApprox(this.state.last);\n\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    var baseStyle = {\n      position: 'absolute',\n      top: 0,\n      right: 0\n    };\n    return React.createElement(View, {\n      style: _objectSpread({}, baseStyle, {\n        bottom: 0,\n        width: 20,\n        borderColor: 'blue',\n        borderWidth: 1\n      })\n    }, framesInLayout.map(function (f, ii) {\n      return React.createElement(View, {\n        key: 'f' + ii,\n        style: _objectSpread({}, baseStyle, {\n          left: 0,\n          top: f.offset * normalize,\n          height: f.length * normalize,\n          backgroundColor: 'orange'\n        })\n      });\n    }), React.createElement(View, {\n      style: _objectSpread({}, baseStyle, {\n        left: 0,\n        top: windowTop * normalize,\n        height: windowLen * normalize,\n        borderColor: 'green',\n        borderWidth: 2\n      })\n    }), React.createElement(View, {\n      style: _objectSpread({}, baseStyle, {\n        left: 0,\n        top: visTop * normalize,\n        height: visLen * normalize,\n        borderColor: 'red',\n        borderWidth: 2\n      })\n    }));\n  };\n\n  _proto._selectLength = function _selectLength(metrics) {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  };\n\n  _proto._selectOffset = function _selectOffset(metrics) {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  };\n\n  _proto._maybeCallOnEndReached = function _maybeCallOnEndReached() {\n    var _this$props10 = this.props,\n        data = _this$props10.data,\n        getItemCount = _this$props10.getItemCount,\n        onEndReached = _this$props10.onEndReached,\n        onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n\n    if (onEndReached && this.state.last === getItemCount(data) - 1 &&\n    /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.63 was deployed. To see the error delete this\n     * comment and run Flow. */\n    distanceFromEnd < onEndReachedThreshold * visibleLength && (this._hasDataChangedSinceEndReached || this._scrollMetrics.contentLength !== this._sentEndForContentLength)) {\n      // Only call onEndReached once for a given dataset + content length.\n      this._hasDataChangedSinceEndReached = false;\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd: distanceFromEnd\n      });\n    }\n  };\n\n  _proto._scheduleCellsToRenderUpdate = function _scheduleCellsToRenderUpdate() {\n    var _this$state2 = this.state,\n        first = _this$state2.first,\n        last = _this$state2.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n\n    if (first > 0 || last < itemCount - 1) {\n      var distTop = offset - this._getFrameMetricsApprox(first).offset;\n\n      var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      var scrollingThreshold =\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete\n       * this comment and run Flow. */\n      this.props.onEndReachedThreshold * visibleLength / 2;\n      hiPri = Math.min(distTop, distBottom) < 0 || velocity < -2 && distTop < scrollingThreshold || velocity > 2 && distBottom < scrollingThreshold;\n    } // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n\n\n    if (hiPri && this._averageCellLength) {\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n\n      this._updateCellsToRender();\n\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  };\n\n  _proto._updateViewableItems = function _updateViewableItems(data) {\n    var _this4 = this;\n\n    var getItemCount = this.props.getItemCount;\n\n    this._viewabilityTuples.forEach(function (tuple) {\n      tuple.viewabilityHelper.onUpdate(getItemCount(data), _this4._scrollMetrics.offset, _this4._scrollMetrics.visibleLength, _this4._getFrameMetrics, _this4._createViewToken, tuple.onViewableItemsChanged, _this4.state);\n    });\n  };\n\n  return VirtualizedList;\n}(React.PureComponent);\n\nVirtualizedList.defaultProps = {\n  disableVirtualization: process.env.NODE_ENV === 'test',\n  horizontal: false,\n  initialNumToRender: 10,\n  keyExtractor: function keyExtractor(item, index) {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    _usedIndexForKey = true;\n    return String(index);\n  },\n  maxToRenderPerBatch: 10,\n  onEndReachedThreshold: 2,\n  // multiples of length\n  scrollEventThrottle: 50,\n  updateCellsBatchingPeriod: 50,\n  windowSize: 21 // multiples of length\n\n};\nVirtualizedList.contextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  }),\n  virtualizedList: PropTypes.shape({\n    getScrollMetrics: PropTypes.func,\n    horizontal: PropTypes.bool,\n    getOutermostParentListRef: PropTypes.func,\n    getNestedChildState: PropTypes.func,\n    registerAsNestedChild: PropTypes.func,\n    unregisterAsNestedChild: PropTypes.func\n  })\n};\nVirtualizedList.childContextTypes = {\n  virtualizedList: PropTypes.shape({\n    getScrollMetrics: PropTypes.func,\n    horizontal: PropTypes.bool,\n    getOutermostParentListRef: PropTypes.func,\n    getNestedChildState: PropTypes.func,\n    registerAsNestedChild: PropTypes.func,\n    unregisterAsNestedChild: PropTypes.func\n  })\n};\n\nvar CellRenderer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CellRenderer, _React$Component);\n\n  function CellRenderer() {\n    var _this5;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this5 = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this5.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: _this5.props.item\n      }\n    };\n    _this5._separators = {\n      highlight: function highlight() {\n        var _this5$props = _this5.props,\n            cellKey = _this5$props.cellKey,\n            prevCellKey = _this5$props.prevCellKey;\n\n        _this5.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: function unhighlight() {\n        var _this5$props2 = _this5.props,\n            cellKey = _this5$props2.cellKey,\n            prevCellKey = _this5$props2.prevCellKey;\n\n        _this5.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: function updateProps(select, newProps) {\n        var _this5$props3 = _this5.props,\n            cellKey = _this5$props3.cellKey,\n            prevCellKey = _this5$props3.prevCellKey;\n\n        _this5.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n    return _this5;\n  }\n\n  var _proto2 = CellRenderer.prototype;\n\n  _proto2.getChildContext = function getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey\n      }\n    };\n  } // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  ;\n\n  _proto2.updateSeparatorProps = function updateSeparatorProps(newProps) {\n    this.setState(function (state) {\n      return {\n        separatorProps: _objectSpread({}, state.separatorProps, newProps)\n      };\n    });\n  };\n\n  _proto2.componentWillUnmount = function componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  };\n\n  _proto2.render = function render() {\n    var _this$props11 = this.props,\n        CellRendererComponent = _this$props11.CellRendererComponent,\n        ItemSeparatorComponent = _this$props11.ItemSeparatorComponent,\n        fillRateHelper = _this$props11.fillRateHelper,\n        horizontal = _this$props11.horizontal,\n        item = _this$props11.item,\n        index = _this$props11.index,\n        inversionStyle = _this$props11.inversionStyle,\n        parentProps = _this$props11.parentProps;\n    var renderItem = parentProps.renderItem,\n        getItemLayout = parentProps.getItemLayout;\n    invariant(renderItem, 'no renderItem!');\n    var element = renderItem({\n      item: item,\n      index: index,\n      separators: this._separators\n    });\n    var onLayout = getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout; // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n\n    var itemSeparator = ItemSeparatorComponent && React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n    var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n\n    if (!CellRendererComponent) {\n      return React.createElement(View, {\n        style: cellStyle,\n        onLayout: onLayout\n      }, element, itemSeparator);\n    }\n\n    return React.createElement(CellRendererComponent, _extends({}, this.props, {\n      style: cellStyle,\n      onLayout: onLayout\n    }), element, itemSeparator);\n  };\n\n  return CellRenderer;\n}(React.Component);\n\nCellRenderer.childContextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  })\n};\n\nvar VirtualizedCellWrapper =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inheritsLoose(VirtualizedCellWrapper, _React$Component2);\n\n  function VirtualizedCellWrapper() {\n    return _React$Component2.apply(this, arguments) || this;\n  }\n\n  var _proto3 = VirtualizedCellWrapper.prototype;\n\n  _proto3.getChildContext = function getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey\n      }\n    };\n  };\n\n  _proto3.render = function render() {\n    return this.props.children;\n  };\n\n  return VirtualizedCellWrapper;\n}(React.Component);\n\nVirtualizedCellWrapper.childContextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  })\n};\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  }\n});\nexport default VirtualizedList;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport UnimplementedView from '../../../modules/UnimplementedView';\nimport React from 'react';\nimport View from '../../../exports/View';\nimport VirtualizedList from '../VirtualizedList';\nimport invariant from 'fbjs/lib/invariant';\n\nvar defaultProps = _objectSpread({}, VirtualizedList.defaultProps, {\n  numColumns: 1\n});\n\n/**\n * A performant interface for rendering simple, flat lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Optional horizontal mode.\n *  - Configurable viewability callbacks.\n *  - Header support.\n *  - Footer support.\n *  - Separator support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *  - ScrollToIndex support.\n *\n * If you need section support, use [`<SectionList>`](docs/sectionlist.html).\n *\n * Minimal Example:\n *\n *     <FlatList\n *       data={[{key: 'a'}, {key: 'b'}]}\n *       renderItem={({item}) => <Text>{item.key}</Text>}\n *     />\n *\n * More complex, multi-select example demonstrating `PureComponent` usage for perf optimization and avoiding bugs.\n *\n * - By binding the `onPressItem` handler, the props will remain `===` and `PureComponent` will\n *   prevent wasteful re-renders unless the actual `id`, `selected`, or `title` props change, even\n *   if the components rendered in `MyListItem` did not have such optimizations.\n * - By passing `extraData={this.state}` to `FlatList` we make sure `FlatList` itself will re-render\n *   when the `state.selected` changes. Without setting this prop, `FlatList` would not know it\n *   needs to re-render any items because it is also a `PureComponent` and the prop comparison will\n *   not show any changes.\n * - `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.\n *\n *\n *     class MyListItem extends React.PureComponent {\n *       _onPress = () => {\n *         this.props.onPressItem(this.props.id);\n *       };\n *\n *       render() {\n *         const textColor = this.props.selected ? \"red\" : \"black\";\n *         return (\n *           <TouchableOpacity onPress={this._onPress}>\n *             <View>\n *               <Text style={{ color: textColor }}>\n *                 {this.props.title}\n *               </Text>\n *             </View>\n *           </TouchableOpacity>\n *         );\n *       }\n *     }\n *\n *     class MultiSelectList extends React.PureComponent {\n *       state = {selected: (new Map(): Map<string, boolean>)};\n *\n *       _keyExtractor = (item, index) => item.id;\n *\n *       _onPressItem = (id: string) => {\n *         // updater functions are preferred for transactional updates\n *         this.setState((state) => {\n *           // copy the map rather than modifying state.\n *           const selected = new Map(state.selected);\n *           selected.set(id, !selected.get(id)); // toggle\n *           return {selected};\n *         });\n *       };\n *\n *       _renderItem = ({item}) => (\n *         <MyListItem\n *           id={item.id}\n *           onPressItem={this._onPressItem}\n *           selected={!!this.state.selected.get(item.id)}\n *           title={item.title}\n *         />\n *       );\n *\n *       render() {\n *         return (\n *           <FlatList\n *             data={this.props.data}\n *             extraData={this.state}\n *             keyExtractor={this._keyExtractor}\n *             renderItem={this._renderItem}\n *           />\n *         );\n *       }\n *     }\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist.html),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n * Also inherits [ScrollView Props](docs/scrollview.html#props), unless it is nested in another FlatList of same orientation.\n */\nvar FlatList =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(FlatList, _React$PureComponent);\n\n  var _proto = FlatList.prototype;\n\n  /**\n   * Scrolls to the end of the content. May be janky without `getItemLayout` prop.\n   */\n  _proto.scrollToEnd = function scrollToEnd(params) {\n    if (this._listRef) {\n      this._listRef.scrollToEnd(params);\n    }\n  }\n  /**\n   * Scrolls to the item at the specified index such that it is positioned in the viewable area\n   * such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the\n   * middle. `viewOffset` is a fixed number of pixels to offset the final target position.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  ;\n\n  _proto.scrollToIndex = function scrollToIndex(params) {\n    if (this._listRef) {\n      this._listRef.scrollToIndex(params);\n    }\n  }\n  /**\n   * Requires linear scan through data - use `scrollToIndex` instead if possible.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  ;\n\n  _proto.scrollToItem = function scrollToItem(params) {\n    if (this._listRef) {\n      this._listRef.scrollToItem(params);\n    }\n  }\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Check out [scrollToOffset](docs/virtualizedlist.html#scrolltooffset) of VirtualizedList\n   */\n  ;\n\n  _proto.scrollToOffset = function scrollToOffset(params) {\n    if (this._listRef) {\n      this._listRef.scrollToOffset(params);\n    }\n  }\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  ;\n\n  _proto.recordInteraction = function recordInteraction() {\n    if (this._listRef) {\n      this._listRef.recordInteraction();\n    }\n  }\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  ;\n\n  _proto.flashScrollIndicators = function flashScrollIndicators() {\n    if (this._listRef) {\n      this._listRef.flashScrollIndicators();\n    }\n  }\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  ;\n\n  _proto.getScrollResponder = function getScrollResponder() {\n    if (this._listRef) {\n      return this._listRef.getScrollResponder();\n    }\n  };\n\n  _proto.getScrollableNode = function getScrollableNode() {\n    if (this._listRef) {\n      return this._listRef.getScrollableNode();\n    }\n  };\n\n  _proto.setNativeProps = function setNativeProps(props) {\n    if (this._listRef) {\n      this._listRef.setNativeProps(props);\n    }\n  };\n\n  _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n    this._checkProps(this.props);\n  };\n\n  _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n    invariant(nextProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');\n    invariant(nextProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');\n    invariant(nextProps.viewabilityConfig === this.props.viewabilityConfig, 'Changing viewabilityConfig on the fly is not supported');\n    invariant(nextProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');\n\n    this._checkProps(nextProps);\n  };\n\n  function FlatList(props) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, props) || this;\n    _this._hasWarnedLegacy = false;\n    _this._virtualizedListPairs = [];\n\n    _this._captureRef = function (ref) {\n      _this._listRef = ref;\n    };\n\n    _this._getItem = function (data, index) {\n      var numColumns = _this.props.numColumns;\n\n      if (numColumns > 1) {\n        var ret = [];\n\n        for (var kk = 0; kk < numColumns; kk++) {\n          var _item = data[index * numColumns + kk];\n          _item && ret.push(_item);\n        }\n\n        return ret;\n      } else {\n        return data[index];\n      }\n    };\n\n    _this._getItemCount = function (data) {\n      return data ? Math.ceil(data.length / _this.props.numColumns) : 0;\n    };\n\n    _this._keyExtractor = function (items, index) {\n      var _this$props = _this.props,\n          keyExtractor = _this$props.keyExtractor,\n          numColumns = _this$props.numColumns;\n\n      if (numColumns > 1) {\n        invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);\n        return items.map(function (it, kk) {\n          return keyExtractor(it, index * numColumns + kk);\n        }).join(':');\n      } else {\n        /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n         * error found when Flow v0.63 was deployed. To see the error delete this\n         * comment and run Flow. */\n        return keyExtractor(items, index);\n      }\n    };\n\n    _this._renderItem = function (info) {\n      var _this$props2 = _this.props,\n          renderItem = _this$props2.renderItem,\n          numColumns = _this$props2.numColumns,\n          columnWrapperStyle = _this$props2.columnWrapperStyle;\n\n      if (numColumns > 1) {\n        var _item2 = info.item,\n            _index = info.index;\n        invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');\n        return React.createElement(View, {\n          style: [{\n            flexDirection: 'row'\n          }, columnWrapperStyle]\n        }, _item2.map(function (it, kk) {\n          var element = renderItem({\n            item: it,\n            index: _index * numColumns + kk,\n            separators: info.separators\n          });\n          return element && React.cloneElement(element, {\n            key: kk\n          });\n        }));\n      } else {\n        return renderItem(info);\n      }\n    };\n\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._virtualizedListPairs = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityConfig: pair.viewabilityConfig,\n          onViewableItemsChanged: _this._createOnViewableItemsChanged(pair.onViewableItemsChanged)\n        };\n      });\n    } else if (_this.props.onViewableItemsChanged) {\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n      _this._virtualizedListPairs.push({\n        viewabilityConfig: _this.props.viewabilityConfig,\n        onViewableItemsChanged: _this._createOnViewableItemsChanged(_this.props.onViewableItemsChanged)\n      });\n    }\n\n    return _this;\n  }\n\n  _proto._checkProps = function _checkProps(props) {\n    var getItem = props.getItem,\n        getItemCount = props.getItemCount,\n        horizontal = props.horizontal,\n        legacyImplementation = props.legacyImplementation,\n        numColumns = props.numColumns,\n        columnWrapperStyle = props.columnWrapperStyle,\n        onViewableItemsChanged = props.onViewableItemsChanged,\n        viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;\n    invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');\n\n    if (numColumns > 1) {\n      invariant(!horizontal, 'numColumns does not support horizontal.');\n    } else {\n      invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');\n    }\n\n    if (legacyImplementation) {\n      invariant(numColumns === 1, 'Legacy list does not support multiple columns.'); // Warning: may not have full feature parity and is meant more for debugging and performance\n      // comparison.\n\n      if (!this._hasWarnedLegacy) {\n        console.warn('FlatList: Using legacyImplementation - some features not supported and performance ' + 'may suffer');\n        this._hasWarnedLegacy = true;\n      }\n    }\n\n    invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), 'FlatList does not support setting both onViewableItemsChanged and ' + 'viewabilityConfigCallbackPairs.');\n  };\n\n  _proto._pushMultiColumnViewable = function _pushMultiColumnViewable(arr, v) {\n    var _this$props3 = this.props,\n        numColumns = _this$props3.numColumns,\n        keyExtractor = _this$props3.keyExtractor;\n    v.item.forEach(function (item, ii) {\n      invariant(v.index != null, 'Missing index!');\n      var index = v.index * numColumns + ii;\n      arr.push(_objectSpread({}, v, {\n        item: item,\n        key: keyExtractor(item, index),\n        index: index\n      }));\n    });\n  };\n\n  _proto._createOnViewableItemsChanged = function _createOnViewableItemsChanged(onViewableItemsChanged) {\n    var _this2 = this;\n\n    return function (info) {\n      var numColumns = _this2.props.numColumns;\n\n      if (onViewableItemsChanged) {\n        if (numColumns > 1) {\n          var changed = [];\n          var viewableItems = [];\n          info.viewableItems.forEach(function (v) {\n            return _this2._pushMultiColumnViewable(viewableItems, v);\n          });\n          info.changed.forEach(function (v) {\n            return _this2._pushMultiColumnViewable(changed, v);\n          });\n          onViewableItemsChanged({\n            viewableItems: viewableItems,\n            changed: changed\n          });\n        } else {\n          onViewableItemsChanged(info);\n        }\n      }\n    };\n  };\n\n  _proto.render = function render() {\n    if (this.props.legacyImplementation) {\n      return (\n        /* $FlowFixMe(>=0.66.0 site=react_native_fb) This comment suppresses an\n         * error found when Flow v0.66 was deployed. To see the error delete\n         * this comment and run Flow. */\n        React.createElement(UnimplementedView, _extends({}, this.props, {\n          /* $FlowFixMe(>=0.66.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.66 was deployed. To see the error\n           * delete this comment and run Flow. */\n          items: this.props.data,\n          ref: this._captureRef\n        }))\n      );\n    } else {\n      return React.createElement(VirtualizedList, _extends({}, this.props, {\n        renderItem: this._renderItem,\n        getItem: this._getItem,\n        getItemCount: this._getItemCount,\n        keyExtractor: this._keyExtractor,\n        ref: this._captureRef,\n        viewabilityConfigCallbackPairs: this._virtualizedListPairs\n      }));\n    }\n  };\n\n  return FlatList;\n}(React.PureComponent);\n\nFlatList.defaultProps = defaultProps;\nexport default FlatList;","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport FlatList from '../../vendor/react-native/FlatList';\nexport default FlatList;","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport debounce from 'debounce';\nimport invariant from 'fbjs/lib/invariant';\nvar win = canUseDOM ? window : {\n  devicePixelRatio: undefined,\n  innerHeight: undefined,\n  innerWidth: undefined,\n  screen: {\n    height: undefined,\n    width: undefined\n  }\n};\nvar dimensions = {};\nvar listeners = {};\n\nvar Dimensions =\n/*#__PURE__*/\nfunction () {\n  function Dimensions() {}\n\n  Dimensions.get = function get(dimension) {\n    invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  };\n\n  Dimensions.set = function set(initialDimensions) {\n    if (initialDimensions) {\n      if (canUseDOM) {\n        invariant(false, 'Dimensions cannot be set in the browser');\n      } else {\n        dimensions.screen = initialDimensions.screen;\n        dimensions.window = initialDimensions.window;\n      }\n    }\n  };\n\n  Dimensions._update = function _update() {\n    dimensions.window = {\n      fontScale: 1,\n      height: win.innerHeight,\n      scale: win.devicePixelRatio || 1,\n      width: win.innerWidth\n    };\n    dimensions.screen = {\n      fontScale: 1,\n      height: win.screen.height,\n      scale: win.devicePixelRatio || 1,\n      width: win.screen.width\n    };\n\n    if (Array.isArray(listeners['change'])) {\n      listeners['change'].forEach(function (handler) {\n        return handler(dimensions);\n      });\n    }\n  };\n\n  Dimensions.addEventListener = function addEventListener(type, handler) {\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n  };\n\n  Dimensions.removeEventListener = function removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(function (_handler) {\n        return _handler !== handler;\n      });\n    }\n  };\n\n  return Dimensions;\n}();\n\nexport { Dimensions as default };\n\nDimensions._update();\n\nif (canUseDOM) {\n  window.addEventListener('resize', debounce(Dimensions._update, 16), false);\n}","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport UIManager from '../../exports/UIManager';\n/**\n * This class is responsible for coordinating the \"focused\"\n * state for TextInputs. All calls relating to the keyboard\n * should be funneled through here\n */\n\nvar TextInputState = {\n  /**\n   * Internal state\n   */\n  _currentlyFocusedNode: null,\n\n  /**\n   * Returns the ID of the currently focused text field, if one exists\n   * If no text field is focused it returns null\n   */\n  currentlyFocusedField: function currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n\n    return this._currentlyFocusedNode;\n  },\n\n  /**\n   * @param {Object} TextInputID id of the text field to focus\n   * Focuses the specified text field\n   * noop if the text field was already focused\n   */\n  focusTextInput: function focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n\n      if (document.activeElement !== textFieldNode) {\n        UIManager.focus(textFieldNode);\n      }\n    }\n  },\n\n  /**\n   * @param {Object} textFieldNode id of the text field to focus\n   * Unfocuses the specified text field\n   * noop if it wasn't focused\n   */\n  blurTextInput: function blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n\n      if (document.activeElement === textFieldNode) {\n        UIManager.blur(textFieldNode);\n      }\n    }\n  }\n};\nexport default TextInputState;","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport TextInputState from '../TextInputState';\n\nvar dismissKeyboard = function dismissKeyboard() {\n  TextInputState.blurTextInput(TextInputState.currentlyFocusedField());\n};\n\nexport default dismissKeyboard;","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar Platform = {\n  OS: 'web',\n  select: function select(obj) {\n    return 'web' in obj ? obj.web : obj.default;\n  }\n};\nexport default Platform;","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport Dimensions from '../../exports/Dimensions';\nimport findNodeHandle from '../../exports/findNodeHandle';\nimport invariant from 'fbjs/lib/invariant';\nimport Platform from '../../exports/Platform';\nimport TextInputState from '../TextInputState';\nimport UIManager from '../../exports/UIManager';\nimport warning from 'fbjs/lib/warning';\n/**\n * Mixin that can be integrated in order to handle scrolling that plays well\n * with `ResponderEventPlugin`. Integrate with your platform specific scroll\n * views, or even your custom built (every-frame animating) scroll views so that\n * all of these systems play well with the `ResponderEventPlugin`.\n *\n * iOS scroll event timing nuances:\n * ===============================\n *\n *\n * Scrolling without bouncing, if you touch down:\n * -------------------------------\n *\n * 1. `onMomentumScrollBegin` (when animation begins after letting up)\n *    ... physical touch starts ...\n * 2. `onTouchStartCapture`   (when you press down to stop the scroll)\n * 3. `onTouchStart`          (same, but bubble phase)\n * 4. `onResponderRelease`    (when lifting up - you could pause forever before * lifting)\n * 5. `onMomentumScrollEnd`\n *\n *\n * Scrolling with bouncing, if you touch down:\n * -------------------------------\n *\n * 1. `onMomentumScrollBegin` (when animation begins after letting up)\n *    ... bounce begins ...\n *    ... some time elapses ...\n *    ... physical touch during bounce ...\n * 2. `onMomentumScrollEnd`   (Makes no sense why this occurs first during bounce)\n * 3. `onTouchStartCapture`   (immediately after `onMomentumScrollEnd`)\n * 4. `onTouchStart`          (same, but bubble phase)\n * 5. `onTouchEnd`            (You could hold the touch start for a long time)\n * 6. `onMomentumScrollBegin` (When releasing the view starts bouncing back)\n *\n * So when we receive an `onTouchStart`, how can we tell if we are touching\n * *during* an animation (which then causes the animation to stop)? The only way\n * to tell is if the `touchStart` occurred immediately after the\n * `onMomentumScrollEnd`.\n *\n * This is abstracted out for you, so you can just call this.scrollResponderIsAnimating() if\n * necessary\n *\n * `ScrollResponder` also includes logic for blurring a currently focused input\n * if one is focused while scrolling. The `ScrollResponder` is a natural place\n * to put this logic since it can support not dismissing the keyboard while\n * scrolling, unless a recognized \"tap\"-like gesture has occurred.\n *\n * The public lifecycle API includes events for keyboard interaction, responder\n * interaction, and scrolling (among others). The keyboard callbacks\n * `onKeyboardWill/Did/*` are *global* events, but are invoked on scroll\n * responder's props so that you can guarantee that the scroll responder's\n * internal state has been updated accordingly (and deterministically) by\n * the time the props callbacks are invoke. Otherwise, you would always wonder\n * if the scroll responder is currently in a state where it recognizes new\n * keyboard positions etc. If coordinating scrolling with keyboard movement,\n * *always* use these hooks instead of listening to your own global keyboard\n * events.\n *\n * Public keyboard lifecycle API: (props callbacks)\n *\n * Standard Keyboard Appearance Sequence:\n *\n *   this.props.onKeyboardWillShow\n *   this.props.onKeyboardDidShow\n *\n * `onScrollResponderKeyboardDismissed` will be invoked if an appropriate\n * tap inside the scroll responder's scrollable region was responsible\n * for the dismissal of the keyboard. There are other reasons why the\n * keyboard could be dismissed.\n *\n *   this.props.onScrollResponderKeyboardDismissed\n *\n * Standard Keyboard Hide Sequence:\n *\n *   this.props.onKeyboardWillHide\n *   this.props.onKeyboardDidHide\n */\n\nvar emptyObject = {};\nvar IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;\nvar ScrollResponderMixin = {\n  // mixins: [Subscribable.Mixin],\n  scrollResponderMixinGetInitialState: function scrollResponderMixinGetInitialState() {\n    return {\n      isTouching: false,\n      lastMomentumScrollBeginTime: 0,\n      lastMomentumScrollEndTime: 0,\n      // Reset to false every time becomes responder. This is used to:\n      // - Determine if the scroll view has been scrolled and therefore should\n      // refuse to give up its responder lock.\n      // - Determine if releasing should dismiss the keyboard when we are in\n      // tap-to-dismiss mode (!this.props.keyboardShouldPersistTaps).\n      observedScrollSinceBecomingResponder: false,\n      becameResponderWhileAnimating: false\n    };\n  },\n\n  /**\n   * Invoke this from an `onScroll` event.\n   */\n  scrollResponderHandleScrollShouldSetResponder: function scrollResponderHandleScrollShouldSetResponder() {\n    return this.state.isTouching;\n  },\n\n  /**\n   * Merely touch starting is not sufficient for a scroll view to become the\n   * responder. Being the \"responder\" means that the very next touch move/end\n   * event will result in an action/movement.\n   *\n   * Invoke this from an `onStartShouldSetResponder` event.\n   *\n   * `onStartShouldSetResponder` is used when the next move/end will trigger\n   * some UI movement/action, but when you want to yield priority to views\n   * nested inside of the view.\n   *\n   * There may be some cases where scroll views actually should return `true`\n   * from `onStartShouldSetResponder`: Any time we are detecting a standard tap\n   * that gives priority to nested views.\n   *\n   * - If a single tap on the scroll view triggers an action such as\n   *   recentering a map style view yet wants to give priority to interaction\n   *   views inside (such as dropped pins or labels), then we would return true\n   *   from this method when there is a single touch.\n   *\n   * - Similar to the previous case, if a two finger \"tap\" should trigger a\n   *   zoom, we would check the `touches` count, and if `>= 2`, we would return\n   *   true.\n   *\n   */\n  scrollResponderHandleStartShouldSetResponder: function scrollResponderHandleStartShouldSetResponder() {\n    return false;\n  },\n\n  /**\n   * There are times when the scroll view wants to become the responder\n   * (meaning respond to the next immediate `touchStart/touchEnd`), in a way\n   * that *doesn't* give priority to nested views (hence the capture phase):\n   *\n   * - Currently animating.\n   * - Tapping anywhere that is not the focused input, while the keyboard is\n   *   up (which should dismiss the keyboard).\n   *\n   * Invoke this from an `onStartShouldSetResponderCapture` event.\n   */\n  scrollResponderHandleStartShouldSetResponderCapture: function scrollResponderHandleStartShouldSetResponderCapture(e) {\n    // First see if we want to eat taps while the keyboard is up\n    // var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\n    // if (!this.props.keyboardShouldPersistTaps &&\n    //   currentlyFocusedTextInput != null &&\n    //   e.target !== currentlyFocusedTextInput) {\n    //   return true;\n    // }\n    return this.scrollResponderIsAnimating();\n  },\n\n  /**\n   * Invoke this from an `onResponderReject` event.\n   *\n   * Some other element is not yielding its role as responder. Normally, we'd\n   * just disable the `UIScrollView`, but a touch has already began on it, the\n   * `UIScrollView` will not accept being disabled after that. The easiest\n   * solution for now is to accept the limitation of disallowing this\n   * altogether. To improve this, find a way to disable the `UIScrollView` after\n   * a touch has already started.\n   */\n  scrollResponderHandleResponderReject: function scrollResponderHandleResponderReject() {\n    warning(false, \"ScrollView doesn't take rejection well - scrolls anyway\");\n  },\n\n  /**\n   * We will allow the scroll view to give up its lock iff it acquired the lock\n   * during an animation. This is a very useful default that happens to satisfy\n   * many common user experiences.\n   *\n   * - Stop a scroll on the left edge, then turn that into an outer view's\n   *   backswipe.\n   * - Stop a scroll mid-bounce at the top, continue pulling to have the outer\n   *   view dismiss.\n   * - However, without catching the scroll view mid-bounce (while it is\n   *   motionless), if you drag far enough for the scroll view to become\n   *   responder (and therefore drag the scroll view a bit), any backswipe\n   *   navigation of a swipe gesture higher in the view hierarchy, should be\n   *   rejected.\n   */\n  scrollResponderHandleTerminationRequest: function scrollResponderHandleTerminationRequest() {\n    return !this.state.observedScrollSinceBecomingResponder;\n  },\n\n  /**\n   * Invoke this from an `onTouchEnd` event.\n   *\n   * @param {SyntheticEvent} e Event.\n   */\n  scrollResponderHandleTouchEnd: function scrollResponderHandleTouchEnd(e) {\n    var nativeEvent = e.nativeEvent;\n    this.state.isTouching = nativeEvent.touches.length !== 0;\n    this.props.onTouchEnd && this.props.onTouchEnd(e);\n  },\n\n  /**\n   * Invoke this from an `onResponderRelease` event.\n   */\n  scrollResponderHandleResponderRelease: function scrollResponderHandleResponderRelease(e) {\n    this.props.onResponderRelease && this.props.onResponderRelease(e); // By default scroll views will unfocus a textField\n    // if another touch occurs outside of it\n\n    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\n\n    if (!this.props.keyboardShouldPersistTaps && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !this.state.observedScrollSinceBecomingResponder && !this.state.becameResponderWhileAnimating) {\n      this.props.onScrollResponderKeyboardDismissed && this.props.onScrollResponderKeyboardDismissed(e);\n      TextInputState.blurTextInput(currentlyFocusedTextInput);\n    }\n  },\n  scrollResponderHandleScroll: function scrollResponderHandleScroll(e) {\n    this.state.observedScrollSinceBecomingResponder = true;\n    this.props.onScroll && this.props.onScroll(e);\n  },\n\n  /**\n   * Invoke this from an `onResponderGrant` event.\n   */\n  scrollResponderHandleResponderGrant: function scrollResponderHandleResponderGrant(e) {\n    this.state.observedScrollSinceBecomingResponder = false;\n    this.props.onResponderGrant && this.props.onResponderGrant(e);\n    this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();\n  },\n\n  /**\n   * Unfortunately, `onScrollBeginDrag` also fires when *stopping* the scroll\n   * animation, and there's not an easy way to distinguish a drag vs. stopping\n   * momentum.\n   *\n   * Invoke this from an `onScrollBeginDrag` event.\n   */\n  scrollResponderHandleScrollBeginDrag: function scrollResponderHandleScrollBeginDrag(e) {\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  },\n\n  /**\n   * Invoke this from an `onScrollEndDrag` event.\n   */\n  scrollResponderHandleScrollEndDrag: function scrollResponderHandleScrollEndDrag(e) {\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  },\n\n  /**\n   * Invoke this from an `onMomentumScrollBegin` event.\n   */\n  scrollResponderHandleMomentumScrollBegin: function scrollResponderHandleMomentumScrollBegin(e) {\n    this.state.lastMomentumScrollBeginTime = Date.now();\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  },\n\n  /**\n   * Invoke this from an `onMomentumScrollEnd` event.\n   */\n  scrollResponderHandleMomentumScrollEnd: function scrollResponderHandleMomentumScrollEnd(e) {\n    this.state.lastMomentumScrollEndTime = Date.now();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  },\n\n  /**\n   * Invoke this from an `onTouchStart` event.\n   *\n   * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n   * order, after `ResponderEventPlugin`, we can detect that we were *not*\n   * permitted to be the responder (presumably because a contained view became\n   * responder). The `onResponderReject` won't fire in that case - it only\n   * fires when a *current* responder rejects our request.\n   *\n   * @param {SyntheticEvent} e Touch Start event.\n   */\n  scrollResponderHandleTouchStart: function scrollResponderHandleTouchStart(e) {\n    this.state.isTouching = true;\n    this.props.onTouchStart && this.props.onTouchStart(e);\n  },\n\n  /**\n   * Invoke this from an `onTouchMove` event.\n   *\n   * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n   * order, after `ResponderEventPlugin`, we can detect that we were *not*\n   * permitted to be the responder (presumably because a contained view became\n   * responder). The `onResponderReject` won't fire in that case - it only\n   * fires when a *current* responder rejects our request.\n   *\n   * @param {SyntheticEvent} e Touch Start event.\n   */\n  scrollResponderHandleTouchMove: function scrollResponderHandleTouchMove(e) {\n    this.props.onTouchMove && this.props.onTouchMove(e);\n  },\n\n  /**\n   * A helper function for this class that lets us quickly determine if the\n   * view is currently animating. This is particularly useful to know when\n   * a touch has just started or ended.\n   */\n  scrollResponderIsAnimating: function scrollResponderIsAnimating() {\n    var now = Date.now();\n    var timeSinceLastMomentumScrollEnd = now - this.state.lastMomentumScrollEndTime;\n    var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;\n    return isAnimating;\n  },\n\n  /**\n   * Returns the node that represents native view that can be scrolled.\n   * Components can pass what node to use by defining a `getScrollableNode`\n   * function otherwise `this` is used.\n   */\n  scrollResponderGetScrollableNode: function scrollResponderGetScrollableNode() {\n    return this.getScrollableNode ? this.getScrollableNode() : findNodeHandle(this);\n  },\n\n  /**\n   * A helper function to scroll to a specific point in the scrollview.\n   * This is currently used to help focus on child textviews, but can also\n   * be used to quickly scroll to any element we want to focus. Syntax:\n   *\n   * scrollResponderScrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\n   *\n   * Note: The weird argument signature is due to the fact that, for historical reasons,\n   * the function also accepts separate arguments as as alternative to the options object.\n   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n   */\n  scrollResponderScrollTo: function scrollResponderScrollTo(x, y, animated) {\n    if (typeof x === 'number') {\n      console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');\n    } else {\n      var _ref = x || emptyObject;\n\n      x = _ref.x;\n      y = _ref.y;\n      animated = _ref.animated;\n    }\n\n    var node = this.scrollResponderGetScrollableNode();\n    var left = x || 0;\n    var top = y || 0;\n\n    if (typeof node.scroll === 'function') {\n      node.scroll({\n        top: top,\n        left: left,\n        behavior: !animated ? 'auto' : 'smooth'\n      });\n    } else {\n      node.scrollLeft = left;\n      node.scrollTop = top;\n    }\n  },\n\n  /**\n   * Deprecated, do not use.\n   */\n  scrollResponderScrollWithoutAnimationTo: function scrollResponderScrollWithoutAnimationTo(offsetX, offsetY) {\n    console.warn('`scrollResponderScrollWithoutAnimationTo` is deprecated. Use `scrollResponderScrollTo` instead');\n    this.scrollResponderScrollTo({\n      x: offsetX,\n      y: offsetY,\n      animated: false\n    });\n  },\n\n  /**\n   * A helper function to zoom to a specific rect in the scrollview. The argument has the shape\n   * {x: number; y: number; width: number; height: number; animated: boolean = true}\n   *\n   * @platform ios\n   */\n  scrollResponderZoomTo: function scrollResponderZoomTo(rect, animated // deprecated, put this inside the rect argument instead\n  ) {\n    if (Platform.OS !== 'ios') {\n      invariant('zoomToRect is not implemented');\n    }\n  },\n\n  /**\n   * Displays the scroll indicators momentarily.\n   */\n  scrollResponderFlashScrollIndicators: function scrollResponderFlashScrollIndicators() {},\n\n  /**\n   * This method should be used as the callback to onFocus in a TextInputs'\n   * parent view. Note that any module using this mixin needs to return\n   * the parent view's ref in getScrollViewRef() in order to use this method.\n   * @param {any} nodeHandle The TextInput node handle\n   * @param {number} additionalOffset The scroll view's top \"contentInset\".\n   *        Default is 0.\n   * @param {bool} preventNegativeScrolling Whether to allow pulling the content\n   *        down to make it meet the keyboard's top. Default is false.\n   */\n  scrollResponderScrollNativeHandleToKeyboard: function scrollResponderScrollNativeHandleToKeyboard(nodeHandle, additionalOffset, preventNegativeScrollOffset) {\n    this.additionalScrollOffset = additionalOffset || 0;\n    this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;\n    UIManager.measureLayout(nodeHandle, findNodeHandle(this.getInnerViewNode()), this.scrollResponderTextInputFocusError, this.scrollResponderInputMeasureAndScrollToKeyboard);\n  },\n\n  /**\n   * The calculations performed here assume the scroll view takes up the entire\n   * screen - even if has some content inset. We then measure the offsets of the\n   * keyboard, and compensate both for the scroll view's \"contentInset\".\n   *\n   * @param {number} left Position of input w.r.t. table view.\n   * @param {number} top Position of input w.r.t. table view.\n   * @param {number} width Width of the text input.\n   * @param {number} height Height of the text input.\n   */\n  scrollResponderInputMeasureAndScrollToKeyboard: function scrollResponderInputMeasureAndScrollToKeyboard(left, top, width, height) {\n    var keyboardScreenY = Dimensions.get('window').height;\n\n    if (this.keyboardWillOpenTo) {\n      keyboardScreenY = this.keyboardWillOpenTo.endCoordinates.screenY;\n    }\n\n    var scrollOffsetY = top - keyboardScreenY + height + this.additionalScrollOffset; // By default, this can scroll with negative offset, pulling the content\n    // down so that the target component's bottom meets the keyboard's top.\n    // If requested otherwise, cap the offset at 0 minimum to avoid content\n    // shifting down.\n\n    if (this.preventNegativeScrollOffset) {\n      scrollOffsetY = Math.max(0, scrollOffsetY);\n    }\n\n    this.scrollResponderScrollTo({\n      x: 0,\n      y: scrollOffsetY,\n      animated: true\n    });\n    this.additionalOffset = 0;\n    this.preventNegativeScrollOffset = false;\n  },\n  scrollResponderTextInputFocusError: function scrollResponderTextInputFocusError(e) {\n    console.error('Error measuring text field: ', e);\n  },\n\n  /**\n   * `componentWillMount` is the closest thing to a  standard \"constructor\" for\n   * React components.\n   *\n   * The `keyboardWillShow` is called before input focus.\n   */\n  componentWillMount: function componentWillMount() {\n    this.keyboardWillOpenTo = null;\n    this.additionalScrollOffset = 0; // this.addListenerOn(RCTDeviceEventEmitter, 'keyboardWillShow', this.scrollResponderKeyboardWillShow);\n    // this.addListenerOn(RCTDeviceEventEmitter, 'keyboardWillHide', this.scrollResponderKeyboardWillHide);\n    // this.addListenerOn(RCTDeviceEventEmitter, 'keyboardDidShow', this.scrollResponderKeyboardDidShow);\n    // this.addListenerOn(RCTDeviceEventEmitter, 'keyboardDidHide', this.scrollResponderKeyboardDidHide);\n  },\n\n  /**\n   * Warning, this may be called several times for a single keyboard opening.\n   * It's best to store the information in this method and then take any action\n   * at a later point (either in `keyboardDidShow` or other).\n   *\n   * Here's the order that events occur in:\n   * - focus\n   * - willShow {startCoordinates, endCoordinates} several times\n   * - didShow several times\n   * - blur\n   * - willHide {startCoordinates, endCoordinates} several times\n   * - didHide several times\n   *\n   * The `ScrollResponder` providesModule callbacks for each of these events.\n   * Even though any user could have easily listened to keyboard events\n   * themselves, using these `props` callbacks ensures that ordering of events\n   * is consistent - and not dependent on the order that the keyboard events are\n   * subscribed to. This matters when telling the scroll view to scroll to where\n   * the keyboard is headed - the scroll responder better have been notified of\n   * the keyboard destination before being instructed to scroll to where the\n   * keyboard will be. Stick to the `ScrollResponder` callbacks, and everything\n   * will work.\n   *\n   * WARNING: These callbacks will fire even if a keyboard is displayed in a\n   * different navigation pane. Filter out the events to determine if they are\n   * relevant to you. (For example, only if you receive these callbacks after\n   * you had explicitly focused a node etc).\n   */\n  scrollResponderKeyboardWillShow: function scrollResponderKeyboardWillShow(e) {\n    this.keyboardWillOpenTo = e;\n    this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);\n  },\n  scrollResponderKeyboardWillHide: function scrollResponderKeyboardWillHide(e) {\n    this.keyboardWillOpenTo = null;\n    this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);\n  },\n  scrollResponderKeyboardDidShow: function scrollResponderKeyboardDidShow(e) {\n    // TODO(7693961): The event for DidShow is not available on iOS yet.\n    // Use the one from WillShow and do not assign.\n    if (e) {\n      this.keyboardWillOpenTo = e;\n    }\n\n    this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);\n  },\n  scrollResponderKeyboardDidHide: function scrollResponderKeyboardDidHide(e) {\n    this.keyboardWillOpenTo = null;\n    this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);\n  }\n};\nvar ScrollResponder = {\n  Mixin: ScrollResponderMixin\n};\nexport default ScrollResponder;","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport debounce from 'debounce';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nimport ViewPropTypes from '../ViewPropTypes';\nimport React, { Component } from 'react';\nimport { bool, func, number } from 'prop-types';\n\nvar normalizeScrollEvent = function normalizeScrollEvent(e) {\n  return {\n    nativeEvent: {\n      contentOffset: {\n        get x() {\n          return e.target.scrollLeft;\n        },\n\n        get y() {\n          return e.target.scrollTop;\n        }\n\n      },\n      contentSize: {\n        get height() {\n          return e.target.scrollHeight;\n        },\n\n        get width() {\n          return e.target.scrollWidth;\n        }\n\n      },\n      layoutMeasurement: {\n        get height() {\n          return e.target.offsetHeight;\n        },\n\n        get width() {\n          return e.target.offsetWidth;\n        }\n\n      }\n    },\n    timeStamp: Date.now()\n  };\n};\n/**\n * Encapsulates the Web-specific scroll throttling and disabling logic\n */\n\n\nvar ScrollViewBase =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ScrollViewBase, _Component);\n\n  function ScrollViewBase() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this._debouncedOnScrollEnd = debounce(_this._handleScrollEnd, 100);\n    _this._state = {\n      isScrolling: false,\n      scrollLastTick: 0\n    };\n\n    _this._createPreventableScrollHandler = function (handler) {\n      return function (e) {\n        if (_this.props.scrollEnabled) {\n          if (handler) {\n            handler(e);\n          }\n        } else {\n          // To disable scrolling in all browsers except Chrome\n          e.preventDefault();\n        }\n      };\n    };\n\n    _this._handleScroll = function (e) {\n      e.persist();\n      e.stopPropagation();\n      var scrollEventThrottle = _this.props.scrollEventThrottle; // A scroll happened, so the scroll bumps the debounce.\n\n      _this._debouncedOnScrollEnd(e);\n\n      if (_this._state.isScrolling) {\n        // Scroll last tick may have changed, check if we need to notify\n        if (_this._shouldEmitScrollEvent(_this._state.scrollLastTick, scrollEventThrottle)) {\n          _this._handleScrollTick(e);\n        }\n      } else {\n        // Weren't scrolling, so we must have just started\n        _this._handleScrollStart(e);\n      }\n    };\n\n    _this._setViewRef = function (element) {\n      _this._viewRef = element;\n    };\n\n    return _this;\n  }\n\n  var _proto = ScrollViewBase.prototype;\n\n  _proto.setNativeProps = function setNativeProps(props) {\n    if (this._viewRef) {\n      this._viewRef.setNativeProps(props);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        scrollEnabled = _this$props.scrollEnabled,\n        style = _this$props.style,\n        alwaysBounceHorizontal = _this$props.alwaysBounceHorizontal,\n        alwaysBounceVertical = _this$props.alwaysBounceVertical,\n        automaticallyAdjustContentInsets = _this$props.automaticallyAdjustContentInsets,\n        bounces = _this$props.bounces,\n        bouncesZoom = _this$props.bouncesZoom,\n        canCancelContentTouches = _this$props.canCancelContentTouches,\n        centerContent = _this$props.centerContent,\n        contentInset = _this$props.contentInset,\n        contentInsetAdjustmentBehavior = _this$props.contentInsetAdjustmentBehavior,\n        contentOffset = _this$props.contentOffset,\n        decelerationRate = _this$props.decelerationRate,\n        directionalLockEnabled = _this$props.directionalLockEnabled,\n        endFillColor = _this$props.endFillColor,\n        indicatorStyle = _this$props.indicatorStyle,\n        keyboardShouldPersistTaps = _this$props.keyboardShouldPersistTaps,\n        maximumZoomScale = _this$props.maximumZoomScale,\n        minimumZoomScale = _this$props.minimumZoomScale,\n        onMomentumScrollBegin = _this$props.onMomentumScrollBegin,\n        onMomentumScrollEnd = _this$props.onMomentumScrollEnd,\n        onScrollBeginDrag = _this$props.onScrollBeginDrag,\n        onScrollEndDrag = _this$props.onScrollEndDrag,\n        overScrollMode = _this$props.overScrollMode,\n        pinchGestureEnabled = _this$props.pinchGestureEnabled,\n        removeClippedSubviews = _this$props.removeClippedSubviews,\n        scrollEventThrottle = _this$props.scrollEventThrottle,\n        scrollIndicatorInsets = _this$props.scrollIndicatorInsets,\n        scrollPerfTag = _this$props.scrollPerfTag,\n        scrollsToTop = _this$props.scrollsToTop,\n        showsHorizontalScrollIndicator = _this$props.showsHorizontalScrollIndicator,\n        showsVerticalScrollIndicator = _this$props.showsVerticalScrollIndicator,\n        snapToInterval = _this$props.snapToInterval,\n        snapToAlignment = _this$props.snapToAlignment,\n        zoomScale = _this$props.zoomScale,\n        other = _objectWithoutPropertiesLoose(_this$props, [\"scrollEnabled\", \"style\", \"alwaysBounceHorizontal\", \"alwaysBounceVertical\", \"automaticallyAdjustContentInsets\", \"bounces\", \"bouncesZoom\", \"canCancelContentTouches\", \"centerContent\", \"contentInset\", \"contentInsetAdjustmentBehavior\", \"contentOffset\", \"decelerationRate\", \"directionalLockEnabled\", \"endFillColor\", \"indicatorStyle\", \"keyboardShouldPersistTaps\", \"maximumZoomScale\", \"minimumZoomScale\", \"onMomentumScrollBegin\", \"onMomentumScrollEnd\", \"onScrollBeginDrag\", \"onScrollEndDrag\", \"overScrollMode\", \"pinchGestureEnabled\", \"removeClippedSubviews\", \"scrollEventThrottle\", \"scrollIndicatorInsets\", \"scrollPerfTag\", \"scrollsToTop\", \"showsHorizontalScrollIndicator\", \"showsVerticalScrollIndicator\", \"snapToInterval\", \"snapToAlignment\", \"zoomScale\"]);\n\n    return React.createElement(View, _extends({}, other, {\n      onScroll: this._handleScroll,\n      onTouchMove: this._createPreventableScrollHandler(this.props.onTouchMove),\n      onWheel: this._createPreventableScrollHandler(this.props.onWheel),\n      ref: this._setViewRef,\n      style: StyleSheet.compose(style, !scrollEnabled && styles.scrollDisabled)\n    }));\n  };\n\n  _proto._handleScrollStart = function _handleScrollStart(e) {\n    this._state.isScrolling = true;\n    this._state.scrollLastTick = Date.now();\n  };\n\n  _proto._handleScrollTick = function _handleScrollTick(e) {\n    var onScroll = this.props.onScroll;\n    this._state.scrollLastTick = Date.now();\n\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  };\n\n  _proto._handleScrollEnd = function _handleScrollEnd(e) {\n    var onScroll = this.props.onScroll;\n    this._state.isScrolling = false;\n\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  };\n\n  _proto._shouldEmitScrollEvent = function _shouldEmitScrollEvent(lastTick, eventThrottle) {\n    var timeSinceLastTick = Date.now() - lastTick;\n    return eventThrottle > 0 && timeSinceLastTick >= eventThrottle;\n  };\n\n  return ScrollViewBase;\n}(Component); // Chrome doesn't support e.preventDefault in this case; touch-action must be\n// used to disable scrolling.\n// https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\nScrollViewBase.defaultProps = {\n  scrollEnabled: true,\n  scrollEventThrottle: 0\n};\nexport { ScrollViewBase as default };\nScrollViewBase.propTypes = process.env.NODE_ENV !== \"production\" ? _objectSpread({}, ViewPropTypes, {\n  onMomentumScrollBegin: func,\n  onMomentumScrollEnd: func,\n  onScroll: func,\n  onScrollBeginDrag: func,\n  onScrollEndDrag: func,\n  onTouchMove: func,\n  onWheel: func,\n  removeClippedSubviews: bool,\n  scrollEnabled: bool,\n  scrollEventThrottle: number,\n  showsHorizontalScrollIndicator: bool,\n  showsVerticalScrollIndicator: bool\n}) : {};\nvar styles = StyleSheet.create({\n  scrollDisabled: {\n    touchAction: 'none'\n  }\n});","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport createReactClass from 'create-react-class';\nimport dismissKeyboard from '../../modules/dismissKeyboard';\nimport findNodeHandle from '../findNodeHandle';\nimport invariant from 'fbjs/lib/invariant';\nimport ScrollResponder from '../../modules/ScrollResponder';\nimport ScrollViewBase from './ScrollViewBase';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nimport ViewPropTypes from '../ViewPropTypes';\nimport React from 'react';\nimport { arrayOf, bool, element, func, number, oneOf } from 'prop-types';\nvar emptyObject = {};\n/* eslint-disable react/prefer-es6-class, react/prop-types */\n\nvar ScrollView = createReactClass({\n  displayName: \"ScrollView\",\n  propTypes: _objectSpread({}, ViewPropTypes, {\n    contentContainerStyle: ViewPropTypes.style,\n    horizontal: bool,\n    keyboardDismissMode: oneOf(['none', 'interactive', 'on-drag']),\n    onContentSizeChange: func,\n    onScroll: func,\n    pagingEnabled: bool,\n    refreshControl: element,\n    scrollEnabled: bool,\n    scrollEventThrottle: number,\n    stickyHeaderIndices: arrayOf(number),\n    style: ViewPropTypes.style\n  }),\n  mixins: [ScrollResponder.Mixin],\n  getInitialState: function getInitialState() {\n    return this.scrollResponderMixinGetInitialState();\n  },\n  flashScrollIndicators: function flashScrollIndicators() {\n    this.scrollResponderFlashScrollIndicators();\n  },\n  setNativeProps: function setNativeProps(props) {\n    if (this._scrollViewRef) {\n      this._scrollViewRef.setNativeProps(props);\n    }\n  },\n\n  /**\n   * Returns a reference to the underlying scroll responder, which supports\n   * operations like `scrollTo`. All ScrollView-like components should\n   * implement this method so that they can be composed while providing access\n   * to the underlying scroll responder's methods.\n   */\n  getScrollResponder: function getScrollResponder() {\n    return this;\n  },\n  getScrollableNode: function getScrollableNode() {\n    return findNodeHandle(this._scrollViewRef);\n  },\n  getInnerViewNode: function getInnerViewNode() {\n    return findNodeHandle(this._innerViewRef);\n  },\n\n  /**\n   * Scrolls to a given x, y offset, either immediately or with a smooth animation.\n   * Syntax:\n   *\n   * scrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\n   *\n   * Note: The weird argument signature is due to the fact that, for historical reasons,\n   * the function also accepts separate arguments as as alternative to the options object.\n   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n   */\n  scrollTo: function scrollTo(y, x, animated) {\n    if (typeof y === 'number') {\n      console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');\n    } else {\n      var _ref = y || emptyObject;\n\n      x = _ref.x;\n      y = _ref.y;\n      animated = _ref.animated;\n    }\n\n    this.getScrollResponder().scrollResponderScrollTo({\n      x: x || 0,\n      y: y || 0,\n      animated: animated !== false\n    });\n  },\n\n  /**\n   * If this is a vertical ScrollView scrolls to the bottom.\n   * If this is a horizontal ScrollView scrolls to the right.\n   *\n   * Use `scrollToEnd({ animated: true })` for smooth animated scrolling,\n   * `scrollToEnd({ animated: false })` for immediate scrolling.\n   * If no options are passed, `animated` defaults to true.\n   */\n  scrollToEnd: function scrollToEnd(options) {\n    // Default to true\n    var animated = (options && options.animated) !== false;\n    var horizontal = this.props.horizontal;\n    var scrollResponder = this.getScrollResponder();\n    var scrollResponderNode = scrollResponder.scrollResponderGetScrollableNode();\n    var x = horizontal ? scrollResponderNode.scrollWidth : 0;\n    var y = horizontal ? 0 : scrollResponderNode.scrollHeight;\n    scrollResponder.scrollResponderScrollTo({\n      x: x,\n      y: y,\n      animated: animated\n    });\n  },\n\n  /**\n   * Deprecated, do not use.\n   */\n  scrollWithoutAnimationTo: function scrollWithoutAnimationTo(y, x) {\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (x === void 0) {\n      x = 0;\n    }\n\n    console.warn('`scrollWithoutAnimationTo` is deprecated. Use `scrollTo` instead');\n    this.scrollTo({\n      x: x,\n      y: y,\n      animated: false\n    });\n  },\n  render: function render() {\n    var _this$props = this.props,\n        contentContainerStyle = _this$props.contentContainerStyle,\n        horizontal = _this$props.horizontal,\n        onContentSizeChange = _this$props.onContentSizeChange,\n        refreshControl = _this$props.refreshControl,\n        stickyHeaderIndices = _this$props.stickyHeaderIndices,\n        pagingEnabled = _this$props.pagingEnabled,\n        keyboardDismissMode = _this$props.keyboardDismissMode,\n        onScroll = _this$props.onScroll,\n        other = _objectWithoutPropertiesLoose(_this$props, [\"contentContainerStyle\", \"horizontal\", \"onContentSizeChange\", \"refreshControl\", \"stickyHeaderIndices\", \"pagingEnabled\", \"keyboardDismissMode\", \"onScroll\"]);\n\n    if (process.env.NODE_ENV !== 'production' && this.props.style) {\n      var style = StyleSheet.flatten(this.props.style);\n      var childLayoutProps = ['alignItems', 'justifyContent'].filter(function (prop) {\n        return style && style[prop] !== undefined;\n      });\n      invariant(childLayoutProps.length === 0, \"ScrollView child layout (\" + JSON.stringify(childLayoutProps) + \") \" + 'must be applied through the contentContainerStyle prop.');\n    }\n\n    var contentSizeChangeProps = {};\n\n    if (onContentSizeChange) {\n      contentSizeChangeProps = {\n        onLayout: this._handleContentOnLayout\n      };\n    }\n\n    var hasStickyHeaderIndices = !horizontal && Array.isArray(stickyHeaderIndices);\n    var children = hasStickyHeaderIndices || pagingEnabled ? React.Children.map(this.props.children, function (child, i) {\n      var isSticky = hasStickyHeaderIndices && stickyHeaderIndices.indexOf(i) > -1;\n\n      if (child != null && (isSticky || pagingEnabled)) {\n        return React.createElement(View, {\n          style: StyleSheet.compose(isSticky && styles.stickyHeader, pagingEnabled && styles.pagingEnabledChild)\n        }, child);\n      } else {\n        return child;\n      }\n    }) : this.props.children;\n    var contentContainer = React.createElement(View, _extends({}, contentSizeChangeProps, {\n      children: children,\n      collapsable: false,\n      ref: this._setInnerViewRef,\n      style: StyleSheet.compose(horizontal && styles.contentContainerHorizontal, contentContainerStyle)\n    }));\n    var baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\n    var pagingEnabledStyle = horizontal ? styles.pagingEnabledHorizontal : styles.pagingEnabledVertical;\n\n    var props = _objectSpread({}, other, {\n      style: [baseStyle, pagingEnabled && pagingEnabledStyle, this.props.style],\n      onTouchStart: this.scrollResponderHandleTouchStart,\n      onTouchMove: this.scrollResponderHandleTouchMove,\n      onTouchEnd: this.scrollResponderHandleTouchEnd,\n      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,\n      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,\n      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,\n      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,\n      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,\n      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,\n      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,\n      onScroll: this._handleScroll,\n      onResponderGrant: this.scrollResponderHandleResponderGrant,\n      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,\n      onResponderTerminate: this.scrollResponderHandleTerminate,\n      onResponderRelease: this.scrollResponderHandleResponderRelease,\n      onResponderReject: this.scrollResponderHandleResponderReject\n    });\n\n    var ScrollViewClass = ScrollViewBase;\n    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');\n\n    if (refreshControl) {\n      return React.cloneElement(refreshControl, {\n        style: props.style\n      }, React.createElement(ScrollViewClass, _extends({}, props, {\n        ref: this._setScrollViewRef,\n        style: baseStyle\n      }), contentContainer));\n    }\n\n    return React.createElement(ScrollViewClass, _extends({}, props, {\n      ref: this._setScrollViewRef\n    }), contentContainer);\n  },\n  _handleContentOnLayout: function _handleContentOnLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n        width = _e$nativeEvent$layout.width,\n        height = _e$nativeEvent$layout.height;\n    this.props.onContentSizeChange(width, height);\n  },\n  _handleScroll: function _handleScroll(e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.props.onScroll && !this.props.scrollEventThrottle) {\n        console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + \"cause frame drops, use a bigger number if you don't need as \" + 'much precision.');\n      }\n    }\n\n    if (this.props.keyboardDismissMode === 'on-drag') {\n      dismissKeyboard();\n    }\n\n    this.scrollResponderHandleScroll(e);\n  },\n  _setInnerViewRef: function _setInnerViewRef(component) {\n    this._innerViewRef = component;\n  },\n  _setScrollViewRef: function _setScrollViewRef(component) {\n    this._scrollViewRef = component;\n  }\n});\nvar commonStyle = {\n  flexGrow: 1,\n  flexShrink: 1,\n  // Enable hardware compositing in modern browsers.\n  // Creates a new layer with its own backing surface that can significantly\n  // improve scroll performance.\n  transform: [{\n    translateZ: 0\n  }],\n  // iOS native scrolling\n  WebkitOverflowScrolling: 'touch'\n};\nvar styles = StyleSheet.create({\n  baseVertical: _objectSpread({}, commonStyle, {\n    flexDirection: 'column',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }),\n  baseHorizontal: _objectSpread({}, commonStyle, {\n    flexDirection: 'row',\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  }),\n  contentContainerHorizontal: {\n    flexDirection: 'row'\n  },\n  stickyHeader: {\n    position: 'sticky',\n    top: 0,\n    zIndex: 10\n  },\n  pagingEnabledHorizontal: {\n    scrollSnapType: 'x mandatory'\n  },\n  pagingEnabledVertical: {\n    scrollSnapType: 'y mandatory'\n  },\n  pagingEnabledChild: {\n    scrollSnapAlign: 'start'\n  }\n});\nexport default ScrollView;","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\nvar performance = require(\"./performance\");\n\nvar performanceNow;\n/**\n * Detect if we can use `window.performance.now()` and gracefully fallback to\n * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now\n * because of Facebook's testing infrastructure.\n */\n\nif (performance.now) {\n  performanceNow = function performanceNow() {\n    return performance.now();\n  };\n} else {\n  performanceNow = function performanceNow() {\n    return Date.now();\n  };\n}\n\nmodule.exports = performanceNow;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar performance;\n\nif (ExecutionEnvironment.canUseDOM) {\n  performance = window.performance || window.msPerformance || window.webkitPerformance;\n}\n\nmodule.exports = performance || {};","import { createContext } from 'react';\nexport function createSSRManager() {\n  var promiseSet = new Set();\n  return {\n    hasPromises: function hasPromises() {\n      return promiseSet.size > 0;\n    },\n    register: function register(promise) {\n      promiseSet.add(promise);\n    },\n    consumeAndAwaitPromises: function consumeAndAwaitPromises() {\n      var promises = Array.from(promiseSet);\n      promiseSet.clear();\n      return Promise.all(promises);\n    }\n  };\n}\nexport var SSRContext = createContext(null);","import isPlainObject from 'lodash/isPlainObject';\nexport function objToKey(obj) {\n  if (!isPlainObject(obj)) {\n    return obj;\n  }\n\n  var sortedObj = Object.keys(obj).sort().reduce(function (result, key) {\n    result[key] = objToKey(obj[key]);\n    return result;\n  }, {});\n  return JSON.stringify(sortedObj);\n}\nexport function isPromiseLike(value) {\n  return value != null && typeof value.then === 'function';\n}\nexport function compact(obj) {\n  return Object.keys(obj).reduce(function (acc, key) {\n    if (obj[key] !== undefined) {\n      acc[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\n}","function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { print } from 'graphql/language/printer';\nimport { objToKey } from './utils';\nvar cachedQueriesByClient = new WeakMap();\nexport function getCachedObservableQuery(client, options) {\n  var queriesForClient = getCachedQueriesForClient(client);\n  var cacheKey = getCacheKey(options);\n  var observableQuery = queriesForClient.get(cacheKey);\n\n  if (observableQuery == null) {\n    observableQuery = client.watchQuery(options);\n    queriesForClient.set(cacheKey, observableQuery);\n  }\n\n  return observableQuery;\n}\nexport function invalidateCachedObservableQuery(client, options) {\n  var queriesForClient = getCachedQueriesForClient(client);\n  var cacheKey = getCacheKey(options);\n  queriesForClient.delete(cacheKey);\n}\n\nfunction getCachedQueriesForClient(client) {\n  var queriesForClient = cachedQueriesByClient.get(client);\n\n  if (queriesForClient == null) {\n    queriesForClient = new Map();\n    cachedQueriesByClient.set(client, queriesForClient);\n  }\n\n  return queriesForClient;\n}\n\nfunction getCacheKey(_ref) {\n  var query = _ref.query,\n      options = _objectWithoutPropertiesLoose(_ref, [\"query\"]);\n\n  return print(query) + \"@@\" + objToKey(options);\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ApolloError } from 'apollo-client';\nimport { useContext, useEffect, useMemo, useState } from 'react';\nimport { useApolloClient } from './ApolloContext';\nimport { SSRContext } from './internal/SSRContext';\nimport actHack from './internal/actHack';\nimport { getCachedObservableQuery, invalidateCachedObservableQuery } from './queryCache';\nimport { compact, objToKey } from './utils';\nexport function useQuery(query, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$ssr = _ref.ssr,\n      ssr = _ref$ssr === void 0 ? true : _ref$ssr,\n      _ref$skip = _ref.skip,\n      skip = _ref$skip === void 0 ? false : _ref$skip,\n      _ref$suspend = _ref.suspend,\n      suspend = _ref$suspend === void 0 ? false : _ref$suspend,\n      pollInterval = _ref.pollInterval,\n      _ref$notifyOnNetworkS = _ref.notifyOnNetworkStatusChange,\n      notifyOnNetworkStatusChange = _ref$notifyOnNetworkS === void 0 ? false : _ref$notifyOnNetworkS,\n      overrideClient = _ref.client,\n      context = _ref.context,\n      metadata = _ref.metadata,\n      variables = _ref.variables,\n      actualCachePolicy = _ref.fetchPolicy,\n      errorPolicy = _ref.errorPolicy,\n      fetchResults = _ref.fetchResults;\n\n  var client = useApolloClient(overrideClient);\n  var ssrManager = useContext(SSRContext);\n  var ssrInUse = ssr && ssrManager; // Skips when `skip: true` or SSRContext passed but `ssr: false`\n\n  var shouldSkip = skip || ssrManager != null && !ssr;\n  var fetchPolicy = ssrInUse && ( // Taken from https://github.com/apollographql/react-apollo/blob/2d7e48b7d0c26e792e1ed26e98bb84d8fba5bb8a/src/Query.tsx#L167-L169\n  actualCachePolicy === 'network-only' || actualCachePolicy === 'cache-and-network') ? 'cache-first' : actualCachePolicy;\n  var watchQueryOptions = useMemo(function () {\n    return compact({\n      context: context,\n      errorPolicy: errorPolicy,\n      fetchPolicy: fetchPolicy,\n      fetchResults: fetchResults,\n      metadata: metadata,\n      notifyOnNetworkStatusChange: notifyOnNetworkStatusChange,\n      pollInterval: pollInterval,\n      query: query,\n      variables: variables\n    });\n  }, [query, pollInterval, notifyOnNetworkStatusChange, context && objToKey(context), metadata && objToKey(metadata), variables && objToKey(variables), fetchPolicy, errorPolicy, fetchResults]);\n  var observableQuery = useMemo(function () {\n    return getCachedObservableQuery(client, watchQueryOptions);\n  }, [client, watchQueryOptions]);\n\n  var _useState = useState(0),\n      responseId = _useState[0],\n      setResponseId = _useState[1];\n\n  var currentResult = useMemo(function () {\n    var helpers = {\n      fetchMore: observableQuery.fetchMore.bind(observableQuery),\n      refetch: observableQuery.refetch.bind(observableQuery),\n      startPolling: observableQuery.startPolling.bind(observableQuery),\n      stopPolling: observableQuery.stopPolling.bind(observableQuery),\n      updateQuery: observableQuery.updateQuery.bind(observableQuery)\n    };\n    var result = observableQuery.currentResult(); // return the old result data when there is an error\n\n    var data = result.data;\n\n    if (result.error || result.errors) {\n      data = _extends({}, result.data, (observableQuery.getLastResult() || {}).data);\n    }\n\n    if (shouldSkip) {\n      // Taken from https://github.com/apollographql/react-apollo/blob/5cb63b3625ce5e4a3d3e4ba132eaec2a38ef5d90/src/Query.tsx#L376-L381\n      return _extends({}, helpers, {\n        data: undefined,\n        error: undefined,\n        loading: false,\n        networkStatus: undefined\n      });\n    }\n\n    return _extends({}, helpers, {\n      data: data,\n      error: result.errors && result.errors.length > 0 ? new ApolloError({\n        graphQLErrors: result.errors\n      }) : result.error,\n      errors: result.errors,\n      loading: result.loading,\n      // don't try to return `networkStatus` when suspense it's used\n      // because it's unreliable in that case\n      // https://github.com/trojanowski/react-apollo-hooks/pull/68\n      networkStatus: suspend ? undefined : result.networkStatus,\n      partial: result.partial\n    });\n  }, [shouldSkip, responseId, observableQuery]);\n  useEffect(function () {\n    if (shouldSkip) {\n      return;\n    }\n\n    var invalidateCurrentResult = function invalidateCurrentResult() {\n      // A hack to get rid React warnings during tests. The default\n      // implementation of `actHack` just invokes the callback immediately.\n      // In tests, it's replaced with `act` from react-testing-library.\n      // A better solution welcome.\n      actHack(function () {\n        setResponseId(function (x) {\n          return x + 1;\n        });\n      });\n    };\n\n    var subscription = observableQuery.subscribe(invalidateCurrentResult, invalidateCurrentResult);\n    invalidateCachedObservableQuery(client, watchQueryOptions);\n    return function () {\n      subscription.unsubscribe();\n    };\n  }, [shouldSkip, observableQuery]);\n  ensureSupportedFetchPolicy(suspend, fetchPolicy);\n\n  if (currentResult.partial) {\n    if (suspend) {\n      // throw a promise - use the react suspense to wait until the data is\n      // available\n      throw observableQuery.result();\n    }\n\n    if (ssrInUse) {\n      ssrManager.register(observableQuery.result());\n    }\n  }\n\n  return currentResult;\n}\n\nfunction ensureSupportedFetchPolicy(suspend, fetchPolicy) {\n  if (suspend && fetchPolicy && fetchPolicy !== 'cache-first') {\n    throw new Error(\"Fetch policy \" + fetchPolicy + \" is not supported without 'suspend: false'\");\n  }\n}","export default function actHack(callback) {\n  callback();\n}","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}