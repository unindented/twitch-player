{"version":3,"sources":["webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/modules/UnimplementedView/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/modules/requestIdleCallback/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/InteractionManager/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/Batchinator/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/FillRateHelper/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/RefreshControl/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/ViewabilityHelper/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/VirtualizeUtils/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/infoLog/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/vendor/react-native/FlatList/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/FlatList/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/Dimensions/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_Symbol.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/core-js/modules/es6.regexp.replace.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/modules/TextInputState/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/modules/dismissKeyboard/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/Platform/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/modules/ScrollResponder/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/ScrollView/ScrollViewBase.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/dist/exports/ScrollView/index.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/isPlainObject.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_baseGetTag.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_root.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_freeGlobal.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_getRawTag.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_objectToString.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_getPrototype.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/_overArg.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/lodash/isObjectLike.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/node_modules/fbjs/lib/performanceNow.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-native-web/node_modules/fbjs/lib/performance.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-apollo-hooks/es/internal/SSRContext.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-apollo-hooks/es/utils.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-apollo-hooks/es/queryCache.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-apollo-hooks/es/useQuery.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/react-apollo-hooks/es/internal/actHack.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/core-js/modules/es6.object.freeze.js","webpack:////home/travis/build/unindented/twitch-player/node_modules/core-js/modules/es6.function.name.js"],"names":["UnimplementedView_UnimplementedView","_Component","subClass","superClass","UnimplementedView","apply","this","arguments","prototype","Object","create","constructor","__proto__","_proto","setNativeProps","render","react_default","a","createElement","View","style","unimplementedViewStyles","props","children","react","modules_UnimplementedView","isSupported","window","requestIdleCallback","cb","options","setTimeout","start","Date","now","didTimeout","timeRemaining","Math","max","cancelIdleCallback","id","clearTimeout","modules_requestIdleCallback","exports_InteractionManager","Events","interactionStart","interactionComplete","runAfterInteractions","task","handle","promise","Promise","resolve","then","bind","done","cancel","createInteractionHandle","clearInteractionHandle","invariant_default","addListener","react_native_Batchinator","Batchinator","callback","delayMS","_delay","_callback","dispose","abort","_taskHandle","schedule","_this","timeoutHandle","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","Info","any_blank_count","any_blank_ms","any_blank_speed_sum","mostly_blank_count","mostly_blank_ms","pixels_blank","pixels_sampled","pixels_scrolled","total_time_spent","sample_count","_listeners","_minSampleCount","_sampleRate","react_native_FillRateHelper","FillRateHelper","getFrameMetrics","_anyBlankStartTime","_enabled","_info","_mostlyBlankStartTime","_samplesStartTime","_getFrameMetrics","random","_resetData","warning_default","push","remove","filter","listener","setSampleRate","sampleRate","setMinSampleCount","minSampleCount","activate","performanceNow_default","deactivateAndFlush","info","target","i","length","source","ownKeys","keys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","forEach","_objectSpread","computeBlankness","state","scrollMetrics","getItemCount","data","dOffset","offset","velocity","visibleLength","round","abs","scrollSpeed","blankTop","first","firstFrame","last","inLayout","min","blankBottom","lastFrame","bottomEdge","blankness","enabled","RefreshControl_RefreshControl","RefreshControl","_this$props","rest","colors","onRefresh","progressBackgroundColor","progressViewOffset","refreshing","size","tintColor","title","titleColor","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","propTypes","exports_RefreshControl","ViewabilityHelper_objectSpread","ViewabilityHelper_defineProperty","_isViewable","viewAreaMode","viewablePercentThreshold","top","bottom","viewportHeight","itemLength","_isEntirelyVisible","pixels","visibleHeight","_getPixelsVisible","react_native_ViewabilityHelper","ViewabilityHelper","config","viewAreaCoveragePercentThreshold","_hasInteracted","_timers","Set","_viewableIndices","_viewableItems","Map","_config","computeViewableItems","itemCount","scrollOffset","renderRange","_this$_config","itemVisiblePercentThreshold","viewableIndices","firstVisible","_ref","JSON","stringify","idx","metrics","onUpdate","createViewToken","onViewableItemsChanged","waitForInteraction","every","v","ii","minimumViewTime","delete","_onUpdateSync","add","resetViewableIndices","recordInteraction","viewableIndicesToCheck","_this2","includes","prevItems","nextItems","map","viewable","changed","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","_ref4","has","_iterator2","_isArray2","_i2","_ref3","_ref5","isViewable","viewableItems","from","values","viewabilityConfig","elementsThatOverlapOffsets","offsets","out","outLength","frame","trailingOffset","kk","newRangeCount","prev","computeWindowedRenderLimits","getFrameMetricsApprox","maxToRenderPerBatch","windowSize","visibleBegin","visibleEnd","overscanLength","fillPreference","overscanBegin","overscanEnd","_elementsThatOverlapO","overscanFirst","overscanLast","visible","newCellCount","maxNewCells","firstWillAddMore","firstShouldIncrement","lastWillAddMore","lastShouldIncrement","Error","react_native_infoLog","_console","console","log","_extends","assign","hasOwnProperty","call","VirtualizedList_objectSpread","VirtualizedList_defineProperty","VirtualizedList_inheritsLoose","_assertThisInitialized","self","ReferenceError","flattenStyle","StyleSheet","flatten","__DEV__","_usedIndexForKey","VirtualizedList_VirtualizedList","_React$PureComponent","VirtualizedList","_props","context","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","virtualizedList","getOutermostParentListRef","_getNestedChildState","existingChildData","_nestedChildLists","get","_registerAsNestedChild","childList","childListsInCell","_cellKeysToChildListKeys","cellKey","set","ref","_unregisterAsNestedChild","_onUpdateSeparators","newProps","_cellRefs","updateSeparatorProps","_averageCellLength","_frames","_footerLength","_hasDataChangedSinceEndReached","_hasMore","_hasWarned","_highestMeasuredFrameIndex","_headerLength","_indicesToKeys","_hasDoneInitialScroll","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dt","timestamp","_scrollRef","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","ScrollView","refreshControl","_onCellUnmount","curr","_onLayout","e","_measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","scrollToIndex","animated","index","onContentSizeChange","_convertParentScrollMetrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","contentOffset","_this$_convertParentS","perf","prevDt","_updateViewableItems","_fillRateHelper","_computeBlankness","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","_this$props3","onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","_this$_scrollMetrics","renderAhead","_getFrameMetricsApprox","newFirst","newLast","cellKeyForIndex","childListKeys","someChildHasMore","childKey","hasMore","_createViewToken","_this$props4","getItem","keyExtractor","item","getItemLayout","_this$props5","frameType","prop_types_default","shape","number","isRequired","checkPropTypes","__isNative","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","pair","initialState","initialNumToRender","storedState","getNestedChildState","listKey","_getCellKey","frames","scrollToEnd","params","veryLast","scrollTo","horizontal","x","y","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","scrollToItem","_this$props2","_index","scrollToOffset","t","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getChildContext","getScrollMetrics","registerAsNestedChild","unregisterAsNestedChild","virtualizedCell","componentDidMount","componentWillUnmount","getDerivedStateFromProps","prevState","extraData","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","prevCellKey","_this$props6","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","_loop","VirtualizedList_CellRenderer","undefined","fillRateHelper","onUpdateSeparators","_onCellLayout","onUnmount","parentProps","disableVirtualization","nestedContext","flatStyles","contentContainerStyle","flexWrap","_this$props7","ListEmptyComponent","ListFooterComponent","_this$props8","inverted","styles","horizontallyInverted","verticallyInverted","element","isValidElement","VirtualizedCellWrapper","spacerKey","lastInitialIndex","_this$state","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","_initBlock","firstSpace","warn","_ref6","endFrame","tailSpacerLength","_element","_element2","scrollProps","scrollEventThrottle","invertStickyHeaders","ret","cloneElement","renderScrollComponent","debug","flex","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props9","_this3","UIManager","measureLayout","error","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","baseStyle","position","right","borderColor","borderWidth","f","left","backgroundColor","_this$props10","onEndReached","_this$_scrollMetrics2","distanceFromEnd","_this$state2","_this$_scrollMetrics3","hiPri","distTop","distBottom","scrollingThreshold","_this4","PureComponent","defaultProps","String","contextTypes","string","func","bool","childContextTypes","_React$Component","CellRenderer","_this5","_len","args","_key","separatorProps","highlighted","leadingItem","_separators","highlight","_this5$props","unhighlight","_this5$props2","updateProps","select","_this5$props3","_proto2","_this$props11","renderItem","separators","itemSeparator","cellStyle","rowReverse","columnReverse","row","Component","_React$Component2","_proto3","transform","scaleY","scaleX","flexDirection","react_native_VirtualizedList","FlatList_extends","FlatList_objectSpread","FlatList_defineProperty","numColumns","FlatList_FlatList","FlatList","_hasWarnedLegacy","_virtualizedListPairs","_captureRef","_listRef","_getItem","_item","_getItemCount","ceil","_keyExtractor","items","it","join","_renderItem","columnWrapperStyle","_item2","_createOnViewableItemsChanged","UNSAFE_componentWillMount","_checkProps","UNSAFE_componentWillReceiveProps","nextProps","legacyImplementation","_pushMultiColumnViewable","arr","react_native_FlatList","__webpack_exports__","__webpack_require__","d","Dimensions","fbjs_lib_ExecutionEnvironment__WEBPACK_IMPORTED_MODULE_0__","debounce__WEBPACK_IMPORTED_MODULE_1__","debounce__WEBPACK_IMPORTED_MODULE_1___default","n","fbjs_lib_invariant__WEBPACK_IMPORTED_MODULE_2__","fbjs_lib_invariant__WEBPACK_IMPORTED_MODULE_2___default","win","devicePixelRatio","innerHeight","innerWidth","screen","dimensions","listeners","dimension","initialDimensions","_update","fontScale","scale","handler","addEventListener","type","removeEventListener","_handler","module","exports","anObject","toObject","toLength","toInteger","advanceStringIndex","regExpExec","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","defined","REPLACE","$replace","maybeCallNative","searchValue","replaceValue","O","fn","regexp","res","rx","S","functionalReplace","global","fullUnicode","unicode","lastIndex","results","result","accumulatedResult","nextSourcePosition","matched","captures","j","namedCaptures","groups","replacerArgs","replacement","getSubstitution","slice","str","tailPos","m","symbols","match","ch","capture","charAt","modules_TextInputState","_currentlyFocusedNode","currentlyFocusedField","document","activeElement","focusTextInput","textFieldNode","focus","blurTextInput","blur","modules_dismissKeyboard","exports_Platform","OS","web","default","emptyObject","modules_ScrollResponder","Mixin","scrollResponderMixinGetInitialState","isTouching","lastMomentumScrollBeginTime","lastMomentumScrollEndTime","observedScrollSinceBecomingResponder","becameResponderWhileAnimating","scrollResponderHandleScrollShouldSetResponder","scrollResponderHandleStartShouldSetResponder","scrollResponderHandleStartShouldSetResponderCapture","scrollResponderIsAnimating","scrollResponderHandleResponderReject","scrollResponderHandleTerminationRequest","scrollResponderHandleTouchEnd","touches","onTouchEnd","scrollResponderHandleResponderRelease","onResponderRelease","currentlyFocusedTextInput","keyboardShouldPersistTaps","onScrollResponderKeyboardDismissed","scrollResponderHandleScroll","scrollResponderHandleResponderGrant","onResponderGrant","scrollResponderHandleScrollBeginDrag","scrollResponderHandleScrollEndDrag","scrollResponderHandleMomentumScrollBegin","onMomentumScrollBegin","scrollResponderHandleMomentumScrollEnd","scrollResponderHandleTouchStart","onTouchStart","scrollResponderHandleTouchMove","onTouchMove","scrollResponderGetScrollableNode","scrollResponderScrollTo","node","scroll","behavior","scrollLeft","scrollTop","scrollResponderScrollWithoutAnimationTo","offsetX","offsetY","scrollResponderZoomTo","rect","scrollResponderFlashScrollIndicators","scrollResponderScrollNativeHandleToKeyboard","nodeHandle","additionalOffset","preventNegativeScrollOffset","additionalScrollOffset","getInnerViewNode","scrollResponderTextInputFocusError","scrollResponderInputMeasureAndScrollToKeyboard","keyboardScreenY","keyboardWillOpenTo","endCoordinates","screenY","scrollOffsetY","componentWillMount","scrollResponderKeyboardWillShow","onKeyboardWillShow","scrollResponderKeyboardWillHide","onKeyboardWillHide","scrollResponderKeyboardDidShow","onKeyboardDidShow","scrollResponderKeyboardDidHide","onKeyboardDidHide","normalizeScrollEvent","scrollHeight","scrollWidth","offsetHeight","offsetWidth","ScrollViewBase_ScrollViewBase","ScrollViewBase","_debouncedOnScrollEnd","debounce_default","_handleScrollEnd","_state","isScrolling","scrollLastTick","_createPreventableScrollHandler","scrollEnabled","preventDefault","_handleScroll","persist","stopPropagation","_shouldEmitScrollEvent","_handleScrollTick","_handleScrollStart","_setViewRef","_viewRef","other","alwaysBounceHorizontal","alwaysBounceVertical","automaticallyAdjustContentInsets","bounces","bouncesZoom","canCancelContentTouches","centerContent","contentInset","contentInsetAdjustmentBehavior","decelerationRate","directionalLockEnabled","endFillColor","indicatorStyle","maximumZoomScale","minimumZoomScale","overScrollMode","pinchGestureEnabled","removeClippedSubviews","scrollIndicatorInsets","scrollPerfTag","scrollsToTop","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","snapToInterval","snapToAlignment","zoomScale","onWheel","compose","scrollDisabled","lastTick","eventThrottle","timeSinceLastTick","touchAction","ScrollView_extends","ScrollView_objectSpread","ScrollView_defineProperty","ScrollView_emptyObject","create_react_class_default","displayName","ViewPropTypes","prop_types","keyboardDismissMode","pagingEnabled","mixins","getInitialState","_scrollViewRef","_innerViewRef","scrollResponder","scrollResponderNode","scrollWithoutAnimationTo","ScrollView_objectWithoutPropertiesLoose","contentSizeChangeProps","_handleContentOnLayout","hasStickyHeaderIndices","Children","child","isSticky","ScrollView_styles","stickyHeader","pagingEnabledChild","contentContainer","collapsable","_setInnerViewRef","contentContainerHorizontal","baseHorizontal","baseVertical","pagingEnabledStyle","pagingEnabledHorizontal","pagingEnabledVertical","onStartShouldSetResponder","onStartShouldSetResponderCapture","onScrollShouldSetResponder","onResponderTerminationRequest","onResponderTerminate","scrollResponderHandleTerminate","onResponderReject","ScrollViewClass","_setScrollViewRef","_e$nativeEvent$layout","component","commonStyle","flexGrow","flexShrink","translateZ","WebkitOverflowScrolling","overflowX","overflowY","zIndex","scrollSnapType","scrollSnapAlign","baseGetTag","getPrototype","isObjectLike","objectTag","funcProto","Function","objectProto","funcToString","toString","objectCtorString","proto","Ctor","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","freeGlobal","freeSelf","root","nativeObjectToString","isOwn","tag","unmasked","overArg","getPrototypeOf","arg","performanceNow","performance","canUseDOM","msPerformance","webkitPerformance","SSRContext","objToKey","isPlainObject_default","sortedObj","sort","reduce","cachedQueriesByClient","WeakMap","getCachedQueriesForClient","client","queriesForClient","getCacheKey","query","printer","useQuery","_temp","_ref$ssr","ssr","_ref$skip","skip","_ref$suspend","suspend","pollInterval","_ref$notifyOnNetworkS","notifyOnNetworkStatusChange","overrideClient","metadata","variables","actualCachePolicy","fetchPolicy","errorPolicy","fetchResults","ApolloContext","ssrManager","ssrInUse","shouldSkip","watchQueryOptions","acc","observableQuery","cacheKey","watchQuery","getCachedObservableQuery","_useState","responseId","setResponseId","currentResult","helpers","fetchMore","refetch","startPolling","stopPolling","updateQuery","errors","getLastResult","loading","networkStatus","bundle_esm","graphQLErrors","partial","invalidateCurrentResult","subscription","subscribe","invalidateCachedObservableQuery","unsubscribe","ensureSupportedFetchPolicy","register","isObject","meta","onFreeze","$freeze","dP","FProto","nameRE"],"mappings":"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","file":"vendors~categories~category~channels~home.js","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport View from '../../exports/View';\nimport React, { Component } from 'react';\n/**\n * Common implementation for a simple stubbed view.\n */\n\n/* eslint-disable react/prop-types */\n\nvar UnimplementedView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(UnimplementedView, _Component);\n\n  function UnimplementedView() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = UnimplementedView.prototype;\n\n  _proto.setNativeProps = function setNativeProps() {// Do nothing.\n    // This method is required in order to use this view as a Touchable* child.\n    // See ensureComponentIsNative.js for more info\n  };\n\n  _proto.render = function render() {\n    return React.createElement(View, {\n      style: [unimplementedViewStyles, this.props.style]\n    }, this.props.children);\n  };\n\n  return UnimplementedView;\n}(Component);\n\nvar unimplementedViewStyles = process.env.NODE_ENV !== 'production' ? {\n  alignSelf: 'flex-start',\n  borderColor: 'red',\n  borderWidth: 1\n} : {};\nexport default UnimplementedView;","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nvar _requestIdleCallback = function _requestIdleCallback(cb, options) {\n  return setTimeout(function () {\n    var start = Date.now();\n    cb({\n      didTimeout: false,\n      timeRemaining: function timeRemaining() {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n}; // $FlowFixMe (TimeoutID type is not recognized by eslint)\n\n\nvar _cancelIdleCallback = function _cancelIdleCallback(id) {\n  clearTimeout(id);\n};\n\nvar isSupported = canUseDOM && typeof window.requestIdleCallback !== 'undefined';\nvar requestIdleCallback = isSupported ? window.requestIdleCallback : _requestIdleCallback;\nvar cancelIdleCallback = isSupported ? window.cancelIdleCallback : _cancelIdleCallback;\nexport default requestIdleCallback;\nexport { cancelIdleCallback };","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport requestIdleCallback, { cancelIdleCallback } from '../../modules/requestIdleCallback';\nvar InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete'\n  },\n\n  /**\n   * Schedule a function to run after all interactions have completed.\n   */\n  runAfterInteractions: function runAfterInteractions(task) {\n    var handle;\n    var promise = new Promise(function (resolve) {\n      handle = requestIdleCallback(function () {\n        if (task) {\n          resolve(task());\n        }\n      });\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: promise.then.bind(promise),\n      cancel: function cancel() {\n        cancelIdleCallback(handle);\n      }\n    };\n  },\n\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle: function createInteractionHandle() {\n    return 1;\n  },\n\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle: function clearInteractionHandle(handle) {\n    invariant(!!handle, 'Must provide a handle to clear.');\n  },\n  addListener: function addListener() {}\n};\nexport default InteractionManager;","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport InteractionManager from '../../../exports/InteractionManager';\n/**\n * A simple class for batching up invocations of a low-pri callback. A timeout is set to run the\n * callback once after a delay, no matter how many times it's scheduled. Once the delay is reached,\n * InteractionManager.runAfterInteractions is used to invoke the callback after any hi-pri\n * interactions are done running.\n *\n * Make sure to cleanup with dispose().  Example:\n *\n *   class Widget extends React.Component {\n *     _batchedSave: new Batchinator(() => this._saveState, 1000);\n *     _saveSate() {\n *       // save this.state to disk\n *     }\n *     componentDidUpdate() {\n *       this._batchedSave.schedule();\n *     }\n *     componentWillUnmount() {\n *       this._batchedSave.dispose();\n *     }\n *     ...\n *   }\n */\n\nvar Batchinator =\n/*#__PURE__*/\nfunction () {\n  function Batchinator(callback, delayMS) {\n    this._delay = delayMS;\n    this._callback = callback;\n  }\n  /*\n   * Cleanup any pending tasks.\n   *\n   * By default, if there is a pending task the callback is run immediately. Set the option abort to\n   * true to not call the callback if it was pending.\n   */\n\n\n  var _proto = Batchinator.prototype;\n\n  _proto.dispose = function dispose(options) {\n    if (options === void 0) {\n      options = {\n        abort: false\n      };\n    }\n\n    if (this._taskHandle) {\n      this._taskHandle.cancel();\n\n      if (!options.abort) {\n        this._callback();\n      }\n\n      this._taskHandle = null;\n    }\n  };\n\n  _proto.schedule = function schedule() {\n    var _this = this;\n\n    if (this._taskHandle) {\n      return;\n    }\n\n    var timeoutHandle = setTimeout(function () {\n      _this._taskHandle = InteractionManager.runAfterInteractions(function () {\n        // Note that we clear the handle before invoking the callback so that if the callback calls\n        // schedule again, it will actually schedule another task.\n        _this._taskHandle = null;\n\n        _this._callback();\n      });\n    }, this._delay);\n    this._taskHandle = {\n      cancel: function cancel() {\n        return clearTimeout(timeoutHandle);\n      }\n    };\n  };\n\n  return Batchinator;\n}();\n\nexport default Batchinator;","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport performanceNow from 'fbjs/lib/performanceNow';\nimport warning from 'fbjs/lib/warning';\n\nvar Info = function Info() {\n  this.any_blank_count = 0;\n  this.any_blank_ms = 0;\n  this.any_blank_speed_sum = 0;\n  this.mostly_blank_count = 0;\n  this.mostly_blank_ms = 0;\n  this.pixels_blank = 0;\n  this.pixels_sampled = 0;\n  this.pixels_scrolled = 0;\n  this.total_time_spent = 0;\n  this.sample_count = 0;\n};\n\nvar DEBUG = false;\nvar _listeners = [];\nvar _minSampleCount = 10;\n\nvar _sampleRate = DEBUG ? 1 : null;\n/**\n * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n *\n * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n * `SceneTracker.getActiveScene` to determine the context of the events.\n */\n\n\nvar FillRateHelper =\n/*#__PURE__*/\nfunction () {\n  FillRateHelper.addListener = function addListener(callback) {\n    warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');\n\n    _listeners.push(callback);\n\n    return {\n      remove: function remove() {\n        _listeners = _listeners.filter(function (listener) {\n          return callback !== listener;\n        });\n      }\n    };\n  };\n\n  FillRateHelper.setSampleRate = function setSampleRate(sampleRate) {\n    _sampleRate = sampleRate;\n  };\n\n  FillRateHelper.setMinSampleCount = function setMinSampleCount(minSampleCount) {\n    _minSampleCount = minSampleCount;\n  };\n\n  function FillRateHelper(getFrameMetrics) {\n    this._anyBlankStartTime = null;\n    this._enabled = false;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n\n    this._resetData();\n  }\n\n  var _proto = FillRateHelper.prototype;\n\n  _proto.activate = function activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug('FillRateHelper: activate');\n      this._samplesStartTime = performanceNow();\n    }\n  };\n\n  _proto.deactivateAndFlush = function deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n\n    var start = this._samplesStartTime; // const for flow\n\n    if (start == null) {\n      DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n      return;\n    }\n\n    if (this._info.sample_count < _minSampleCount) {\n      // Don't bother with under-sampled events.\n      this._resetData();\n\n      return;\n    }\n\n    var total_time_spent = performanceNow() - start;\n\n    var info = _objectSpread({}, this._info, {\n      total_time_spent: total_time_spent\n    });\n\n    if (DEBUG) {\n      var derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n      };\n\n      for (var key in derived) {\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n\n      console.debug('FillRateHelper deactivateAndFlush: ', {\n        derived: derived,\n        info: info\n      });\n    }\n\n    _listeners.forEach(function (listener) {\n      return listener(info);\n    });\n\n    this._resetData();\n  };\n\n  _proto.computeBlankness = function computeBlankness(props, state, scrollMetrics) {\n    if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n      return 0;\n    }\n\n    var dOffset = scrollMetrics.dOffset,\n        offset = scrollMetrics.offset,\n        velocity = scrollMetrics.velocity,\n        visibleLength = scrollMetrics.visibleLength; // Denominator metrics that we track for all events - most of the time there is no blankness and\n    // we want to capture that.\n\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    var scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n    // Whether blank now or not, record the elapsed time blank if we were blank last time.\n\n    var now = performanceNow();\n\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n\n    this._anyBlankStartTime = null;\n\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n\n    this._mostlyBlankStartTime = null;\n    var blankTop = 0;\n    var first = state.first;\n\n    var firstFrame = this._getFrameMetrics(first);\n\n    while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n      firstFrame = this._getFrameMetrics(first);\n      first++;\n    } // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n    // as blank.\n\n\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n    }\n\n    var blankBottom = 0;\n    var last = state.last;\n\n    var lastFrame = this._getFrameMetrics(last);\n\n    while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n      lastFrame = this._getFrameMetrics(last);\n      last--;\n    } // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n    // footer as blank.\n\n\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      var bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n    }\n\n    var pixels_blank = Math.round(blankTop + blankBottom);\n    var blankness = pixels_blank / visibleLength;\n\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n\n    return blankness;\n  };\n\n  _proto.enabled = function enabled() {\n    return this._enabled;\n  };\n\n  _proto._resetData = function _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  };\n\n  return FillRateHelper;\n}();\n\nexport default FillRateHelper;","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport ColorPropType from '../ColorPropType';\nimport View from '../View';\nimport ViewPropTypes from '../ViewPropTypes';\nimport { arrayOf, bool, func, number, oneOf, string } from 'prop-types';\nimport React, { Component } from 'react';\n\nvar RefreshControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(RefreshControl, _Component);\n\n  function RefreshControl() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = RefreshControl.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        colors = _this$props.colors,\n        enabled = _this$props.enabled,\n        onRefresh = _this$props.onRefresh,\n        progressBackgroundColor = _this$props.progressBackgroundColor,\n        progressViewOffset = _this$props.progressViewOffset,\n        refreshing = _this$props.refreshing,\n        size = _this$props.size,\n        tintColor = _this$props.tintColor,\n        title = _this$props.title,\n        titleColor = _this$props.titleColor,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"colors\", \"enabled\", \"onRefresh\", \"progressBackgroundColor\", \"progressViewOffset\", \"refreshing\", \"size\", \"tintColor\", \"title\", \"titleColor\"]);\n\n    return React.createElement(View, rest);\n  };\n\n  return RefreshControl;\n}(Component);\n\nRefreshControl.propTypes = process.env.NODE_ENV !== \"production\" ? _objectSpread({}, ViewPropTypes, {\n  colors: arrayOf(ColorPropType),\n  enabled: bool,\n  onRefresh: func,\n  progressBackgroundColor: ColorPropType,\n  progressViewOffset: number,\n  refreshing: bool.isRequired,\n  size: oneOf([0, 1]),\n  tintColor: ColorPropType,\n  title: string,\n  titleColor: ColorPropType\n}) : {};\nexport default RefreshControl;","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport invariant from 'fbjs/lib/invariant';\n\n/**\n * A Utility class for calculating viewable items based on current metrics like scroll position and\n * layout.\n *\n * An item is said to be in a \"viewable\" state when any of the following\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n * is true):\n *\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n *   visible in the view area >= `itemVisiblePercentThreshold`.\n * - Entirely visible on screen\n */\nvar ViewabilityHelper =\n/*#__PURE__*/\nfunction () {\n  /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an error\n   * found when Flow v0.63 was deployed. To see the error delete this comment\n   * and run Flow. */\n  function ViewabilityHelper(config) {\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n  /**\n   * Cleanup, e.g. on unmount. Clears any pending timers.\n   */\n\n\n  var _proto = ViewabilityHelper.prototype;\n\n  _proto.dispose = function dispose() {\n    this._timers.forEach(clearTimeout);\n  }\n  /**\n   * Determines which items are viewable based on the current metrics and config.\n   */\n  ;\n\n  _proto.computeViewableItems = function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n    var _this$_config = this._config,\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n    invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n    var viewableIndices = [];\n\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n\n    var firstVisible = -1;\n\n    var _ref = renderRange || {\n      first: 0,\n      last: itemCount - 1\n    },\n        first = _ref.first,\n        last = _ref.last;\n\n    invariant(last < itemCount, 'Invalid render range ' + JSON.stringify({\n      renderRange: renderRange,\n      itemCount: itemCount\n    }));\n\n    for (var idx = first; idx <= last; idx++) {\n      var metrics = getFrameMetrics(idx);\n\n      if (!metrics) {\n        continue;\n      }\n\n      var top = metrics.offset - scrollOffset;\n      var bottom = top + metrics.length;\n\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n\n    return viewableIndices;\n  }\n  /**\n   * Figures out which items are viewable and how that has changed from before and calls\n   * `onViewableItemsChanged` as appropriate.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n    var _this = this;\n\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n      return;\n    }\n\n    var viewableIndices = [];\n\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n    }\n\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n      return v === viewableIndices[ii];\n    })) {\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n      // extra work in those cases.\n      return;\n    }\n\n    this._viewableIndices = viewableIndices;\n\n    if (this._config.minimumViewTime) {\n      var handle = setTimeout(function () {\n        _this._timers.delete(handle);\n\n        _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n      }, this._config.minimumViewTime);\n\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n    }\n  }\n  /**\n   * clean-up cached _viewableIndices to evaluate changed items on next update\n   */\n  ;\n\n  _proto.resetViewableIndices = function resetViewableIndices() {\n    this._viewableIndices = [];\n  }\n  /**\n   * Records that an interaction has happened even if there has been no scroll.\n   */\n  ;\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._hasInteracted = true;\n  };\n\n  _proto._onUpdateSync = function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n    var _this2 = this;\n\n    // Filter out indices that have gone out of view since this call was scheduled.\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n      return _this2._viewableIndices.includes(ii);\n    });\n    var prevItems = this._viewableItems;\n    var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n      var viewable = createViewToken(ii, true);\n      return [viewable.key, viewable];\n    }));\n    var changed = [];\n\n    for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var _ref4 = _ref2,\n          key = _ref4[0],\n          viewable = _ref4[1];\n\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n\n    for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var _ref5 = _ref3,\n          key = _ref5[0],\n          viewable = _ref5[1];\n\n      if (!nextItems.has(key)) {\n        changed.push(_objectSpread({}, viewable, {\n          isViewable: false\n        }));\n      }\n    }\n\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed: changed,\n        viewabilityConfig: this._config\n      });\n    }\n  };\n\n  return ViewabilityHelper;\n}();\n\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nexport default ViewabilityHelper;","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport invariant from 'fbjs/lib/invariant';\n/**\n * Used to find the indices of the frames that overlap the given offsets. Useful for finding the\n * items that bound different windows of content, such as the visible area or the buffered overscan\n * area.\n */\n\nfunction elementsThatOverlapOffsets(offsets, itemCount, getFrameMetrics) {\n  var out = [];\n  var outLength = 0;\n\n  for (var ii = 0; ii < itemCount; ii++) {\n    var frame = getFrameMetrics(ii);\n    var trailingOffset = frame.offset + frame.length;\n\n    for (var kk = 0; kk < offsets.length; kk++) {\n      if (out[kk] == null && trailingOffset >= offsets[kk]) {\n        out[kk] = ii;\n        outLength++;\n\n        if (kk === offsets.length - 1) {\n          invariant(outLength === offsets.length, 'bad offsets input, should be in increasing order: %s', JSON.stringify(offsets));\n          return out;\n        }\n      }\n    }\n  }\n\n  return out;\n}\n/**\n * Computes the number of elements in the `next` range that are new compared to the `prev` range.\n * Handy for calculating how many new items will be rendered when the render window changes so we\n * can restrict the number of new items render at once so that content can appear on the screen\n * faster.\n */\n\n\nfunction newRangeCount(prev, next) {\n  return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));\n}\n/**\n * Custom logic for determining which items should be rendered given the current frame and scroll\n * metrics, as well as the previous render state. The algorithm may evolve over time, but generally\n * prioritizes the visible area first, then expands that with overscan regions ahead and behind,\n * biased in the direction of scroll.\n */\n\n\nfunction computeWindowedRenderLimits(props, prev, getFrameMetricsApprox, scrollMetrics) {\n  var data = props.data,\n      getItemCount = props.getItemCount,\n      maxToRenderPerBatch = props.maxToRenderPerBatch,\n      windowSize = props.windowSize;\n  var itemCount = getItemCount(data);\n\n  if (itemCount === 0) {\n    return prev;\n  }\n\n  var offset = scrollMetrics.offset,\n      velocity = scrollMetrics.velocity,\n      visibleLength = scrollMetrics.visibleLength; // Start with visible area, then compute maximum overscan region by expanding from there, biased\n  // in the direction of scroll. Total overscan area is capped, which should cap memory consumption\n  // too.\n\n  var visibleBegin = Math.max(0, offset);\n  var visibleEnd = visibleBegin + visibleLength;\n  var overscanLength = (windowSize - 1) * visibleLength; // Considering velocity seems to introduce more churn than it's worth.\n\n  var leadFactor = 0.5; // Math.max(0, Math.min(1, velocity / 25 + 0.5));\n\n  var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';\n  var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);\n  var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);\n  var lastItemOffset = getFrameMetricsApprox(itemCount - 1).offset;\n\n  if (lastItemOffset < overscanBegin) {\n    // Entire list is before our overscan window\n    return {\n      first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),\n      last: itemCount - 1\n    };\n  } // Find the indices that correspond to the items at the render boundaries we're targeting.\n\n\n  var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props.getItemCount(props.data), getFrameMetricsApprox),\n      overscanFirst = _elementsThatOverlapO[0],\n      first = _elementsThatOverlapO[1],\n      last = _elementsThatOverlapO[2],\n      overscanLast = _elementsThatOverlapO[3];\n\n  overscanFirst = overscanFirst == null ? 0 : overscanFirst;\n  first = first == null ? Math.max(0, overscanFirst) : first;\n  overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;\n  last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;\n  var visible = {\n    first: first,\n    last: last\n  }; // We want to limit the number of new cells we're rendering per batch so that we can fill the\n  // content on the screen quickly. If we rendered the entire overscan window at once, the user\n  // could be staring at white space for a long time waiting for a bunch of offscreen content to\n  // render.\n\n  var newCellCount = newRangeCount(prev, visible);\n\n  while (true) {\n    if (first <= overscanFirst && last >= overscanLast) {\n      // If we fill the entire overscan range, we're done.\n      break;\n    }\n\n    var maxNewCells = newCellCount >= maxToRenderPerBatch;\n    var firstWillAddMore = first <= prev.first || first > prev.last;\n    var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);\n    var lastWillAddMore = last >= prev.last || last < prev.first;\n    var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);\n\n    if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {\n      // We only want to stop if we've hit maxNewCells AND we cannot increment first or last\n      // without rendering new items. This let's us preserve as many already rendered items as\n      // possible, reducing render churn and keeping the rendered overscan range as large as\n      // possible.\n      break;\n    }\n\n    if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {\n      if (firstWillAddMore) {\n        newCellCount++;\n      }\n\n      first--;\n    }\n\n    if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {\n      if (lastWillAddMore) {\n        newCellCount++;\n      }\n\n      last++;\n    }\n  }\n\n  if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {\n    throw new Error('Bad window calculation ' + JSON.stringify({\n      first: first,\n      last: last,\n      itemCount: itemCount,\n      overscanFirst: overscanFirst,\n      overscanLast: overscanLast,\n      visible: visible\n    }));\n  }\n\n  return {\n    first: first,\n    last: last\n  };\n}\n\nexport { computeWindowedRenderLimits, elementsThatOverlapOffsets, newRangeCount };\nvar VirtualizeUtils = {\n  computeWindowedRenderLimits: computeWindowedRenderLimits,\n  elementsThatOverlapOffsets: elementsThatOverlapOffsets,\n  newRangeCount: newRangeCount\n};\nexport default VirtualizeUtils;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\n\nfunction infoLog() {\n  var _console;\n\n  return (_console = console).log.apply(_console, arguments);\n}\n\nexport default infoLog;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport Batchinator from '../Batchinator';\nimport FillRateHelper from '../FillRateHelper';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport UIManager from '../../../exports/UIManager';\nimport View from '../../../exports/View';\nimport ViewabilityHelper from '../ViewabilityHelper';\nimport { computeWindowedRenderLimits } from '../VirtualizeUtils';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nimport infoLog from '../infoLog';\nimport invariant from 'fbjs/lib/invariant';\nimport warning from 'fbjs/lib/warning';\nvar flattenStyle = StyleSheet.flatten;\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar _usedIndexForKey = false;\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](/react-native/docs/flatlist.html)\n * and [`<SectionList>`](/react-native/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nvar VirtualizedList =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(VirtualizedList, _React$PureComponent);\n\n  var _proto = VirtualizedList.prototype;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  _proto.scrollToEnd = function scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n\n    var frame = this._getFrameMetricsApprox(veryLast);\n\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n\n    this._scrollRef.scrollTo(\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n     * comment suppresses an error when upgrading Flow's support for React.\n     * To see the error delete this comment and run Flow. */\n    this.props.horizontal ? {\n      x: offset,\n      animated: animated\n    } : {\n      y: offset,\n      animated: animated\n    });\n  } // scrollToIndex may be janky without getItemLayout prop\n  ;\n\n  _proto.scrollToIndex = function scrollToIndex(params) {\n    var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n    invariant(index >= 0 && index < getItemCount(data), \"scrollToIndex out of range: \" + index + \" vs \" + (getItemCount(data) - 1));\n\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index: index\n      });\n      return;\n    }\n\n    var frame = this._getFrameMetricsApprox(index);\n\n    var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n\n    this._scrollRef.scrollTo(\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n     * comment suppresses an error when upgrading Flow's support for React.\n     * To see the error delete this comment and run Flow. */\n    horizontal ? {\n      x: offset,\n      animated: animated\n    } : {\n      y: offset,\n      animated: animated\n    });\n  } // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  ;\n\n  _proto.scrollToItem = function scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread({}, params, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  ;\n\n  _proto.scrollToOffset = function scrollToOffset(params) {\n    var animated = params.animated,\n        offset = params.offset;\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n\n    this._scrollRef.scrollTo(\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n     * comment suppresses an error when upgrading Flow's support for React.\n     * To see the error delete this comment and run Flow. */\n    this.props.horizontal ? {\n      x: offset,\n      animated: animated\n    } : {\n      y: offset,\n      animated: animated\n    });\n  };\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._nestedChildLists.forEach(function (childList) {\n      childList.ref && childList.ref.recordInteraction();\n    });\n\n    this._viewabilityTuples.forEach(function (t) {\n      t.viewabilityHelper.recordInteraction();\n    });\n\n    this._updateViewableItems(this.props.data);\n  };\n\n  _proto.flashScrollIndicators = function flashScrollIndicators() {\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.flashScrollIndicators();\n  }\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  ;\n\n  _proto.getScrollResponder = function getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  };\n\n  _proto.getScrollableNode = function getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  };\n\n  _proto.setNativeProps = function setNativeProps(props) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  };\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      virtualizedList: {\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: this.props.horizontal,\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild\n      }\n    };\n  };\n\n  _proto._getCellKey = function _getCellKey() {\n    return this.context.virtualizedCell && this.context.virtualizedCell.cellKey || 'rootList';\n  };\n\n  _proto.hasMore = function hasMore() {\n    return this._hasMore;\n  };\n\n  function VirtualizedList(_props, context) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, _props, context) || this;\n\n    _this._getScrollMetrics = function () {\n      return _this._scrollMetrics;\n    };\n\n    _this._getOutermostParentListRef = function () {\n      if (_this._isNestedWithSameOrientation()) {\n        return _this.context.virtualizedList.getOutermostParentListRef();\n      } else {\n        return _assertThisInitialized(_assertThisInitialized(_this));\n      }\n    };\n\n    _this._getNestedChildState = function (key) {\n      var existingChildData = _this._nestedChildLists.get(key);\n\n      return existingChildData && existingChildData.state;\n    };\n\n    _this._registerAsNestedChild = function (childList) {\n      // Register the mapping between this child key and the cellKey for its cell\n      var childListsInCell = _this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n\n      _this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n      var existingChildData = _this._nestedChildLists.get(childList.key);\n\n      invariant(!(existingChildData && existingChildData.ref !== null), 'A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.');\n\n      _this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n\n      if (_this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n\n    _this._unregisterAsNestedChild = function (childList) {\n      _this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n\n    _this._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n\n    _this._averageCellLength = 0;\n    _this._cellKeysToChildListKeys = new Map();\n    _this._cellRefs = {};\n    _this._frames = {};\n    _this._footerLength = 0;\n    _this._hasDataChangedSinceEndReached = true;\n    _this._hasInteracted = false;\n    _this._hasMore = false;\n    _this._hasWarned = {};\n    _this._highestMeasuredFrameIndex = 0;\n    _this._headerLength = 0;\n    _this._indicesToKeys = new Map();\n    _this._hasDoneInitialScroll = false;\n    _this._nestedChildLists = new Map();\n    _this._offsetFromParentVirtualizedList = 0;\n    _this._prevParentOffset = 0;\n    _this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    _this._scrollRef = null;\n    _this._sentEndForContentLength = 0;\n    _this._totalCellLength = 0;\n    _this._totalCellsMeasured = 0;\n    _this._viewabilityTuples = [];\n\n    _this._captureScrollRef = function (ref) {\n      _this._scrollRef = ref;\n    };\n\n    _this._defaultRenderScrollComponent = function (props) {\n      if (_this._isNestedWithSameOrientation()) {\n        return React.createElement(View, props);\n      } else if (props.onRefresh) {\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');\n        return React.createElement(ScrollView, _extends({}, props, {\n          refreshControl:\n          /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n           * comment suppresses an error when upgrading Flow's support for\n           * React. To see the error delete this comment and run Flow. */\n          React.createElement(RefreshControl, {\n            refreshing: props.refreshing,\n            onRefresh: props.onRefresh,\n            progressViewOffset: props.progressViewOffset\n          })\n        }));\n      } else {\n        return React.createElement(ScrollView, props);\n      }\n    };\n\n    _this._onCellUnmount = function (cellKey) {\n      var curr = _this._frames[cellKey];\n\n      if (curr) {\n        _this._frames[cellKey] = _objectSpread({}, curr, {\n          inLayout: false\n        });\n      }\n    };\n\n    _this._onLayout = function (e) {\n      if (_this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        _this._measureLayoutRelativeToContainingList();\n      } else {\n        _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);\n      }\n\n      _this.props.onLayout && _this.props.onLayout(e);\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._onLayoutEmpty = function (e) {\n      _this.props.onLayout && _this.props.onLayout(e);\n    };\n\n    _this._onLayoutFooter = function (e) {\n      _this._footerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onLayoutHeader = function (e) {\n      _this._headerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 && !_this._hasDoneInitialScroll) {\n        _this.scrollToIndex({\n          animated: false,\n          index: _this.props.initialScrollIndex\n        });\n\n        _this._hasDoneInitialScroll = true;\n      }\n\n      if (_this.props.onContentSizeChange) {\n        _this.props.onContentSizeChange(width, height);\n      }\n\n      _this._scrollMetrics.contentLength = _this._selectLength({\n        height: height,\n        width: width\n      });\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._convertParentScrollMetrics = function (metrics) {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - _this._offsetFromParentVirtualizedList; // Child's visible length is the same as its parent's\n\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this._scrollMetrics.offset;\n      var contentLength = _this._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n\n    _this._onScroll = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScroll(e);\n      });\n\n      if (_this.props.onScroll) {\n        _this.props.onScroll(e);\n      }\n\n      var timestamp = e.timeStamp;\n\n      var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);\n\n      var contentLength = _this._selectLength(e.nativeEvent.contentSize);\n\n      var offset = _this._selectOffset(e.nativeEvent.contentOffset);\n\n      var dOffset = offset - _this._scrollMetrics.offset;\n\n      if (_this._isNestedWithSameOrientation()) {\n        if (_this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n\n        var _this$_convertParentS = _this._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n\n      var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n\n      if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this._hasWarned.perf = true;\n      }\n\n      _this._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength\n      };\n\n      _this._updateViewableItems(_this.props.data);\n\n      if (!_this.props) {\n        return;\n      }\n\n      _this._maybeCallOnEndReached();\n\n      if (velocity !== 0) {\n        _this._fillRateHelper.activate();\n      }\n\n      _this._computeBlankness();\n\n      _this._scheduleCellsToRenderUpdate();\n    };\n\n    _this._onScrollBeginDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n\n      _this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n\n      _this._hasInteracted = true;\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n\n    _this._onScrollEndDrag = function (e) {\n      var velocity = e.nativeEvent.velocity;\n\n      if (velocity) {\n        _this._scrollMetrics.velocity = _this._selectOffset(velocity);\n      }\n\n      _this._computeBlankness();\n\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n\n    _this._onMomentumScrollEnd = function (e) {\n      _this._scrollMetrics.velocity = 0;\n\n      _this._computeBlankness();\n\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n\n    _this._updateCellsToRender = function () {\n      var _this$props3 = _this.props,\n          data = _this$props3.data,\n          getItemCount = _this$props3.getItemCount,\n          onEndReachedThreshold = _this$props3.onEndReachedThreshold;\n\n      var isVirtualizationDisabled = _this._isVirtualizationDisabled();\n\n      _this._updateViewableItems(data);\n\n      if (!data) {\n        return;\n      }\n\n      _this.setState(function (state) {\n        var newState;\n\n        if (!isVirtualizationDisabled) {\n          // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n          // and wipe out the initialNumToRender rendered elements.\n          // So let's wait until the scroll view metrics have been set up. And until then,\n          // we will trust the initialNumToRender suggestion\n          if (_this._scrollMetrics.visibleLength) {\n            // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n            // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n            // So let's wait until we've scrolled the view to the right place. And until then,\n            // we will trust the initialScrollIndex suggestion.\n            if (!_this.props.initialScrollIndex || _this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(_this.props, state, _this._getFrameMetricsApprox, _this._scrollMetrics);\n            }\n          }\n        } else {\n          var _this$_scrollMetrics = _this._scrollMetrics,\n              contentLength = _this$_scrollMetrics.contentLength,\n              offset = _this$_scrollMetrics.offset,\n              visibleLength = _this$_scrollMetrics.visibleLength;\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead =\n          /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          distanceFromEnd < onEndReachedThreshold * visibleLength ? _this.props.maxToRenderPerBatch : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n\n        if (newState && _this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last; // If some cell in the new state has a child list in it, we should only render\n          // up through that item, so that we give that list a chance to render.\n          // Otherwise there's churn from multiple child lists mounting and un-mounting\n          // their items.\n\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = _this._indicesToKeys.get(ii);\n\n            var childListKeys = cellKeyForIndex && _this._cellKeysToChildListKeys.get(cellKeyForIndex);\n\n            if (!childListKeys) {\n              continue;\n            }\n\n            var someChildHasMore = false; // For each cell, need to check whether any child list in it has more elements to render\n\n            for (var _iterator = childListKeys, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n              var _ref;\n\n              if (_isArray) {\n                if (_i >= _iterator.length) break;\n                _ref = _iterator[_i++];\n              } else {\n                _i = _iterator.next();\n                if (_i.done) break;\n                _ref = _i.value;\n              }\n\n              var childKey = _ref;\n\n              var childList = _this._nestedChildLists.get(childKey);\n\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n\n            if (someChildHasMore) {\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n\n        return newState;\n      });\n    };\n\n    _this._createViewToken = function (index, isViewable) {\n      var _this$props4 = _this.props,\n          data = _this$props4.data,\n          getItem = _this$props4.getItem,\n          keyExtractor = _this$props4.keyExtractor;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: keyExtractor(item, index),\n        isViewable: isViewable\n      };\n    };\n\n    _this._getFrameMetricsApprox = function (index) {\n      var frame = _this._getFrameMetrics(index);\n\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var getItemLayout = _this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this._averageCellLength,\n          offset: _this._averageCellLength * index\n        };\n      }\n    };\n\n    _this._getFrameMetrics = function (index) {\n      var _this$props5 = _this.props,\n          data = _this$props5.data,\n          getItem = _this$props5.getItem,\n          getItemCount = _this$props5.getItemCount,\n          getItemLayout = _this$props5.getItemLayout,\n          keyExtractor = _this$props5.keyExtractor;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n\n      var frame = item && _this._frames[keyExtractor(item, index)];\n\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n\n          if (__DEV__) {\n            var frameType = PropTypes.shape({\n              length: PropTypes.number.isRequired,\n              offset: PropTypes.number.isRequired,\n              index: PropTypes.number.isRequired\n            }).isRequired;\n            PropTypes.checkPropTypes({\n              frame: frameType\n            }, {\n              frame: frame\n            }, 'frame', 'VirtualizedList.getItemLayout');\n          }\n        }\n      }\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n\n\n      return frame;\n    };\n\n    invariant(!_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(_props.windowSize > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);\n    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, _this.props.updateCellsBatchingPeriod);\n\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else if (_this.props.onViewableItemsChanged) {\n      _this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(_this.props.viewabilityConfig),\n        onViewableItemsChanged: _this.props.onViewableItemsChanged\n      });\n    }\n\n    var initialState = {\n      first: _this.props.initialScrollIndex || 0,\n      last: Math.min(_this.props.getItemCount(_this.props.data), (_this.props.initialScrollIndex || 0) + _this.props.initialNumToRender) - 1\n    };\n\n    if (_this._isNestedWithSameOrientation()) {\n      var storedState = _this.context.virtualizedList.getNestedChildState(_this.props.listKey || _this._getCellKey());\n\n      if (storedState) {\n        initialState = storedState;\n        _this.state = storedState;\n        _this._frames = storedState.frames;\n      }\n    }\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this.props.listKey || this._getCellKey(),\n        ref: this\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.unregisterAsNestedChild({\n        key: this.props.listKey || this._getCellKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames\n        }\n      });\n    }\n\n    this._updateViewableItems(null);\n\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n\n    this._viewabilityTuples.forEach(function (tuple) {\n      tuple.viewabilityHelper.dispose();\n    });\n\n    this._fillRateHelper.deactivateAndFlush();\n  };\n\n  VirtualizedList.getDerivedStateFromProps = function getDerivedStateFromProps(newProps, prevState) {\n    var data = newProps.data,\n        extraData = newProps.extraData,\n        getItemCount = newProps.getItemCount,\n        maxToRenderPerBatch = newProps.maxToRenderPerBatch; // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n\n    return {\n      first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n    };\n  };\n\n  _proto._pushCells = function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this2 = this;\n\n    var _this$props6 = this.props,\n        CellRendererComponent = _this$props6.CellRendererComponent,\n        ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n        data = _this$props6.data,\n        getItem = _this$props6.getItem,\n        getItemCount = _this$props6.getItemCount,\n        horizontal = _this$props6.horizontal,\n        keyExtractor = _this$props6.keyExtractor;\n    var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n\n    var _loop = function _loop(ii) {\n      var item = getItem(data, ii);\n      var key = keyExtractor(item, ii);\n\n      _this2._indicesToKeys.set(ii, key);\n\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      cells.push(React.createElement(CellRenderer, {\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        cellKey: key,\n        fillRateHelper: _this2._fillRateHelper,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this2._onUpdateSeparators,\n        onLayout: function onLayout(e) {\n          return _this2._onCellLayout(e, key, ii);\n        },\n        onUnmount: _this2._onCellUnmount,\n        parentProps: _this2.props,\n        ref: function ref(_ref2) {\n          _this2._cellRefs[key] = _ref2;\n        }\n      }));\n      prevCellKey = key;\n    };\n\n    for (var ii = first; ii <= last; ii++) {\n      _loop(ii);\n    }\n  };\n\n  _proto._isVirtualizationDisabled = function _isVirtualizationDisabled() {\n    return this.props.disableVirtualization;\n  };\n\n  _proto._isNestedWithSameOrientation = function _isNestedWithSameOrientation() {\n    var nestedContext = this.context.virtualizedList;\n    return !!(nestedContext && !!nestedContext.horizontal === !!this.props.horizontal);\n  };\n\n  _proto.render = function render() {\n    if (__DEV__) {\n      var flatStyles = flattenStyle(this.props.contentContainerStyle);\n      warning(flatStyles == null || flatStyles.flexWrap !== 'wrap', '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n    }\n\n    var _this$props7 = this.props,\n        ListEmptyComponent = _this$props7.ListEmptyComponent,\n        ListFooterComponent = _this$props7.ListFooterComponent,\n        ListHeaderComponent = _this$props7.ListHeaderComponent;\n    var _this$props8 = this.props,\n        data = _this$props8.data,\n        horizontal = _this$props8.horizontal;\n\n    var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n    var inversionStyle = this.props.inverted ? this.props.horizontal ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n\n      var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : // $FlowFixMe\n      React.createElement(ListHeaderComponent, null);\n      cells.push(React.createElement(VirtualizedCellWrapper, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: inversionStyle\n      }, element)));\n    }\n\n    var itemCount = this.props.getItemCount(data);\n\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      var spacerKey = !horizontal ? 'height' : 'width';\n      var lastInitialIndex = this.props.initialScrollIndex ? -1 : this.props.initialNumToRender - 1;\n      var _this$state = this.state,\n          first = _this$state.first,\n          last = _this$state.last;\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n\n      var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        var insertedStickySpacer = false;\n\n        if (stickyIndicesFromProps.size > 0) {\n          var stickyOffset = ListHeaderComponent ? 1 : 0; // See if there are any sticky headers in the virtualized space that we need to render.\n\n          for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              var _ref3, _ref4;\n\n              var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n              var stickyBlock = this._getFrameMetricsApprox(ii);\n\n              var leadSpace = stickyBlock.offset - (initBlock.offset + initBlock.length);\n              cells.push(React.createElement(View, {\n                key: \"$sticky_lead\",\n                style: (_ref3 = {}, _ref3[spacerKey] = leadSpace, _ref3)\n              }));\n\n              this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n\n              var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n              cells.push(React.createElement(View, {\n                key: \"$sticky_trail\",\n                style: (_ref4 = {}, _ref4[spacerKey] = trailSpace, _ref4)\n              }));\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n\n        if (!insertedStickySpacer) {\n          var _ref5;\n\n          var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n          var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n\n          cells.push(React.createElement(View, {\n            key: \"$lead_spacer\",\n            style: (_ref5 = {}, _ref5[spacerKey] = firstSpace, _ref5)\n          }));\n        }\n      }\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key property on each ' + 'item or provide a custom keyExtractor.');\n        this._hasWarned.keys = true;\n      }\n\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        var _ref6;\n\n        var lastFrame = this._getFrameMetricsApprox(last); // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n\n\n        var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n\n        var endFrame = this._getFrameMetricsApprox(end);\n\n        var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n        cells.push(React.createElement(View, {\n          key: \"$tail_spacer\",\n          style: (_ref6 = {}, _ref6[spacerKey] = tailSpacerLength, _ref6)\n        }));\n      }\n    } else if (ListEmptyComponent) {\n      var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : // $FlowFixMe\n      React.createElement(ListEmptyComponent, null);\n\n      cells.push(React.createElement(View, {\n        key: \"$empty\",\n        onLayout: this._onLayoutEmpty,\n        style: inversionStyle\n      }, _element));\n    }\n\n    if (ListFooterComponent) {\n      var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : // $FlowFixMe\n      React.createElement(ListFooterComponent, null);\n\n      cells.push(React.createElement(VirtualizedCellWrapper, {\n        cellKey: this._getCellKey() + '-footer',\n        key: \"$footer\"\n      }, React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: inversionStyle\n      }, _element2)));\n    }\n\n    var scrollProps = _objectSpread({}, this.props, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle,\n      // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n      stickyHeaderIndices: stickyHeaderIndices\n    });\n\n    if (inversionStyle) {\n      scrollProps.style = [inversionStyle, this.props.style];\n    }\n\n    this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n    var ret = React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells);\n\n    if (this.props.debug) {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        }\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props9 = this.props,\n        data = _this$props9.data,\n        extraData = _this$props9.extraData;\n\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      this._hasDataChangedSinceEndReached = true; // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _proto._computeBlankness = function _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n  };\n\n  _proto._onCellLayout = function _onCellLayout(e, cellKey, index) {\n    var layout = e.nativeEvent.layout;\n    var next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index: index,\n      inLayout: true\n    };\n    var curr = this._frames[cellKey];\n\n    if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._computeBlankness();\n  };\n\n  _proto._measureLayoutRelativeToContainingList = function _measureLayoutRelativeToContainingList() {\n    var _this3 = this;\n\n    UIManager.measureLayout(findNodeHandle(this), findNodeHandle(this.context.virtualizedList.getOutermostParentListRef()), function (error) {\n      console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n    }, function (x, y, width, height) {\n      _this3._offsetFromParentVirtualizedList = _this3._selectOffset({\n        x: x,\n        y: y\n      });\n      _this3._scrollMetrics.contentLength = _this3._selectLength({\n        width: width,\n        height: height\n      });\n\n      var scrollMetrics = _this3._convertParentScrollMetrics(_this3.context.virtualizedList.getScrollMetrics());\n\n      _this3._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n      _this3._scrollMetrics.offset = scrollMetrics.offset;\n    });\n  };\n\n  _proto._renderDebugOverlay = function _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / this._scrollMetrics.contentLength;\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this._getFrameMetricsApprox(ii);\n\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n\n    var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n\n    var frameLast = this._getFrameMetricsApprox(this.state.last);\n\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    var baseStyle = {\n      position: 'absolute',\n      top: 0,\n      right: 0\n    };\n    return React.createElement(View, {\n      style: _objectSpread({}, baseStyle, {\n        bottom: 0,\n        width: 20,\n        borderColor: 'blue',\n        borderWidth: 1\n      })\n    }, framesInLayout.map(function (f, ii) {\n      return React.createElement(View, {\n        key: 'f' + ii,\n        style: _objectSpread({}, baseStyle, {\n          left: 0,\n          top: f.offset * normalize,\n          height: f.length * normalize,\n          backgroundColor: 'orange'\n        })\n      });\n    }), React.createElement(View, {\n      style: _objectSpread({}, baseStyle, {\n        left: 0,\n        top: windowTop * normalize,\n        height: windowLen * normalize,\n        borderColor: 'green',\n        borderWidth: 2\n      })\n    }), React.createElement(View, {\n      style: _objectSpread({}, baseStyle, {\n        left: 0,\n        top: visTop * normalize,\n        height: visLen * normalize,\n        borderColor: 'red',\n        borderWidth: 2\n      })\n    }));\n  };\n\n  _proto._selectLength = function _selectLength(metrics) {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  };\n\n  _proto._selectOffset = function _selectOffset(metrics) {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  };\n\n  _proto._maybeCallOnEndReached = function _maybeCallOnEndReached() {\n    var _this$props10 = this.props,\n        data = _this$props10.data,\n        getItemCount = _this$props10.getItemCount,\n        onEndReached = _this$props10.onEndReached,\n        onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n\n    if (onEndReached && this.state.last === getItemCount(data) - 1 &&\n    /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.63 was deployed. To see the error delete this\n     * comment and run Flow. */\n    distanceFromEnd < onEndReachedThreshold * visibleLength && (this._hasDataChangedSinceEndReached || this._scrollMetrics.contentLength !== this._sentEndForContentLength)) {\n      // Only call onEndReached once for a given dataset + content length.\n      this._hasDataChangedSinceEndReached = false;\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd: distanceFromEnd\n      });\n    }\n  };\n\n  _proto._scheduleCellsToRenderUpdate = function _scheduleCellsToRenderUpdate() {\n    var _this$state2 = this.state,\n        first = _this$state2.first,\n        last = _this$state2.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n\n    if (first > 0 || last < itemCount - 1) {\n      var distTop = offset - this._getFrameMetricsApprox(first).offset;\n\n      var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      var scrollingThreshold =\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete\n       * this comment and run Flow. */\n      this.props.onEndReachedThreshold * visibleLength / 2;\n      hiPri = Math.min(distTop, distBottom) < 0 || velocity < -2 && distTop < scrollingThreshold || velocity > 2 && distBottom < scrollingThreshold;\n    } // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n\n\n    if (hiPri && this._averageCellLength) {\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n\n      this._updateCellsToRender();\n\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  };\n\n  _proto._updateViewableItems = function _updateViewableItems(data) {\n    var _this4 = this;\n\n    var getItemCount = this.props.getItemCount;\n\n    this._viewabilityTuples.forEach(function (tuple) {\n      tuple.viewabilityHelper.onUpdate(getItemCount(data), _this4._scrollMetrics.offset, _this4._scrollMetrics.visibleLength, _this4._getFrameMetrics, _this4._createViewToken, tuple.onViewableItemsChanged, _this4.state);\n    });\n  };\n\n  return VirtualizedList;\n}(React.PureComponent);\n\nVirtualizedList.defaultProps = {\n  disableVirtualization: process.env.NODE_ENV === 'test',\n  horizontal: false,\n  initialNumToRender: 10,\n  keyExtractor: function keyExtractor(item, index) {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    _usedIndexForKey = true;\n    return String(index);\n  },\n  maxToRenderPerBatch: 10,\n  onEndReachedThreshold: 2,\n  // multiples of length\n  scrollEventThrottle: 50,\n  updateCellsBatchingPeriod: 50,\n  windowSize: 21 // multiples of length\n\n};\nVirtualizedList.contextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  }),\n  virtualizedList: PropTypes.shape({\n    getScrollMetrics: PropTypes.func,\n    horizontal: PropTypes.bool,\n    getOutermostParentListRef: PropTypes.func,\n    getNestedChildState: PropTypes.func,\n    registerAsNestedChild: PropTypes.func,\n    unregisterAsNestedChild: PropTypes.func\n  })\n};\nVirtualizedList.childContextTypes = {\n  virtualizedList: PropTypes.shape({\n    getScrollMetrics: PropTypes.func,\n    horizontal: PropTypes.bool,\n    getOutermostParentListRef: PropTypes.func,\n    getNestedChildState: PropTypes.func,\n    registerAsNestedChild: PropTypes.func,\n    unregisterAsNestedChild: PropTypes.func\n  })\n};\n\nvar CellRenderer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CellRenderer, _React$Component);\n\n  function CellRenderer() {\n    var _this5;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this5 = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this5.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: _this5.props.item\n      }\n    };\n    _this5._separators = {\n      highlight: function highlight() {\n        var _this5$props = _this5.props,\n            cellKey = _this5$props.cellKey,\n            prevCellKey = _this5$props.prevCellKey;\n\n        _this5.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: function unhighlight() {\n        var _this5$props2 = _this5.props,\n            cellKey = _this5$props2.cellKey,\n            prevCellKey = _this5$props2.prevCellKey;\n\n        _this5.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: function updateProps(select, newProps) {\n        var _this5$props3 = _this5.props,\n            cellKey = _this5$props3.cellKey,\n            prevCellKey = _this5$props3.prevCellKey;\n\n        _this5.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n    return _this5;\n  }\n\n  var _proto2 = CellRenderer.prototype;\n\n  _proto2.getChildContext = function getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey\n      }\n    };\n  } // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  ;\n\n  _proto2.updateSeparatorProps = function updateSeparatorProps(newProps) {\n    this.setState(function (state) {\n      return {\n        separatorProps: _objectSpread({}, state.separatorProps, newProps)\n      };\n    });\n  };\n\n  _proto2.componentWillUnmount = function componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  };\n\n  _proto2.render = function render() {\n    var _this$props11 = this.props,\n        CellRendererComponent = _this$props11.CellRendererComponent,\n        ItemSeparatorComponent = _this$props11.ItemSeparatorComponent,\n        fillRateHelper = _this$props11.fillRateHelper,\n        horizontal = _this$props11.horizontal,\n        item = _this$props11.item,\n        index = _this$props11.index,\n        inversionStyle = _this$props11.inversionStyle,\n        parentProps = _this$props11.parentProps;\n    var renderItem = parentProps.renderItem,\n        getItemLayout = parentProps.getItemLayout;\n    invariant(renderItem, 'no renderItem!');\n    var element = renderItem({\n      item: item,\n      index: index,\n      separators: this._separators\n    });\n    var onLayout = getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout; // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n\n    var itemSeparator = ItemSeparatorComponent && React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n    var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n\n    if (!CellRendererComponent) {\n      return React.createElement(View, {\n        style: cellStyle,\n        onLayout: onLayout\n      }, element, itemSeparator);\n    }\n\n    return React.createElement(CellRendererComponent, _extends({}, this.props, {\n      style: cellStyle,\n      onLayout: onLayout\n    }), element, itemSeparator);\n  };\n\n  return CellRenderer;\n}(React.Component);\n\nCellRenderer.childContextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  })\n};\n\nvar VirtualizedCellWrapper =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inheritsLoose(VirtualizedCellWrapper, _React$Component2);\n\n  function VirtualizedCellWrapper() {\n    return _React$Component2.apply(this, arguments) || this;\n  }\n\n  var _proto3 = VirtualizedCellWrapper.prototype;\n\n  _proto3.getChildContext = function getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey\n      }\n    };\n  };\n\n  _proto3.render = function render() {\n    return this.props.children;\n  };\n\n  return VirtualizedCellWrapper;\n}(React.Component);\n\nVirtualizedCellWrapper.childContextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  })\n};\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  }\n});\nexport default VirtualizedList;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport UnimplementedView from '../../../modules/UnimplementedView';\nimport React from 'react';\nimport View from '../../../exports/View';\nimport VirtualizedList from '../VirtualizedList';\nimport invariant from 'fbjs/lib/invariant';\n\nvar defaultProps = _objectSpread({}, VirtualizedList.defaultProps, {\n  numColumns: 1\n});\n\n/**\n * A performant interface for rendering simple, flat lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Optional horizontal mode.\n *  - Configurable viewability callbacks.\n *  - Header support.\n *  - Footer support.\n *  - Separator support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *  - ScrollToIndex support.\n *\n * If you need section support, use [`<SectionList>`](docs/sectionlist.html).\n *\n * Minimal Example:\n *\n *     <FlatList\n *       data={[{key: 'a'}, {key: 'b'}]}\n *       renderItem={({item}) => <Text>{item.key}</Text>}\n *     />\n *\n * More complex, multi-select example demonstrating `PureComponent` usage for perf optimization and avoiding bugs.\n *\n * - By binding the `onPressItem` handler, the props will remain `===` and `PureComponent` will\n *   prevent wasteful re-renders unless the actual `id`, `selected`, or `title` props change, even\n *   if the components rendered in `MyListItem` did not have such optimizations.\n * - By passing `extraData={this.state}` to `FlatList` we make sure `FlatList` itself will re-render\n *   when the `state.selected` changes. Without setting this prop, `FlatList` would not know it\n *   needs to re-render any items because it is also a `PureComponent` and the prop comparison will\n *   not show any changes.\n * - `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.\n *\n *\n *     class MyListItem extends React.PureComponent {\n *       _onPress = () => {\n *         this.props.onPressItem(this.props.id);\n *       };\n *\n *       render() {\n *         const textColor = this.props.selected ? \"red\" : \"black\";\n *         return (\n *           <TouchableOpacity onPress={this._onPress}>\n *             <View>\n *               <Text style={{ color: textColor }}>\n *                 {this.props.title}\n *               </Text>\n *             </View>\n *           </TouchableOpacity>\n *         );\n *       }\n *     }\n *\n *     class MultiSelectList extends React.PureComponent {\n *       state = {selected: (new Map(): Map<string, boolean>)};\n *\n *       _keyExtractor = (item, index) => item.id;\n *\n *       _onPressItem = (id: string) => {\n *         // updater functions are preferred for transactional updates\n *         this.setState((state) => {\n *           // copy the map rather than modifying state.\n *           const selected = new Map(state.selected);\n *           selected.set(id, !selected.get(id)); // toggle\n *           return {selected};\n *         });\n *       };\n *\n *       _renderItem = ({item}) => (\n *         <MyListItem\n *           id={item.id}\n *           onPressItem={this._onPressItem}\n *           selected={!!this.state.selected.get(item.id)}\n *           title={item.title}\n *         />\n *       );\n *\n *       render() {\n *         return (\n *           <FlatList\n *             data={this.props.data}\n *             extraData={this.state}\n *             keyExtractor={this._keyExtractor}\n *             renderItem={this._renderItem}\n *           />\n *         );\n *       }\n *     }\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist.html),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n * Also inherits [ScrollView Props](docs/scrollview.html#props), unless it is nested in another FlatList of same orientation.\n */\nvar FlatList =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(FlatList, _React$PureComponent);\n\n  var _proto = FlatList.prototype;\n\n  /**\n   * Scrolls to the end of the content. May be janky without `getItemLayout` prop.\n   */\n  _proto.scrollToEnd = function scrollToEnd(params) {\n    if (this._listRef) {\n      this._listRef.scrollToEnd(params);\n    }\n  }\n  /**\n   * Scrolls to the item at the specified index such that it is positioned in the viewable area\n   * such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the\n   * middle. `viewOffset` is a fixed number of pixels to offset the final target position.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  ;\n\n  _proto.scrollToIndex = function scrollToIndex(params) {\n    if (this._listRef) {\n      this._listRef.scrollToIndex(params);\n    }\n  }\n  /**\n   * Requires linear scan through data - use `scrollToIndex` instead if possible.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  ;\n\n  _proto.scrollToItem = function scrollToItem(params) {\n    if (this._listRef) {\n      this._listRef.scrollToItem(params);\n    }\n  }\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Check out [scrollToOffset](docs/virtualizedlist.html#scrolltooffset) of VirtualizedList\n   */\n  ;\n\n  _proto.scrollToOffset = function scrollToOffset(params) {\n    if (this._listRef) {\n      this._listRef.scrollToOffset(params);\n    }\n  }\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  ;\n\n  _proto.recordInteraction = function recordInteraction() {\n    if (this._listRef) {\n      this._listRef.recordInteraction();\n    }\n  }\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  ;\n\n  _proto.flashScrollIndicators = function flashScrollIndicators() {\n    if (this._listRef) {\n      this._listRef.flashScrollIndicators();\n    }\n  }\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  ;\n\n  _proto.getScrollResponder = function getScrollResponder() {\n    if (this._listRef) {\n      return this._listRef.getScrollResponder();\n    }\n  };\n\n  _proto.getScrollableNode = function getScrollableNode() {\n    if (this._listRef) {\n      return this._listRef.getScrollableNode();\n    }\n  };\n\n  _proto.setNativeProps = function setNativeProps(props) {\n    if (this._listRef) {\n      this._listRef.setNativeProps(props);\n    }\n  };\n\n  _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n    this._checkProps(this.props);\n  };\n\n  _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n    invariant(nextProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');\n    invariant(nextProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');\n    invariant(nextProps.viewabilityConfig === this.props.viewabilityConfig, 'Changing viewabilityConfig on the fly is not supported');\n    invariant(nextProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');\n\n    this._checkProps(nextProps);\n  };\n\n  function FlatList(props) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, props) || this;\n    _this._hasWarnedLegacy = false;\n    _this._virtualizedListPairs = [];\n\n    _this._captureRef = function (ref) {\n      _this._listRef = ref;\n    };\n\n    _this._getItem = function (data, index) {\n      var numColumns = _this.props.numColumns;\n\n      if (numColumns > 1) {\n        var ret = [];\n\n        for (var kk = 0; kk < numColumns; kk++) {\n          var _item = data[index * numColumns + kk];\n          _item && ret.push(_item);\n        }\n\n        return ret;\n      } else {\n        return data[index];\n      }\n    };\n\n    _this._getItemCount = function (data) {\n      return data ? Math.ceil(data.length / _this.props.numColumns) : 0;\n    };\n\n    _this._keyExtractor = function (items, index) {\n      var _this$props = _this.props,\n          keyExtractor = _this$props.keyExtractor,\n          numColumns = _this$props.numColumns;\n\n      if (numColumns > 1) {\n        invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);\n        return items.map(function (it, kk) {\n          return keyExtractor(it, index * numColumns + kk);\n        }).join(':');\n      } else {\n        /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n         * error found when Flow v0.63 was deployed. To see the error delete this\n         * comment and run Flow. */\n        return keyExtractor(items, index);\n      }\n    };\n\n    _this._renderItem = function (info) {\n      var _this$props2 = _this.props,\n          renderItem = _this$props2.renderItem,\n          numColumns = _this$props2.numColumns,\n          columnWrapperStyle = _this$props2.columnWrapperStyle;\n\n      if (numColumns > 1) {\n        var _item2 = info.item,\n            _index = info.index;\n        invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');\n        return React.createElement(View, {\n          style: [{\n            flexDirection: 'row'\n          }, columnWrapperStyle]\n        }, _item2.map(function (it, kk) {\n          var element = renderItem({\n            item: it,\n            index: _index * numColumns + kk,\n            separators: info.separators\n          });\n          return element && React.cloneElement(element, {\n            key: kk\n          });\n        }));\n      } else {\n        return renderItem(info);\n      }\n    };\n\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._virtualizedListPairs = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityConfig: pair.viewabilityConfig,\n          onViewableItemsChanged: _this._createOnViewableItemsChanged(pair.onViewableItemsChanged)\n        };\n      });\n    } else if (_this.props.onViewableItemsChanged) {\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n      _this._virtualizedListPairs.push({\n        viewabilityConfig: _this.props.viewabilityConfig,\n        onViewableItemsChanged: _this._createOnViewableItemsChanged(_this.props.onViewableItemsChanged)\n      });\n    }\n\n    return _this;\n  }\n\n  _proto._checkProps = function _checkProps(props) {\n    var getItem = props.getItem,\n        getItemCount = props.getItemCount,\n        horizontal = props.horizontal,\n        legacyImplementation = props.legacyImplementation,\n        numColumns = props.numColumns,\n        columnWrapperStyle = props.columnWrapperStyle,\n        onViewableItemsChanged = props.onViewableItemsChanged,\n        viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;\n    invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');\n\n    if (numColumns > 1) {\n      invariant(!horizontal, 'numColumns does not support horizontal.');\n    } else {\n      invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');\n    }\n\n    if (legacyImplementation) {\n      invariant(numColumns === 1, 'Legacy list does not support multiple columns.'); // Warning: may not have full feature parity and is meant more for debugging and performance\n      // comparison.\n\n      if (!this._hasWarnedLegacy) {\n        console.warn('FlatList: Using legacyImplementation - some features not supported and performance ' + 'may suffer');\n        this._hasWarnedLegacy = true;\n      }\n    }\n\n    invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), 'FlatList does not support setting both onViewableItemsChanged and ' + 'viewabilityConfigCallbackPairs.');\n  };\n\n  _proto._pushMultiColumnViewable = function _pushMultiColumnViewable(arr, v) {\n    var _this$props3 = this.props,\n        numColumns = _this$props3.numColumns,\n        keyExtractor = _this$props3.keyExtractor;\n    v.item.forEach(function (item, ii) {\n      invariant(v.index != null, 'Missing index!');\n      var index = v.index * numColumns + ii;\n      arr.push(_objectSpread({}, v, {\n        item: item,\n        key: keyExtractor(item, index),\n        index: index\n      }));\n    });\n  };\n\n  _proto._createOnViewableItemsChanged = function _createOnViewableItemsChanged(onViewableItemsChanged) {\n    var _this2 = this;\n\n    return function (info) {\n      var numColumns = _this2.props.numColumns;\n\n      if (onViewableItemsChanged) {\n        if (numColumns > 1) {\n          var changed = [];\n          var viewableItems = [];\n          info.viewableItems.forEach(function (v) {\n            return _this2._pushMultiColumnViewable(viewableItems, v);\n          });\n          info.changed.forEach(function (v) {\n            return _this2._pushMultiColumnViewable(changed, v);\n          });\n          onViewableItemsChanged({\n            viewableItems: viewableItems,\n            changed: changed\n          });\n        } else {\n          onViewableItemsChanged(info);\n        }\n      }\n    };\n  };\n\n  _proto.render = function render() {\n    if (this.props.legacyImplementation) {\n      return (\n        /* $FlowFixMe(>=0.66.0 site=react_native_fb) This comment suppresses an\n         * error found when Flow v0.66 was deployed. To see the error delete\n         * this comment and run Flow. */\n        React.createElement(UnimplementedView, _extends({}, this.props, {\n          /* $FlowFixMe(>=0.66.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.66 was deployed. To see the error\n           * delete this comment and run Flow. */\n          items: this.props.data,\n          ref: this._captureRef\n        }))\n      );\n    } else {\n      return React.createElement(VirtualizedList, _extends({}, this.props, {\n        renderItem: this._renderItem,\n        getItem: this._getItem,\n        getItemCount: this._getItemCount,\n        keyExtractor: this._keyExtractor,\n        ref: this._captureRef,\n        viewabilityConfigCallbackPairs: this._virtualizedListPairs\n      }));\n    }\n  };\n\n  return FlatList;\n}(React.PureComponent);\n\nFlatList.defaultProps = defaultProps;\nexport default FlatList;","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport FlatList from '../../vendor/react-native/FlatList';\nexport default FlatList;","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport debounce from 'debounce';\nimport invariant from 'fbjs/lib/invariant';\nvar win = canUseDOM ? window : {\n  devicePixelRatio: undefined,\n  innerHeight: undefined,\n  innerWidth: undefined,\n  screen: {\n    height: undefined,\n    width: undefined\n  }\n};\nvar dimensions = {};\nvar listeners = {};\n\nvar Dimensions =\n/*#__PURE__*/\nfunction () {\n  function Dimensions() {}\n\n  Dimensions.get = function get(dimension) {\n    invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  };\n\n  Dimensions.set = function set(initialDimensions) {\n    if (initialDimensions) {\n      if (canUseDOM) {\n        invariant(false, 'Dimensions cannot be set in the browser');\n      } else {\n        dimensions.screen = initialDimensions.screen;\n        dimensions.window = initialDimensions.window;\n      }\n    }\n  };\n\n  Dimensions._update = function _update() {\n    dimensions.window = {\n      fontScale: 1,\n      height: win.innerHeight,\n      scale: win.devicePixelRatio || 1,\n      width: win.innerWidth\n    };\n    dimensions.screen = {\n      fontScale: 1,\n      height: win.screen.height,\n      scale: win.devicePixelRatio || 1,\n      width: win.screen.width\n    };\n\n    if (Array.isArray(listeners['change'])) {\n      listeners['change'].forEach(function (handler) {\n        return handler(dimensions);\n      });\n    }\n  };\n\n  Dimensions.addEventListener = function addEventListener(type, handler) {\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n  };\n\n  Dimensions.removeEventListener = function removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(function (_handler) {\n        return _handler !== handler;\n      });\n    }\n  };\n\n  return Dimensions;\n}();\n\nexport { Dimensions as default };\n\nDimensions._update();\n\nif (canUseDOM) {\n  window.addEventListener('resize', debounce(Dimensions._update, 16), false);\n}","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport UIManager from '../../exports/UIManager';\n/**\n * This class is responsible for coordinating the \"focused\"\n * state for TextInputs. All calls relating to the keyboard\n * should be funneled through here\n */\n\nvar TextInputState = {\n  /**\n   * Internal state\n   */\n  _currentlyFocusedNode: null,\n\n  /**\n   * Returns the ID of the currently focused text field, if one exists\n   * If no text field is focused it returns null\n   */\n  currentlyFocusedField: function currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n\n    return this._currentlyFocusedNode;\n  },\n\n  /**\n   * @param {Object} TextInputID id of the text field to focus\n   * Focuses the specified text field\n   * noop if the text field was already focused\n   */\n  focusTextInput: function focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n\n      if (document.activeElement !== textFieldNode) {\n        UIManager.focus(textFieldNode);\n      }\n    }\n  },\n\n  /**\n   * @param {Object} textFieldNode id of the text field to focus\n   * Unfocuses the specified text field\n   * noop if it wasn't focused\n   */\n  blurTextInput: function blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n\n      if (document.activeElement === textFieldNode) {\n        UIManager.blur(textFieldNode);\n      }\n    }\n  }\n};\nexport default TextInputState;","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport TextInputState from '../TextInputState';\n\nvar dismissKeyboard = function dismissKeyboard() {\n  TextInputState.blurTextInput(TextInputState.currentlyFocusedField());\n};\n\nexport default dismissKeyboard;","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar Platform = {\n  OS: 'web',\n  select: function select(obj) {\n    return 'web' in obj ? obj.web : obj.default;\n  }\n};\nexport default Platform;","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport Dimensions from '../../exports/Dimensions';\nimport findNodeHandle from '../../exports/findNodeHandle';\nimport invariant from 'fbjs/lib/invariant';\nimport Platform from '../../exports/Platform';\nimport TextInputState from '../TextInputState';\nimport UIManager from '../../exports/UIManager';\nimport warning from 'fbjs/lib/warning';\n/**\n * Mixin that can be integrated in order to handle scrolling that plays well\n * with `ResponderEventPlugin`. Integrate with your platform specific scroll\n * views, or even your custom built (every-frame animating) scroll views so that\n * all of these systems play well with the `ResponderEventPlugin`.\n *\n * iOS scroll event timing nuances:\n * ===============================\n *\n *\n * Scrolling without bouncing, if you touch down:\n * -------------------------------\n *\n * 1. `onMomentumScrollBegin` (when animation begins after letting up)\n *    ... physical touch starts ...\n * 2. `onTouchStartCapture`   (when you press down to stop the scroll)\n * 3. `onTouchStart`          (same, but bubble phase)\n * 4. `onResponderRelease`    (when lifting up - you could pause forever before * lifting)\n * 5. `onMomentumScrollEnd`\n *\n *\n * Scrolling with bouncing, if you touch down:\n * -------------------------------\n *\n * 1. `onMomentumScrollBegin` (when animation begins after letting up)\n *    ... bounce begins ...\n *    ... some time elapses ...\n *    ... physical touch during bounce ...\n * 2. `onMomentumScrollEnd`   (Makes no sense why this occurs first during bounce)\n * 3. `onTouchStartCapture`   (immediately after `onMomentumScrollEnd`)\n * 4. `onTouchStart`          (same, but bubble phase)\n * 5. `onTouchEnd`            (You could hold the touch start for a long time)\n * 6. `onMomentumScrollBegin` (When releasing the view starts bouncing back)\n *\n * So when we receive an `onTouchStart`, how can we tell if we are touching\n * *during* an animation (which then causes the animation to stop)? The only way\n * to tell is if the `touchStart` occurred immediately after the\n * `onMomentumScrollEnd`.\n *\n * This is abstracted out for you, so you can just call this.scrollResponderIsAnimating() if\n * necessary\n *\n * `ScrollResponder` also includes logic for blurring a currently focused input\n * if one is focused while scrolling. The `ScrollResponder` is a natural place\n * to put this logic since it can support not dismissing the keyboard while\n * scrolling, unless a recognized \"tap\"-like gesture has occurred.\n *\n * The public lifecycle API includes events for keyboard interaction, responder\n * interaction, and scrolling (among others). The keyboard callbacks\n * `onKeyboardWill/Did/*` are *global* events, but are invoked on scroll\n * responder's props so that you can guarantee that the scroll responder's\n * internal state has been updated accordingly (and deterministically) by\n * the time the props callbacks are invoke. Otherwise, you would always wonder\n * if the scroll responder is currently in a state where it recognizes new\n * keyboard positions etc. If coordinating scrolling with keyboard movement,\n * *always* use these hooks instead of listening to your own global keyboard\n * events.\n *\n * Public keyboard lifecycle API: (props callbacks)\n *\n * Standard Keyboard Appearance Sequence:\n *\n *   this.props.onKeyboardWillShow\n *   this.props.onKeyboardDidShow\n *\n * `onScrollResponderKeyboardDismissed` will be invoked if an appropriate\n * tap inside the scroll responder's scrollable region was responsible\n * for the dismissal of the keyboard. There are other reasons why the\n * keyboard could be dismissed.\n *\n *   this.props.onScrollResponderKeyboardDismissed\n *\n * Standard Keyboard Hide Sequence:\n *\n *   this.props.onKeyboardWillHide\n *   this.props.onKeyboardDidHide\n */\n\nvar emptyObject = {};\nvar IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;\nvar ScrollResponderMixin = {\n  // mixins: [Subscribable.Mixin],\n  scrollResponderMixinGetInitialState: function scrollResponderMixinGetInitialState() {\n    return {\n      isTouching: false,\n      lastMomentumScrollBeginTime: 0,\n      lastMomentumScrollEndTime: 0,\n      // Reset to false every time becomes responder. This is used to:\n      // - Determine if the scroll view has been scrolled and therefore should\n      // refuse to give up its responder lock.\n      // - Determine if releasing should dismiss the keyboard when we are in\n      // tap-to-dismiss mode (!this.props.keyboardShouldPersistTaps).\n      observedScrollSinceBecomingResponder: false,\n      becameResponderWhileAnimating: false\n    };\n  },\n\n  /**\n   * Invoke this from an `onScroll` event.\n   */\n  scrollResponderHandleScrollShouldSetResponder: function scrollResponderHandleScrollShouldSetResponder() {\n    return this.state.isTouching;\n  },\n\n  /**\n   * Merely touch starting is not sufficient for a scroll view to become the\n   * responder. Being the \"responder\" means that the very next touch move/end\n   * event will result in an action/movement.\n   *\n   * Invoke this from an `onStartShouldSetResponder` event.\n   *\n   * `onStartShouldSetResponder` is used when the next move/end will trigger\n   * some UI movement/action, but when you want to yield priority to views\n   * nested inside of the view.\n   *\n   * There may be some cases where scroll views actually should return `true`\n   * from `onStartShouldSetResponder`: Any time we are detecting a standard tap\n   * that gives priority to nested views.\n   *\n   * - If a single tap on the scroll view triggers an action such as\n   *   recentering a map style view yet wants to give priority to interaction\n   *   views inside (such as dropped pins or labels), then we would return true\n   *   from this method when there is a single touch.\n   *\n   * - Similar to the previous case, if a two finger \"tap\" should trigger a\n   *   zoom, we would check the `touches` count, and if `>= 2`, we would return\n   *   true.\n   *\n   */\n  scrollResponderHandleStartShouldSetResponder: function scrollResponderHandleStartShouldSetResponder() {\n    return false;\n  },\n\n  /**\n   * There are times when the scroll view wants to become the responder\n   * (meaning respond to the next immediate `touchStart/touchEnd`), in a way\n   * that *doesn't* give priority to nested views (hence the capture phase):\n   *\n   * - Currently animating.\n   * - Tapping anywhere that is not the focused input, while the keyboard is\n   *   up (which should dismiss the keyboard).\n   *\n   * Invoke this from an `onStartShouldSetResponderCapture` event.\n   */\n  scrollResponderHandleStartShouldSetResponderCapture: function scrollResponderHandleStartShouldSetResponderCapture(e) {\n    // First see if we want to eat taps while the keyboard is up\n    // var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\n    // if (!this.props.keyboardShouldPersistTaps &&\n    //   currentlyFocusedTextInput != null &&\n    //   e.target !== currentlyFocusedTextInput) {\n    //   return true;\n    // }\n    return this.scrollResponderIsAnimating();\n  },\n\n  /**\n   * Invoke this from an `onResponderReject` event.\n   *\n   * Some other element is not yielding its role as responder. Normally, we'd\n   * just disable the `UIScrollView`, but a touch has already began on it, the\n   * `UIScrollView` will not accept being disabled after that. The easiest\n   * solution for now is to accept the limitation of disallowing this\n   * altogether. To improve this, find a way to disable the `UIScrollView` after\n   * a touch has already started.\n   */\n  scrollResponderHandleResponderReject: function scrollResponderHandleResponderReject() {\n    warning(false, \"ScrollView doesn't take rejection well - scrolls anyway\");\n  },\n\n  /**\n   * We will allow the scroll view to give up its lock iff it acquired the lock\n   * during an animation. This is a very useful default that happens to satisfy\n   * many common user experiences.\n   *\n   * - Stop a scroll on the left edge, then turn that into an outer view's\n   *   backswipe.\n   * - Stop a scroll mid-bounce at the top, continue pulling to have the outer\n   *   view dismiss.\n   * - However, without catching the scroll view mid-bounce (while it is\n   *   motionless), if you drag far enough for the scroll view to become\n   *   responder (and therefore drag the scroll view a bit), any backswipe\n   *   navigation of a swipe gesture higher in the view hierarchy, should be\n   *   rejected.\n   */\n  scrollResponderHandleTerminationRequest: function scrollResponderHandleTerminationRequest() {\n    return !this.state.observedScrollSinceBecomingResponder;\n  },\n\n  /**\n   * Invoke this from an `onTouchEnd` event.\n   *\n   * @param {SyntheticEvent} e Event.\n   */\n  scrollResponderHandleTouchEnd: function scrollResponderHandleTouchEnd(e) {\n    var nativeEvent = e.nativeEvent;\n    this.state.isTouching = nativeEvent.touches.length !== 0;\n    this.props.onTouchEnd && this.props.onTouchEnd(e);\n  },\n\n  /**\n   * Invoke this from an `onResponderRelease` event.\n   */\n  scrollResponderHandleResponderRelease: function scrollResponderHandleResponderRelease(e) {\n    this.props.onResponderRelease && this.props.onResponderRelease(e); // By default scroll views will unfocus a textField\n    // if another touch occurs outside of it\n\n    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\n\n    if (!this.props.keyboardShouldPersistTaps && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !this.state.observedScrollSinceBecomingResponder && !this.state.becameResponderWhileAnimating) {\n      this.props.onScrollResponderKeyboardDismissed && this.props.onScrollResponderKeyboardDismissed(e);\n      TextInputState.blurTextInput(currentlyFocusedTextInput);\n    }\n  },\n  scrollResponderHandleScroll: function scrollResponderHandleScroll(e) {\n    this.state.observedScrollSinceBecomingResponder = true;\n    this.props.onScroll && this.props.onScroll(e);\n  },\n\n  /**\n   * Invoke this from an `onResponderGrant` event.\n   */\n  scrollResponderHandleResponderGrant: function scrollResponderHandleResponderGrant(e) {\n    this.state.observedScrollSinceBecomingResponder = false;\n    this.props.onResponderGrant && this.props.onResponderGrant(e);\n    this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();\n  },\n\n  /**\n   * Unfortunately, `onScrollBeginDrag` also fires when *stopping* the scroll\n   * animation, and there's not an easy way to distinguish a drag vs. stopping\n   * momentum.\n   *\n   * Invoke this from an `onScrollBeginDrag` event.\n   */\n  scrollResponderHandleScrollBeginDrag: function scrollResponderHandleScrollBeginDrag(e) {\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  },\n\n  /**\n   * Invoke this from an `onScrollEndDrag` event.\n   */\n  scrollResponderHandleScrollEndDrag: function scrollResponderHandleScrollEndDrag(e) {\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  },\n\n  /**\n   * Invoke this from an `onMomentumScrollBegin` event.\n   */\n  scrollResponderHandleMomentumScrollBegin: function scrollResponderHandleMomentumScrollBegin(e) {\n    this.state.lastMomentumScrollBeginTime = Date.now();\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  },\n\n  /**\n   * Invoke this from an `onMomentumScrollEnd` event.\n   */\n  scrollResponderHandleMomentumScrollEnd: function scrollResponderHandleMomentumScrollEnd(e) {\n    this.state.lastMomentumScrollEndTime = Date.now();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  },\n\n  /**\n   * Invoke this from an `onTouchStart` event.\n   *\n   * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n   * order, after `ResponderEventPlugin`, we can detect that we were *not*\n   * permitted to be the responder (presumably because a contained view became\n   * responder). The `onResponderReject` won't fire in that case - it only\n   * fires when a *current* responder rejects our request.\n   *\n   * @param {SyntheticEvent} e Touch Start event.\n   */\n  scrollResponderHandleTouchStart: function scrollResponderHandleTouchStart(e) {\n    this.state.isTouching = true;\n    this.props.onTouchStart && this.props.onTouchStart(e);\n  },\n\n  /**\n   * Invoke this from an `onTouchMove` event.\n   *\n   * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n   * order, after `ResponderEventPlugin`, we can detect that we were *not*\n   * permitted to be the responder (presumably because a contained view became\n   * responder). The `onResponderReject` won't fire in that case - it only\n   * fires when a *current* responder rejects our request.\n   *\n   * @param {SyntheticEvent} e Touch Start event.\n   */\n  scrollResponderHandleTouchMove: function scrollResponderHandleTouchMove(e) {\n    this.props.onTouchMove && this.props.onTouchMove(e);\n  },\n\n  /**\n   * A helper function for this class that lets us quickly determine if the\n   * view is currently animating. This is particularly useful to know when\n   * a touch has just started or ended.\n   */\n  scrollResponderIsAnimating: function scrollResponderIsAnimating() {\n    var now = Date.now();\n    var timeSinceLastMomentumScrollEnd = now - this.state.lastMomentumScrollEndTime;\n    var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;\n    return isAnimating;\n  },\n\n  /**\n   * Returns the node that represents native view that can be scrolled.\n   * Components can pass what node to use by defining a `getScrollableNode`\n   * function otherwise `this` is used.\n   */\n  scrollResponderGetScrollableNode: function scrollResponderGetScrollableNode() {\n    return this.getScrollableNode ? this.getScrollableNode() : findNodeHandle(this);\n  },\n\n  /**\n   * A helper function to scroll to a specific point in the scrollview.\n   * This is currently used to help focus on child textviews, but can also\n   * be used to quickly scroll to any element we want to focus. Syntax:\n   *\n   * scrollResponderScrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\n   *\n   * Note: The weird argument signature is due to the fact that, for historical reasons,\n   * the function also accepts separate arguments as as alternative to the options object.\n   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n   */\n  scrollResponderScrollTo: function scrollResponderScrollTo(x, y, animated) {\n    if (typeof x === 'number') {\n      console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');\n    } else {\n      var _ref = x || emptyObject;\n\n      x = _ref.x;\n      y = _ref.y;\n      animated = _ref.animated;\n    }\n\n    var node = this.scrollResponderGetScrollableNode();\n    var left = x || 0;\n    var top = y || 0;\n\n    if (typeof node.scroll === 'function') {\n      node.scroll({\n        top: top,\n        left: left,\n        behavior: !animated ? 'auto' : 'smooth'\n      });\n    } else {\n      node.scrollLeft = left;\n      node.scrollTop = top;\n    }\n  },\n\n  /**\n   * Deprecated, do not use.\n   */\n  scrollResponderScrollWithoutAnimationTo: function scrollResponderScrollWithoutAnimationTo(offsetX, offsetY) {\n    console.warn('`scrollResponderScrollWithoutAnimationTo` is deprecated. Use `scrollResponderScrollTo` instead');\n    this.scrollResponderScrollTo({\n      x: offsetX,\n      y: offsetY,\n      animated: false\n    });\n  },\n\n  /**\n   * A helper function to zoom to a specific rect in the scrollview. The argument has the shape\n   * {x: number; y: number; width: number; height: number; animated: boolean = true}\n   *\n   * @platform ios\n   */\n  scrollResponderZoomTo: function scrollResponderZoomTo(rect, animated // deprecated, put this inside the rect argument instead\n  ) {\n    if (Platform.OS !== 'ios') {\n      invariant('zoomToRect is not implemented');\n    }\n  },\n\n  /**\n   * Displays the scroll indicators momentarily.\n   */\n  scrollResponderFlashScrollIndicators: function scrollResponderFlashScrollIndicators() {},\n\n  /**\n   * This method should be used as the callback to onFocus in a TextInputs'\n   * parent view. Note that any module using this mixin needs to return\n   * the parent view's ref in getScrollViewRef() in order to use this method.\n   * @param {any} nodeHandle The TextInput node handle\n   * @param {number} additionalOffset The scroll view's top \"contentInset\".\n   *        Default is 0.\n   * @param {bool} preventNegativeScrolling Whether to allow pulling the content\n   *        down to make it meet the keyboard's top. Default is false.\n   */\n  scrollResponderScrollNativeHandleToKeyboard: function scrollResponderScrollNativeHandleToKeyboard(nodeHandle, additionalOffset, preventNegativeScrollOffset) {\n    this.additionalScrollOffset = additionalOffset || 0;\n    this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;\n    UIManager.measureLayout(nodeHandle, findNodeHandle(this.getInnerViewNode()), this.scrollResponderTextInputFocusError, this.scrollResponderInputMeasureAndScrollToKeyboard);\n  },\n\n  /**\n   * The calculations performed here assume the scroll view takes up the entire\n   * screen - even if has some content inset. We then measure the offsets of the\n   * keyboard, and compensate both for the scroll view's \"contentInset\".\n   *\n   * @param {number} left Position of input w.r.t. table view.\n   * @param {number} top Position of input w.r.t. table view.\n   * @param {number} width Width of the text input.\n   * @param {number} height Height of the text input.\n   */\n  scrollResponderInputMeasureAndScrollToKeyboard: function scrollResponderInputMeasureAndScrollToKeyboard(left, top, width, height) {\n    var keyboardScreenY = Dimensions.get('window').height;\n\n    if (this.keyboardWillOpenTo) {\n      keyboardScreenY = this.keyboardWillOpenTo.endCoordinates.screenY;\n    }\n\n    var scrollOffsetY = top - keyboardScreenY + height + this.additionalScrollOffset; // By default, this can scroll with negative offset, pulling the content\n    // down so that the target component's bottom meets the keyboard's top.\n    // If requested otherwise, cap the offset at 0 minimum to avoid content\n    // shifting down.\n\n    if (this.preventNegativeScrollOffset) {\n      scrollOffsetY = Math.max(0, scrollOffsetY);\n    }\n\n    this.scrollResponderScrollTo({\n      x: 0,\n      y: scrollOffsetY,\n      animated: true\n    });\n    this.additionalOffset = 0;\n    this.preventNegativeScrollOffset = false;\n  },\n  scrollResponderTextInputFocusError: function scrollResponderTextInputFocusError(e) {\n    console.error('Error measuring text field: ', e);\n  },\n\n  /**\n   * `componentWillMount` is the closest thing to a  standard \"constructor\" for\n   * React components.\n   *\n   * The `keyboardWillShow` is called before input focus.\n   */\n  componentWillMount: function componentWillMount() {\n    this.keyboardWillOpenTo = null;\n    this.additionalScrollOffset = 0; // this.addListenerOn(RCTDeviceEventEmitter, 'keyboardWillShow', this.scrollResponderKeyboardWillShow);\n    // this.addListenerOn(RCTDeviceEventEmitter, 'keyboardWillHide', this.scrollResponderKeyboardWillHide);\n    // this.addListenerOn(RCTDeviceEventEmitter, 'keyboardDidShow', this.scrollResponderKeyboardDidShow);\n    // this.addListenerOn(RCTDeviceEventEmitter, 'keyboardDidHide', this.scrollResponderKeyboardDidHide);\n  },\n\n  /**\n   * Warning, this may be called several times for a single keyboard opening.\n   * It's best to store the information in this method and then take any action\n   * at a later point (either in `keyboardDidShow` or other).\n   *\n   * Here's the order that events occur in:\n   * - focus\n   * - willShow {startCoordinates, endCoordinates} several times\n   * - didShow several times\n   * - blur\n   * - willHide {startCoordinates, endCoordinates} several times\n   * - didHide several times\n   *\n   * The `ScrollResponder` providesModule callbacks for each of these events.\n   * Even though any user could have easily listened to keyboard events\n   * themselves, using these `props` callbacks ensures that ordering of events\n   * is consistent - and not dependent on the order that the keyboard events are\n   * subscribed to. This matters when telling the scroll view to scroll to where\n   * the keyboard is headed - the scroll responder better have been notified of\n   * the keyboard destination before being instructed to scroll to where the\n   * keyboard will be. Stick to the `ScrollResponder` callbacks, and everything\n   * will work.\n   *\n   * WARNING: These callbacks will fire even if a keyboard is displayed in a\n   * different navigation pane. Filter out the events to determine if they are\n   * relevant to you. (For example, only if you receive these callbacks after\n   * you had explicitly focused a node etc).\n   */\n  scrollResponderKeyboardWillShow: function scrollResponderKeyboardWillShow(e) {\n    this.keyboardWillOpenTo = e;\n    this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);\n  },\n  scrollResponderKeyboardWillHide: function scrollResponderKeyboardWillHide(e) {\n    this.keyboardWillOpenTo = null;\n    this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);\n  },\n  scrollResponderKeyboardDidShow: function scrollResponderKeyboardDidShow(e) {\n    // TODO(7693961): The event for DidShow is not available on iOS yet.\n    // Use the one from WillShow and do not assign.\n    if (e) {\n      this.keyboardWillOpenTo = e;\n    }\n\n    this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);\n  },\n  scrollResponderKeyboardDidHide: function scrollResponderKeyboardDidHide(e) {\n    this.keyboardWillOpenTo = null;\n    this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);\n  }\n};\nvar ScrollResponder = {\n  Mixin: ScrollResponderMixin\n};\nexport default ScrollResponder;","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport debounce from 'debounce';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nimport ViewPropTypes from '../ViewPropTypes';\nimport React, { Component } from 'react';\nimport { bool, func, number } from 'prop-types';\n\nvar normalizeScrollEvent = function normalizeScrollEvent(e) {\n  return {\n    nativeEvent: {\n      contentOffset: {\n        get x() {\n          return e.target.scrollLeft;\n        },\n\n        get y() {\n          return e.target.scrollTop;\n        }\n\n      },\n      contentSize: {\n        get height() {\n          return e.target.scrollHeight;\n        },\n\n        get width() {\n          return e.target.scrollWidth;\n        }\n\n      },\n      layoutMeasurement: {\n        get height() {\n          return e.target.offsetHeight;\n        },\n\n        get width() {\n          return e.target.offsetWidth;\n        }\n\n      }\n    },\n    timeStamp: Date.now()\n  };\n};\n/**\n * Encapsulates the Web-specific scroll throttling and disabling logic\n */\n\n\nvar ScrollViewBase =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ScrollViewBase, _Component);\n\n  function ScrollViewBase() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this._debouncedOnScrollEnd = debounce(_this._handleScrollEnd, 100);\n    _this._state = {\n      isScrolling: false,\n      scrollLastTick: 0\n    };\n\n    _this._createPreventableScrollHandler = function (handler) {\n      return function (e) {\n        if (_this.props.scrollEnabled) {\n          if (handler) {\n            handler(e);\n          }\n        } else {\n          // To disable scrolling in all browsers except Chrome\n          e.preventDefault();\n        }\n      };\n    };\n\n    _this._handleScroll = function (e) {\n      e.persist();\n      e.stopPropagation();\n      var scrollEventThrottle = _this.props.scrollEventThrottle; // A scroll happened, so the scroll bumps the debounce.\n\n      _this._debouncedOnScrollEnd(e);\n\n      if (_this._state.isScrolling) {\n        // Scroll last tick may have changed, check if we need to notify\n        if (_this._shouldEmitScrollEvent(_this._state.scrollLastTick, scrollEventThrottle)) {\n          _this._handleScrollTick(e);\n        }\n      } else {\n        // Weren't scrolling, so we must have just started\n        _this._handleScrollStart(e);\n      }\n    };\n\n    _this._setViewRef = function (element) {\n      _this._viewRef = element;\n    };\n\n    return _this;\n  }\n\n  var _proto = ScrollViewBase.prototype;\n\n  _proto.setNativeProps = function setNativeProps(props) {\n    if (this._viewRef) {\n      this._viewRef.setNativeProps(props);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        scrollEnabled = _this$props.scrollEnabled,\n        style = _this$props.style,\n        alwaysBounceHorizontal = _this$props.alwaysBounceHorizontal,\n        alwaysBounceVertical = _this$props.alwaysBounceVertical,\n        automaticallyAdjustContentInsets = _this$props.automaticallyAdjustContentInsets,\n        bounces = _this$props.bounces,\n        bouncesZoom = _this$props.bouncesZoom,\n        canCancelContentTouches = _this$props.canCancelContentTouches,\n        centerContent = _this$props.centerContent,\n        contentInset = _this$props.contentInset,\n        contentInsetAdjustmentBehavior = _this$props.contentInsetAdjustmentBehavior,\n        contentOffset = _this$props.contentOffset,\n        decelerationRate = _this$props.decelerationRate,\n        directionalLockEnabled = _this$props.directionalLockEnabled,\n        endFillColor = _this$props.endFillColor,\n        indicatorStyle = _this$props.indicatorStyle,\n        keyboardShouldPersistTaps = _this$props.keyboardShouldPersistTaps,\n        maximumZoomScale = _this$props.maximumZoomScale,\n        minimumZoomScale = _this$props.minimumZoomScale,\n        onMomentumScrollBegin = _this$props.onMomentumScrollBegin,\n        onMomentumScrollEnd = _this$props.onMomentumScrollEnd,\n        onScrollBeginDrag = _this$props.onScrollBeginDrag,\n        onScrollEndDrag = _this$props.onScrollEndDrag,\n        overScrollMode = _this$props.overScrollMode,\n        pinchGestureEnabled = _this$props.pinchGestureEnabled,\n        removeClippedSubviews = _this$props.removeClippedSubviews,\n        scrollEventThrottle = _this$props.scrollEventThrottle,\n        scrollIndicatorInsets = _this$props.scrollIndicatorInsets,\n        scrollPerfTag = _this$props.scrollPerfTag,\n        scrollsToTop = _this$props.scrollsToTop,\n        showsHorizontalScrollIndicator = _this$props.showsHorizontalScrollIndicator,\n        showsVerticalScrollIndicator = _this$props.showsVerticalScrollIndicator,\n        snapToInterval = _this$props.snapToInterval,\n        snapToAlignment = _this$props.snapToAlignment,\n        zoomScale = _this$props.zoomScale,\n        other = _objectWithoutPropertiesLoose(_this$props, [\"scrollEnabled\", \"style\", \"alwaysBounceHorizontal\", \"alwaysBounceVertical\", \"automaticallyAdjustContentInsets\", \"bounces\", \"bouncesZoom\", \"canCancelContentTouches\", \"centerContent\", \"contentInset\", \"contentInsetAdjustmentBehavior\", \"contentOffset\", \"decelerationRate\", \"directionalLockEnabled\", \"endFillColor\", \"indicatorStyle\", \"keyboardShouldPersistTaps\", \"maximumZoomScale\", \"minimumZoomScale\", \"onMomentumScrollBegin\", \"onMomentumScrollEnd\", \"onScrollBeginDrag\", \"onScrollEndDrag\", \"overScrollMode\", \"pinchGestureEnabled\", \"removeClippedSubviews\", \"scrollEventThrottle\", \"scrollIndicatorInsets\", \"scrollPerfTag\", \"scrollsToTop\", \"showsHorizontalScrollIndicator\", \"showsVerticalScrollIndicator\", \"snapToInterval\", \"snapToAlignment\", \"zoomScale\"]);\n\n    return React.createElement(View, _extends({}, other, {\n      onScroll: this._handleScroll,\n      onTouchMove: this._createPreventableScrollHandler(this.props.onTouchMove),\n      onWheel: this._createPreventableScrollHandler(this.props.onWheel),\n      ref: this._setViewRef,\n      style: StyleSheet.compose(style, !scrollEnabled && styles.scrollDisabled)\n    }));\n  };\n\n  _proto._handleScrollStart = function _handleScrollStart(e) {\n    this._state.isScrolling = true;\n    this._state.scrollLastTick = Date.now();\n  };\n\n  _proto._handleScrollTick = function _handleScrollTick(e) {\n    var onScroll = this.props.onScroll;\n    this._state.scrollLastTick = Date.now();\n\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  };\n\n  _proto._handleScrollEnd = function _handleScrollEnd(e) {\n    var onScroll = this.props.onScroll;\n    this._state.isScrolling = false;\n\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  };\n\n  _proto._shouldEmitScrollEvent = function _shouldEmitScrollEvent(lastTick, eventThrottle) {\n    var timeSinceLastTick = Date.now() - lastTick;\n    return eventThrottle > 0 && timeSinceLastTick >= eventThrottle;\n  };\n\n  return ScrollViewBase;\n}(Component); // Chrome doesn't support e.preventDefault in this case; touch-action must be\n// used to disable scrolling.\n// https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\nScrollViewBase.defaultProps = {\n  scrollEnabled: true,\n  scrollEventThrottle: 0\n};\nexport { ScrollViewBase as default };\nScrollViewBase.propTypes = process.env.NODE_ENV !== \"production\" ? _objectSpread({}, ViewPropTypes, {\n  onMomentumScrollBegin: func,\n  onMomentumScrollEnd: func,\n  onScroll: func,\n  onScrollBeginDrag: func,\n  onScrollEndDrag: func,\n  onTouchMove: func,\n  onWheel: func,\n  removeClippedSubviews: bool,\n  scrollEnabled: bool,\n  scrollEventThrottle: number,\n  showsHorizontalScrollIndicator: bool,\n  showsVerticalScrollIndicator: bool\n}) : {};\nvar styles = StyleSheet.create({\n  scrollDisabled: {\n    touchAction: 'none'\n  }\n});","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport createReactClass from 'create-react-class';\nimport dismissKeyboard from '../../modules/dismissKeyboard';\nimport findNodeHandle from '../findNodeHandle';\nimport invariant from 'fbjs/lib/invariant';\nimport ScrollResponder from '../../modules/ScrollResponder';\nimport ScrollViewBase from './ScrollViewBase';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nimport ViewPropTypes from '../ViewPropTypes';\nimport React from 'react';\nimport { arrayOf, bool, element, func, number, oneOf } from 'prop-types';\nvar emptyObject = {};\n/* eslint-disable react/prefer-es6-class, react/prop-types */\n\nvar ScrollView = createReactClass({\n  displayName: \"ScrollView\",\n  propTypes: _objectSpread({}, ViewPropTypes, {\n    contentContainerStyle: ViewPropTypes.style,\n    horizontal: bool,\n    keyboardDismissMode: oneOf(['none', 'interactive', 'on-drag']),\n    onContentSizeChange: func,\n    onScroll: func,\n    pagingEnabled: bool,\n    refreshControl: element,\n    scrollEnabled: bool,\n    scrollEventThrottle: number,\n    stickyHeaderIndices: arrayOf(number),\n    style: ViewPropTypes.style\n  }),\n  mixins: [ScrollResponder.Mixin],\n  getInitialState: function getInitialState() {\n    return this.scrollResponderMixinGetInitialState();\n  },\n  flashScrollIndicators: function flashScrollIndicators() {\n    this.scrollResponderFlashScrollIndicators();\n  },\n  setNativeProps: function setNativeProps(props) {\n    if (this._scrollViewRef) {\n      this._scrollViewRef.setNativeProps(props);\n    }\n  },\n\n  /**\n   * Returns a reference to the underlying scroll responder, which supports\n   * operations like `scrollTo`. All ScrollView-like components should\n   * implement this method so that they can be composed while providing access\n   * to the underlying scroll responder's methods.\n   */\n  getScrollResponder: function getScrollResponder() {\n    return this;\n  },\n  getScrollableNode: function getScrollableNode() {\n    return findNodeHandle(this._scrollViewRef);\n  },\n  getInnerViewNode: function getInnerViewNode() {\n    return findNodeHandle(this._innerViewRef);\n  },\n\n  /**\n   * Scrolls to a given x, y offset, either immediately or with a smooth animation.\n   * Syntax:\n   *\n   * scrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\n   *\n   * Note: The weird argument signature is due to the fact that, for historical reasons,\n   * the function also accepts separate arguments as as alternative to the options object.\n   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n   */\n  scrollTo: function scrollTo(y, x, animated) {\n    if (typeof y === 'number') {\n      console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');\n    } else {\n      var _ref = y || emptyObject;\n\n      x = _ref.x;\n      y = _ref.y;\n      animated = _ref.animated;\n    }\n\n    this.getScrollResponder().scrollResponderScrollTo({\n      x: x || 0,\n      y: y || 0,\n      animated: animated !== false\n    });\n  },\n\n  /**\n   * If this is a vertical ScrollView scrolls to the bottom.\n   * If this is a horizontal ScrollView scrolls to the right.\n   *\n   * Use `scrollToEnd({ animated: true })` for smooth animated scrolling,\n   * `scrollToEnd({ animated: false })` for immediate scrolling.\n   * If no options are passed, `animated` defaults to true.\n   */\n  scrollToEnd: function scrollToEnd(options) {\n    // Default to true\n    var animated = (options && options.animated) !== false;\n    var horizontal = this.props.horizontal;\n    var scrollResponder = this.getScrollResponder();\n    var scrollResponderNode = scrollResponder.scrollResponderGetScrollableNode();\n    var x = horizontal ? scrollResponderNode.scrollWidth : 0;\n    var y = horizontal ? 0 : scrollResponderNode.scrollHeight;\n    scrollResponder.scrollResponderScrollTo({\n      x: x,\n      y: y,\n      animated: animated\n    });\n  },\n\n  /**\n   * Deprecated, do not use.\n   */\n  scrollWithoutAnimationTo: function scrollWithoutAnimationTo(y, x) {\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (x === void 0) {\n      x = 0;\n    }\n\n    console.warn('`scrollWithoutAnimationTo` is deprecated. Use `scrollTo` instead');\n    this.scrollTo({\n      x: x,\n      y: y,\n      animated: false\n    });\n  },\n  render: function render() {\n    var _this$props = this.props,\n        contentContainerStyle = _this$props.contentContainerStyle,\n        horizontal = _this$props.horizontal,\n        onContentSizeChange = _this$props.onContentSizeChange,\n        refreshControl = _this$props.refreshControl,\n        stickyHeaderIndices = _this$props.stickyHeaderIndices,\n        pagingEnabled = _this$props.pagingEnabled,\n        keyboardDismissMode = _this$props.keyboardDismissMode,\n        onScroll = _this$props.onScroll,\n        other = _objectWithoutPropertiesLoose(_this$props, [\"contentContainerStyle\", \"horizontal\", \"onContentSizeChange\", \"refreshControl\", \"stickyHeaderIndices\", \"pagingEnabled\", \"keyboardDismissMode\", \"onScroll\"]);\n\n    if (process.env.NODE_ENV !== 'production' && this.props.style) {\n      var style = StyleSheet.flatten(this.props.style);\n      var childLayoutProps = ['alignItems', 'justifyContent'].filter(function (prop) {\n        return style && style[prop] !== undefined;\n      });\n      invariant(childLayoutProps.length === 0, \"ScrollView child layout (\" + JSON.stringify(childLayoutProps) + \") \" + 'must be applied through the contentContainerStyle prop.');\n    }\n\n    var contentSizeChangeProps = {};\n\n    if (onContentSizeChange) {\n      contentSizeChangeProps = {\n        onLayout: this._handleContentOnLayout\n      };\n    }\n\n    var hasStickyHeaderIndices = !horizontal && Array.isArray(stickyHeaderIndices);\n    var children = hasStickyHeaderIndices || pagingEnabled ? React.Children.map(this.props.children, function (child, i) {\n      var isSticky = hasStickyHeaderIndices && stickyHeaderIndices.indexOf(i) > -1;\n\n      if (child != null && (isSticky || pagingEnabled)) {\n        return React.createElement(View, {\n          style: StyleSheet.compose(isSticky && styles.stickyHeader, pagingEnabled && styles.pagingEnabledChild)\n        }, child);\n      } else {\n        return child;\n      }\n    }) : this.props.children;\n    var contentContainer = React.createElement(View, _extends({}, contentSizeChangeProps, {\n      children: children,\n      collapsable: false,\n      ref: this._setInnerViewRef,\n      style: StyleSheet.compose(horizontal && styles.contentContainerHorizontal, contentContainerStyle)\n    }));\n    var baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\n    var pagingEnabledStyle = horizontal ? styles.pagingEnabledHorizontal : styles.pagingEnabledVertical;\n\n    var props = _objectSpread({}, other, {\n      style: [baseStyle, pagingEnabled && pagingEnabledStyle, this.props.style],\n      onTouchStart: this.scrollResponderHandleTouchStart,\n      onTouchMove: this.scrollResponderHandleTouchMove,\n      onTouchEnd: this.scrollResponderHandleTouchEnd,\n      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,\n      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,\n      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,\n      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,\n      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,\n      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,\n      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,\n      onScroll: this._handleScroll,\n      onResponderGrant: this.scrollResponderHandleResponderGrant,\n      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,\n      onResponderTerminate: this.scrollResponderHandleTerminate,\n      onResponderRelease: this.scrollResponderHandleResponderRelease,\n      onResponderReject: this.scrollResponderHandleResponderReject\n    });\n\n    var ScrollViewClass = ScrollViewBase;\n    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');\n\n    if (refreshControl) {\n      return React.cloneElement(refreshControl, {\n        style: props.style\n      }, React.createElement(ScrollViewClass, _extends({}, props, {\n        ref: this._setScrollViewRef,\n        style: baseStyle\n      }), contentContainer));\n    }\n\n    return React.createElement(ScrollViewClass, _extends({}, props, {\n      ref: this._setScrollViewRef\n    }), contentContainer);\n  },\n  _handleContentOnLayout: function _handleContentOnLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n        width = _e$nativeEvent$layout.width,\n        height = _e$nativeEvent$layout.height;\n    this.props.onContentSizeChange(width, height);\n  },\n  _handleScroll: function _handleScroll(e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.props.onScroll && !this.props.scrollEventThrottle) {\n        console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + \"cause frame drops, use a bigger number if you don't need as \" + 'much precision.');\n      }\n    }\n\n    if (this.props.keyboardDismissMode === 'on-drag') {\n      dismissKeyboard();\n    }\n\n    this.scrollResponderHandleScroll(e);\n  },\n  _setInnerViewRef: function _setInnerViewRef(component) {\n    this._innerViewRef = component;\n  },\n  _setScrollViewRef: function _setScrollViewRef(component) {\n    this._scrollViewRef = component;\n  }\n});\nvar commonStyle = {\n  flexGrow: 1,\n  flexShrink: 1,\n  // Enable hardware compositing in modern browsers.\n  // Creates a new layer with its own backing surface that can significantly\n  // improve scroll performance.\n  transform: [{\n    translateZ: 0\n  }],\n  // iOS native scrolling\n  WebkitOverflowScrolling: 'touch'\n};\nvar styles = StyleSheet.create({\n  baseVertical: _objectSpread({}, commonStyle, {\n    flexDirection: 'column',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }),\n  baseHorizontal: _objectSpread({}, commonStyle, {\n    flexDirection: 'row',\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  }),\n  contentContainerHorizontal: {\n    flexDirection: 'row'\n  },\n  stickyHeader: {\n    position: 'sticky',\n    top: 0,\n    zIndex: 10\n  },\n  pagingEnabledHorizontal: {\n    scrollSnapType: 'x mandatory'\n  },\n  pagingEnabledVertical: {\n    scrollSnapType: 'y mandatory'\n  },\n  pagingEnabledChild: {\n    scrollSnapAlign: 'start'\n  }\n});\nexport default ScrollView;","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\nvar performance = require(\"./performance\");\n\nvar performanceNow;\n/**\n * Detect if we can use `window.performance.now()` and gracefully fallback to\n * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now\n * because of Facebook's testing infrastructure.\n */\n\nif (performance.now) {\n  performanceNow = function performanceNow() {\n    return performance.now();\n  };\n} else {\n  performanceNow = function performanceNow() {\n    return Date.now();\n  };\n}\n\nmodule.exports = performanceNow;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar performance;\n\nif (ExecutionEnvironment.canUseDOM) {\n  performance = window.performance || window.msPerformance || window.webkitPerformance;\n}\n\nmodule.exports = performance || {};","import { createContext } from 'react';\nexport function createSSRManager() {\n  var promiseSet = new Set();\n  return {\n    hasPromises: function hasPromises() {\n      return promiseSet.size > 0;\n    },\n    register: function register(promise) {\n      promiseSet.add(promise);\n    },\n    consumeAndAwaitPromises: function consumeAndAwaitPromises() {\n      var promises = Array.from(promiseSet);\n      promiseSet.clear();\n      return Promise.all(promises);\n    }\n  };\n}\nexport var SSRContext = createContext(null);","import isPlainObject from 'lodash/isPlainObject';\nexport function objToKey(obj) {\n  if (!isPlainObject(obj)) {\n    return obj;\n  }\n\n  var sortedObj = Object.keys(obj).sort().reduce(function (result, key) {\n    result[key] = objToKey(obj[key]);\n    return result;\n  }, {});\n  return JSON.stringify(sortedObj);\n}\nexport function isPromiseLike(value) {\n  return value != null && typeof value.then === 'function';\n}\nexport function compact(obj) {\n  return Object.keys(obj).reduce(function (acc, key) {\n    if (obj[key] !== undefined) {\n      acc[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\n}","function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { print } from 'graphql/language/printer';\nimport { objToKey } from './utils';\nvar cachedQueriesByClient = new WeakMap();\nexport function getCachedObservableQuery(client, options) {\n  var queriesForClient = getCachedQueriesForClient(client);\n  var cacheKey = getCacheKey(options);\n  var observableQuery = queriesForClient.get(cacheKey);\n\n  if (observableQuery == null) {\n    observableQuery = client.watchQuery(options);\n    queriesForClient.set(cacheKey, observableQuery);\n  }\n\n  return observableQuery;\n}\nexport function invalidateCachedObservableQuery(client, options) {\n  var queriesForClient = getCachedQueriesForClient(client);\n  var cacheKey = getCacheKey(options);\n  queriesForClient.delete(cacheKey);\n}\n\nfunction getCachedQueriesForClient(client) {\n  var queriesForClient = cachedQueriesByClient.get(client);\n\n  if (queriesForClient == null) {\n    queriesForClient = new Map();\n    cachedQueriesByClient.set(client, queriesForClient);\n  }\n\n  return queriesForClient;\n}\n\nfunction getCacheKey(_ref) {\n  var query = _ref.query,\n      options = _objectWithoutPropertiesLoose(_ref, [\"query\"]);\n\n  return print(query) + \"@@\" + objToKey(options);\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ApolloError } from 'apollo-client';\nimport { useContext, useEffect, useMemo, useState } from 'react';\nimport { useApolloClient } from './ApolloContext';\nimport { SSRContext } from './internal/SSRContext';\nimport actHack from './internal/actHack';\nimport { getCachedObservableQuery, invalidateCachedObservableQuery } from './queryCache';\nimport { compact, objToKey } from './utils';\nexport function useQuery(query, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$ssr = _ref.ssr,\n      ssr = _ref$ssr === void 0 ? true : _ref$ssr,\n      _ref$skip = _ref.skip,\n      skip = _ref$skip === void 0 ? false : _ref$skip,\n      _ref$suspend = _ref.suspend,\n      suspend = _ref$suspend === void 0 ? false : _ref$suspend,\n      pollInterval = _ref.pollInterval,\n      _ref$notifyOnNetworkS = _ref.notifyOnNetworkStatusChange,\n      notifyOnNetworkStatusChange = _ref$notifyOnNetworkS === void 0 ? false : _ref$notifyOnNetworkS,\n      overrideClient = _ref.client,\n      context = _ref.context,\n      metadata = _ref.metadata,\n      variables = _ref.variables,\n      actualCachePolicy = _ref.fetchPolicy,\n      errorPolicy = _ref.errorPolicy,\n      fetchResults = _ref.fetchResults;\n\n  var client = useApolloClient(overrideClient);\n  var ssrManager = useContext(SSRContext);\n  var ssrInUse = ssr && ssrManager; // Skips when `skip: true` or SSRContext passed but `ssr: false`\n\n  var shouldSkip = skip || ssrManager != null && !ssr;\n  var fetchPolicy = ssrInUse && ( // Taken from https://github.com/apollographql/react-apollo/blob/2d7e48b7d0c26e792e1ed26e98bb84d8fba5bb8a/src/Query.tsx#L167-L169\n  actualCachePolicy === 'network-only' || actualCachePolicy === 'cache-and-network') ? 'cache-first' : actualCachePolicy;\n  var watchQueryOptions = useMemo(function () {\n    return compact({\n      context: context,\n      errorPolicy: errorPolicy,\n      fetchPolicy: fetchPolicy,\n      fetchResults: fetchResults,\n      metadata: metadata,\n      notifyOnNetworkStatusChange: notifyOnNetworkStatusChange,\n      pollInterval: pollInterval,\n      query: query,\n      variables: variables\n    });\n  }, [query, pollInterval, notifyOnNetworkStatusChange, context && objToKey(context), metadata && objToKey(metadata), variables && objToKey(variables), fetchPolicy, errorPolicy, fetchResults]);\n  var observableQuery = useMemo(function () {\n    return getCachedObservableQuery(client, watchQueryOptions);\n  }, [client, watchQueryOptions]);\n\n  var _useState = useState(0),\n      responseId = _useState[0],\n      setResponseId = _useState[1];\n\n  var currentResult = useMemo(function () {\n    var helpers = {\n      fetchMore: observableQuery.fetchMore.bind(observableQuery),\n      refetch: observableQuery.refetch.bind(observableQuery),\n      startPolling: observableQuery.startPolling.bind(observableQuery),\n      stopPolling: observableQuery.stopPolling.bind(observableQuery),\n      updateQuery: observableQuery.updateQuery.bind(observableQuery)\n    };\n    var result = observableQuery.currentResult(); // return the old result data when there is an error\n\n    var data = result.data;\n\n    if (result.error || result.errors) {\n      data = _extends({}, result.data, (observableQuery.getLastResult() || {}).data);\n    }\n\n    if (shouldSkip) {\n      // Taken from https://github.com/apollographql/react-apollo/blob/5cb63b3625ce5e4a3d3e4ba132eaec2a38ef5d90/src/Query.tsx#L376-L381\n      return _extends({}, helpers, {\n        data: undefined,\n        error: undefined,\n        loading: false,\n        networkStatus: undefined\n      });\n    }\n\n    return _extends({}, helpers, {\n      data: data,\n      error: result.errors && result.errors.length > 0 ? new ApolloError({\n        graphQLErrors: result.errors\n      }) : result.error,\n      errors: result.errors,\n      loading: result.loading,\n      // don't try to return `networkStatus` when suspense it's used\n      // because it's unreliable in that case\n      // https://github.com/trojanowski/react-apollo-hooks/pull/68\n      networkStatus: suspend ? undefined : result.networkStatus,\n      partial: result.partial\n    });\n  }, [shouldSkip, responseId, observableQuery]);\n  useEffect(function () {\n    if (shouldSkip) {\n      return;\n    }\n\n    var invalidateCurrentResult = function invalidateCurrentResult() {\n      // A hack to get rid React warnings during tests. The default\n      // implementation of `actHack` just invokes the callback immediately.\n      // In tests, it's replaced with `act` from react-testing-library.\n      // A better solution welcome.\n      actHack(function () {\n        setResponseId(function (x) {\n          return x + 1;\n        });\n      });\n    };\n\n    var subscription = observableQuery.subscribe(invalidateCurrentResult, invalidateCurrentResult);\n    invalidateCachedObservableQuery(client, watchQueryOptions);\n    return function () {\n      subscription.unsubscribe();\n    };\n  }, [shouldSkip, observableQuery]);\n  ensureSupportedFetchPolicy(suspend, fetchPolicy);\n\n  if (currentResult.partial) {\n    if (suspend) {\n      // throw a promise - use the react suspense to wait until the data is\n      // available\n      throw observableQuery.result();\n    }\n\n    if (ssrInUse) {\n      ssrManager.register(observableQuery.result());\n    }\n  }\n\n  return currentResult;\n}\n\nfunction ensureSupportedFetchPolicy(suspend, fetchPolicy) {\n  if (suspend && fetchPolicy && fetchPolicy !== 'cache-first') {\n    throw new Error(\"Fetch policy \" + fetchPolicy + \" is not supported without 'suspend: false'\");\n  }\n}","export default function actHack(callback) {\n  callback();\n}","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}